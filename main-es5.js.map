{"version":3,"sources":["webpack:///node_modules/base64-js/index.js","webpack:///node_modules/buffer/index.js","webpack:///node_modules/ieee754/index.js","webpack:///src/assets/lib/cpupow.js","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/account-details/account-details.component.html","webpack:///src/app/components/account-details/account-details.component.ts","webpack:///src/app/components/accounts/accounts.component.html","webpack:///src/app/components/accounts/accounts.component.ts","webpack:///src/app/components/address-book/address-book.component.html","webpack:///src/app/components/address-book/address-book.component.ts","webpack:///src/app/components/change-rep-widget/change-rep-widget.component.html","webpack:///src/app/components/change-rep-widget/change-rep-widget.component.ts","webpack:///src/app/components/configure-app/configure-app.component.html","webpack:///src/app/components/configure-app/configure-app.component.ts","webpack:///src/app/components/configure-wallet/configure-wallet.component.html","webpack:///src/app/components/configure-wallet/configure-wallet.component.ts","webpack:///src/app/components/converter/converter.component.ts","webpack:///src/app/components/converter/converter.component.html","webpack:///src/app/components/helpers/nano-account-id/nano-account-id.component.ts","webpack:///src/app/components/helpers/nano-account-id/nano-account-id.component.html","webpack:///src/app/components/import-address-book/import-address-book.component.html","webpack:///src/app/components/import-address-book/import-address-book.component.ts","webpack:///src/app/components/import-wallet/import-wallet.component.html","webpack:///src/app/components/import-wallet/import-wallet.component.ts","webpack:///src/app/components/manage-representatives/manage-representatives.component.html","webpack:///src/app/components/manage-representatives/manage-representatives.component.ts","webpack:///src/app/components/manage-wallet/manage-wallet.component.html","webpack:///src/app/components/manage-wallet/manage-wallet.component.ts","webpack:///src/app/components/notifications/notifications.component.ts","webpack:///src/app/components/notifications/notifications.component.html","webpack:///src/app/components/qr-generator/qr-generator.component.html","webpack:///src/app/components/qr-generator/qr-generator.component.ts","webpack:///src/app/components/qr-modal/qr-modal.component.ts","webpack:///src/app/components/qr-modal/qr-modal.component.html","webpack:///src/app/components/qr-scan/qr-scan.component.ts","webpack:///src/app/components/qr-scan/qr-scan.component.html","webpack:///src/app/components/receive/receive.component.html","webpack:///src/app/components/receive/receive.component.ts","webpack:///src/app/components/remote-signing/remote-signing.component.ts","webpack:///src/app/components/remote-signing/remote-signing.component.html","webpack:///src/app/components/representatives/representatives.component.html","webpack:///src/app/components/representatives/representatives.component.ts","webpack:///src/app/components/send/send.component.html","webpack:///src/app/components/send/send.component.ts","webpack:///src/app/components/sign/sign.component.html","webpack:///src/app/components/sign/sign.component.ts","webpack:///src/app/components/sweeper/sweeper.component.html","webpack:///src/app/components/sweeper/sweeper.component.ts","webpack:///src/app/components/transaction-details/transaction-details.component.html","webpack:///src/app/components/transaction-details/transaction-details.component.ts","webpack:///src/app/components/wallet-widget/wallet-widget.component.html","webpack:///src/app/components/wallet-widget/wallet-widget.component.ts","webpack:///src/app/pipes/account.pipe.ts","webpack:///src/app/pipes/amount-split.pipe.ts","webpack:///src/app/pipes/currency-symbol.pipe.ts","webpack:///src/app/pipes/fiat.pipe.ts","webpack:///src/app/pipes/rai.pipe.ts","webpack:///src/app/pipes/squeeze.pipe.ts","webpack:///src/app/services/address-book.service.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/app-settings.service.ts","webpack:///src/app/services/desktop.service.ts","webpack:///src/app/services/index.ts","webpack:///src/app/services/ledger.service.ts","webpack:///src/app/services/modal.service.ts","webpack:///src/app/services/nano-block.service.ts","webpack:///src/app/services/node.service.ts","webpack:///src/app/services/notification.service.ts","webpack:///src/app/services/pow.service.ts","webpack:///src/app/services/price.service.ts","webpack:///src/app/services/qr-modal.service.ts","webpack:///src/app/services/remote-sign.service.ts","webpack:///src/app/services/representative.service.ts","webpack:///src/app/services/util.service.ts","webpack:///src/app/services/wallet.service.ts","webpack:///src/app/services/websocket.service.ts","webpack:///src/app/services/work-pool.service.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///path (ignored)","webpack:///util (ignored)","webpack:///crypto (ignored)","webpack:///util (ignored)?b9ed","webpack:///util (ignored)?4083","webpack:///util (ignored)?052b","webpack:///util (ignored)?9bac"],"names":["exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","e","defineProperty","enumerable","get","isBuffer","undefined","buffer","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","value","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","slice","array","obj","copy","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","hi","lo","src","dst","constructor","name","alphabet","table","i16","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","isNaN","floor","log","LN2","module","Worker","webpackEmptyAsyncContext","req","Promise","resolve","then","keys","id","routes","path","component","AppRoutingModule","forRoot","useHash","desktop","imports","declarations","AppComponent","walletService","addressBook","settings","websocket","notifications","nodeService","representative","router","workPool","ledger","price","wallet","node","bademPrice","fiatTimeout","inactiveSeconds","windowHeight","navExpanded","showAccountsDropdown","searchData","isConfigured","events","subscribe","innerHeight","event","selectButton","nativeElement","contains","accountsDropdown","window","loadAppSettings","loadAddressBook","loadWorkCache","loadStoredWallet","location","pathname","navigate","selectedAccountId","currentUpdatedAccount","accounts","find","selectedAccount","reloadBalances","localStorage","getItem","search","fragment","removeItem","queryParams","urlSearch","URLSearchParams","forEach","key","connect","loadRepresentativeList","locked","hasPendingTransactions","pendingOption","sendWarning","identifier","isLedgerWallet","isBrokenBrowser","sendLedgerChromeWarning","addEventListener","lockWallet","protocolText","detail","stripped","splice","startsWith","setInterval","lockInactivityMinutes","password","sendSuccess","serverAPI","updateFiatPrices","scrollTop","account","selectedAccount$","next","toggleAccountsDropdown","saveWalletExport","sendInfo","displayCurrency","getAppSetting","getPrice","reloadFiatBalances","setTimeout","updateIdleTime","toggleNav","selectAccount","performSearch","closeNav","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","AccountDetailsComponent","route","api","repService","util","bademBlock","qrModalService","badem","zeroHash","accountHistory","pendingBlocks","pageSize","maxPageSize","repLabel","addressBookEntry","accountID","walletAccount","showEditAddressBook","addressBookModel","showEditRepresentative","representativeModel","representativeResults$","showRepresentatives","representativeListMatch","qrCodeImage","routerSub","priceSub","statsRefreshEnabled","addressBookResults$","showAddressBook","addressBookMatch","amounts","shortName","selectedAmount","amount","amountRaw","amountFiat","rawAmount","fromAccount","toAccount","toAccountID","toAddressBook","toAccountStatus","amountStatus","repStatus","qrString","qrCodeImageBlock","qrCodeImageBlockReceive","blockHash","blockHashReceive","remoteVisible","blockTypes","blockTypeSelected","representativeList","clearRemoteVars","params","snapshot","sign","loadAccountDetails","lastPrice$","balanceFiat","rawToMbadem","balance","times","lastPrice","toNumber","pendingFiat","pending","localReps","getSortedRepresentatives","refresh","getAccountName","getWalletAccount","accountInfo","knownRepresentative","getRepresentative","minimumReceive","minAmount","mbademToRaw","pendingLimit","blocks","block","hasOwnProperty","source","local_timestamp","addressBookName","hash","plus","pendingRaw","reduce","prev","current","balanceRaw","mod","getAccountHistory","qrCode","unsubscribe","resetPage","history","additionalBlocksInfo","map","h","subtype","link","link_as_account","getPublicAccountID","hex","toUint8","filter","blocksInfo","matchingBlock","accountInHistory","blockData","block_account","walletIsLocked","repAccount","valid","isValidAccount","generateChange","changed","sendError","message","newRep","deleteAddress","saveAddress","matches","rep","searchRepresentatives","validateRepresentative","validateAmount","getAmountBaseValue","lte","precision","fiatAmount","div","isNumeric","bademVal","rawToBadem","bademAmount","getAmountValueFromBase","bademToRaw","searchAddressBook","validateDestination","frontier","isValidBademAmount","maxAmount","syncFiatPrice","kbademToRaw","rawToKbadem","isValid","to","balanceBN","lessThan","minus","remainingDecimal","defaultRepresentative","getRandomRepresentative","previous","getAccountPublicKey","blockInfo","previousBlockInfo","jsonBlock","JSON","parse","contents","blockDataPrevious","signature","stringify","errorCorrectionLevel","scale","pendingHash","UIkit","modal","show","toAcct","openEquiv","previousBlock","srcBlockInfo","srcAmount","newBalance","newBalanceDecimal","qrData","balanceDecimal","state","reference","qrResult","openQR","content","AccountsComponent","notificationService","representatives","isSingleKeyWallet","viewAdvanced","newAccountIndex","accountsChanged$","reloadRepWarning$","pipe","detectChangeableReps","isLocked","accountIndex","index","existingAccount","addWalletAccount","newAccount","sort","removeWalletAccount","status","READY","getLedgerAccount","removeNotification","createAccount","AddressBookComponent","addressBookService","activePanel","addressBook$","newAddressAccount","newAddressName","addressBookShowQRExport","addressBookQRExportUrl","addressBookQRExportImg","importExport","document","getElementById","element","elements","children","result","datas","el","dataset","setAddressBookOrder","focus","nameExists","cancelNewAddress","err","exportData","base64Data","btoa","exportUrl","fileName","triggerFileDownload","files","file","reader","FileReader","onload","fileData","importData","encoded","readAsText","blob","Blob","iOS","navigator","platform","test","msSaveOrOpenBlob","msSaveBlob","elem","createElement","objUrl","URL","createObjectURL","href","download","body","appendChild","click","removeChild","revokeObjectURL","ChangeRepWidgetComponent","blockService","changeableRepresentatives","changeableReps","displayedRepresentatives","showRepChangeRequired","showRepHelp","selectedAccountHasRep","initialLoadComplete","walletReps$","reps","updateChangeableRepresentatives","updateDisplayedRepresentatives","acc","newWallet$","shouldReload","resetRepresentatives","newOpenBlock$","getRepresentativesOverview","changeableReps$","some","changeRequired","updateSelectedAccountHasRep","getDisplayedRepresentatives","displayedReps","repRequiringChange","delegatedWeight","changeableRep","every","displayedRep","assign","selectedAccountRep","displayedRepsAllAccounts","includeRepRequiringChange","sortedRepresentatives","ms","clickedRep","accountsToChangeRepFor","hideOverview","showRecommended","allAccounts","ConfigureAppComponent","appSettings","denominations","selectedDenomination","storageOptions","selectedStorage","currencies","selectedCurrency","inactivityOptions","selectedInactivityMinutes","powOptions","selectedPoWOption","pendingOptions","selectedPendingOption","serverOptions","selectedServer","serverAPIUpdated","serverWS","serverAuth","nodeBlockCount","nodeUnchecked","nodeCemented","nodeUncemented","peersStakeReq","peersStakeTotal","nodeVendor","nodeNetwork","shouldRandom","showServerValues","showStatValues","showServerConfigs","loadFromSettings","updateNodeStats","blockCount","count","unchecked","cemented","warn","confirmationQuorum","quorumData","peers_stake_required","peers_stake_total","version","node_vendor","network","matchingCurrency","matchingStorage","walletStore","matchingInactivityMinutes","matchingPowOption","powSource","matchingPendingOption","serverName","newCurrency","reloadFiat","setAppSetting","newStorage","newPoW","minReceive","resaveWallet","reloadPending","hasWebGLSupport","hasWorkerSupport","newSettings","setAppSettings","forceReconnect","newServer","custom","ws","auth","confirm","clearCache","resetWallet","removeWalletData","deleteCache","clearAddressBook","clearAppSettings","resetRepresentativeList","updateServerSettings","updateDisplaySettings","updateWalletSettings","serverConfigChange","clearWorkCache","clearWalletData","clearAllData","panels","INDEX_MAX","ConfigureWalletComponent","ledgerService","create","isNewWallet","hasConfirmedBackup","importSeed","isExpanded","keyString","newWalletSeed","newWalletMnemonic","newWalletMnemonicLines","newPassword","importSeedModel","importPrivateKeyModel","importExpandedKeyModel","importSeedMnemonicModel","importSeedBip39MnemonicModel","importSeedBip39MnemonicIndexModel","importSeedBip39MnemonicPasswordModel","walletPasswordModel","walletPasswordConfirmModel","validIndex","indexMax","selectedImportOption","importOptions","ledgerStatus","getCurrentNavigation","extras","seed","toggleImport","method","importLedgerWallet","createWalletFromSeed","storePassword","informNewWallet","createWalletFromSingleKey","refreshOnly","loadLedger","NOT_CONNECTED","LOCKED","confirmWalletOverwrite","confirmed","createLedgerWallet","newWallet","existingSeed","mnemonic","words","newSeed","toUpperCase","substring","bip39Seed","privateKey","seedBytes","generateSeedBytes","fromUint8","lines","backup","createNewWallet","saveNewWallet","importExistingWallet","importSingleKeyWallet","panel","walletEncrypted","invalid","isValidIndex","ConverterComponent","Mbadem","raw","invalidMbadem","invalidRaw","invalidFiat","fiatPrice","config","DECIMAL_PLACES","unitChange","unit","NANO","isValidAmount","dividedBy","BademAccountIdComponent","middle","firstCharacters","middleCharacters","lastCharacters","isFlex","openingChars","closingChars","ImportAddressBookComponent","validImportData","conflictingEntries","newEntries","existingEntries","hostname","queryData","importDataError","decodedData","atob","importBlob","entry","originalName","importedCount","ImportWalletComponent","walletPassword","decryptedBytes","decrypt","decryptedSeed","Utf8","loadImportedWallet","accountsIndex","indexes","ManageRepresentativesComponent","representatives$","online","onlineReps","newRepAccount","newRepName","newRepTrusted","newRepWarn","getOnlineRepresentatives","trusted","saveRepresentative","cancelNewRep","representativesOnline","deleteRepresentative","ManageWalletComponent","confirmPassword","showQRExport","QRExportUrl","QRExportImg","generateExportUrl","generateExportData","NotificationsComponent","notificationLength","notifications$","notification","options","existingNotification","newNotification","cssClass","getCssClass","removeNotification$","findIndex","QrGeneratorComponent","input","width","round","log2","generateQR","QrModalComponent","activeModal","notifcationService","title","currentDevice","badem_scheme","formatsEnabled","CODE_128","DATA_MATRIX","EAN_13","QR_CODE","torchEnabled","torchAvailable$","tryHarder","devices","availableDevices","hasDevices","Boolean","resultString","isValidHash","url","protocol","close","selected","device","deviceId","has","hasPermission","isCompatible","onDeviceSelectChange","onCodeResult","onHasPermission","onCamerasFound","onTorchCompatible","QrScanComponent","remoteSignService","hasAccounts","qrResultString","isValidSeed","handleSeed","searchParams","handlePrivateKey","navigateSignBlock","navigateProcessBlock","ReceiveComponent","pendingBelowThreshold","pendingAccountModel","qrAccount","qrAmount","selAccountInit","loadingIncomingTxList","changeQRAccount","loadPendingForAll","walletPendingBlocks","walletPendingBlocksBelowThreshold","accountsFrontiers","p","frontiers","addWorkToCache","pendingBlock","sourceBlock","loading","generateReceive","newBlock","clearPendingBlocks","getPending","RemoteSigningComponent","unsignedBlock","signedBlock","unsignedStatus","signedStatus","checkSignBlock","checkProcessBlock","badScheme","validateUnsigned","navigateBlock","validateSigned","RepresentativesComponent","representativeService","changeAccountID","toRepresentativeID","representativeOverview","changingRepresentatives","selectedAccounts","fullAccounts","recommendedReps","recommendedRepsPaginated","recommendedRepsLoading","selectedRecommendedRep","showRecommendedReps","repsPerPage","currentRepPage","newAccountID","selectRepresentative","repOverview","o","loadRecommendedReps","repInput","scrollIntoView","behavior","allExists","totalSupply","calculatePage","alias","accountsToChange","accountsNeedingChange","useCachedReps","nacl","SendComponent","nodeApi","fromAccountID","fromAddressBook","confirmingTransaction","findFirstAccount","isZero","accountIDWithBalance","gt","generateSend","newHash","resetRaw","SignComponent","shouldSign","fromAccountBalance","toAccountBalance","currentBlock","txType","txTypes","txTypeMessage","shouldGenWork","signTypes","signTypeSelected","signatureAccount","signatureMessage","signatureMessageSuccess","nullBlock","validSeed","validPrivkey","sourceSecret","sourcePriv","privateKeyExpanded","processedHash","finalSignature","thresholds","selectedThreshold","selectedThresholdOld","n_account","n_previous","n_representative","n_balance","n_link","n_signature","work","n_work","p_account","p_previous","p_representative","p_balance","p_link","p_signature","verifyBlock","send","eq","change","lt","receive","recipientInfo","prepareTransaction","open","previousHash","hashStateBlock","seedChange","privkeyChange","prepareWork","workBlock","removeFromCache","powChange","signTypeChange","isLedger","keyPair","secretKey","expanded","signOfflineBlock","lenth","clean","workExists","getWork","process","processResponse","propName","keyType","checkMasterKey","verifyKey","privKey","convertPrivateKey","pubKey","generateAccountKeyPair","publicKey","address","privKey1","privKey2","generateAccountSecretKeyBytes","generate","pubKey1","pubKey2","address1","address2","isHex","SWEEP_MAX_INDEX","SWEEP_MAX_PENDING","SweeperComponent","incomingMax","myAccountModel","sourceWallet","destinationAccount","startIndex","endIndex","maxIncoming","sweeping","adjustedBalance","subType","keyCount","pendingCallback","totalSwept","customAccountSelected","validDestination","validStartIndex","validEndIndex","validMaxIncoming","destinationChange","row","linebreak","logArea","scrollHeight","sendCallback","useNanoPrefix","appendLog","bademAmountSent","big","add","workInputHash","processPending","callback","accountCallback","pendingLimitSorted","pendingSorted","bind","BADEM","processSend","validResponse","createPendingBlocks","previous_","privKeys","sleep","processAccount","processIndexRecursive","k","sweepContinue","setDestination","startIndexChange","endIndexChange","maxIncomingChange","TransactionDetailsComponent","transaction","hashID","blockType","isStateBlock","transactionJSON","showBlockData","loadTransaction","legacyFromAccount","hashData","hashContents","isOpen","prevRes","prevData","source_account","prevBalance","curBalance","balDifference","isNegative","destination","WalletWidgetComponent","unlockPassword","ledgerStatus$","loaded","unlockWallet","unlocked","hide","AccountPipe","args","AmountSplitPipe","idx","splitAmount","CurrencySymbolPipe","currency","FiatPipe","currencyCode","display","digits","locale","toFixed","RaiPipe","mbadem","kbadem","opts","denomination","hideText","hasRawValue","newVal","fixed","re","RegExp","match","SqueezePipe","firstChars","lastChars","AddressBookService","storeKey","addressBookStore","existingName","saveAddressBook","existingAccountIndex","setItem","addressList","ApiService","http","action","skipError","apiUrl","setOffline","setLoading","header","headers","post","toPromise","setOnline","loadServerSettings","request","include_only_confirmed","threshold","hashes","include_cemented","watch_work","weight","sorting","AppSettingsService","displayDenomination","lockOnClose","walletVersion","settingsStore","matchingServerOption","availableServers","server","randomServerOption","random","saveAppSettings","settingsObject","u","DesktopService","require","_ipc","ipcRenderer","channel","listener","on","STATUS_CODES","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INVALID_SIGNATURE","CACHE_MISS","LedgerStatus","zeroBlock","LedgerService","walletPrefix","waitTimeout","normalTimeout","pollInterval","pollingLedger","transport","isDesktop","queryingDesktopLedger","desktopMessage$","configureDesktop","statusText","eventType","filterFn","reject","response","shouldSkip","errorMessage","showOnScreen","getDesktopResponse","details","cacheData","isChromium","winNav","vendorName","vendor","isOpera","isIEedge","userAgent","isIOSChrome","hideNotifications","newStatus","setExchangeTimeout","resetLedger","resolved","getAppConfiguration","ledgerConfig","accountDetails","pollLedgerStatus","statusCode","blockResponse","updateCacheDesktop","cacheBlock","ledgerPath","signBlockDesktop","signBlock","getAddress","getLedgerAccountDesktop","getLedgerAccountWeb","checkLedgerStatus","ModalService","showAccount$","BademBlockService","representativeAccounts","representativeAccount","ledgerBlock","sendLedgerNotification","updateCache","sig","clearLedgerNotification","sendLedgerDeniedNotification","validateAccount","signStateBlock","recipient","newBalancePadded","informNewRep","prevBlock","genWork","multiplier","updateCacheOffline","hashBytes","signed","detached","NodeService","msg","NotificationService","sendNotification","baseThreshold","hardwareConcurrency","workerCount","workerList","PowService","webGLAvailable","webGLTested","PoWPool","parallelQueue","processingQueueItem","existingPoW","promise","addQueueItem","queueItem","getDeferredPromise","processQueue","canvas","webGL","getContext","processNextQueueItem","determineBestPoWMethod","getHashServer","getHashCPUWorker","getHashWebGL","shift","newThreshold","difficultyFromMultiplier","workGenerate","PoW","cwrap","Date","now","worker","postMessage","workerIndex","workThreshold","onmessage","workerwork","terminate","defer","PriceService","lastPriceBTC","loadSavedPrice","quote","market_data","current_price","currencyPrice","btcPrice","btc","savePrice","priceData","QrModalService","modalService","modalRef","windowClass","componentInstance","providedIn","RemoteSignService","paramsSign","paramsProcess","stringdata","isValidSignature","isValidWork","RepresentativeService","walletReps","onlineStakeTotal","defaultRepresentatives","cachedReps","needsChange","highWeight","veryHighWeight","lowUptime","veryLowUptime","getAccountsDetails","uniqueReps","getUniqueRepresentatives","getRepresentativesDetails","quorum","online_stake_total","allReps","repOnline","knownRep","nanoWeight","percent","markedToAvoid","daysSinceLastVoted","known","uptime","score","label","gte","additionalData","fullRep","existingRep","all","repInfos","representativeStore","newRepresentative","existingRepresentative","r","saveRepresentatives","existingIndex","weightedReps","STATE_BLOCK_PREAMBLE","TxType","UtilService","toUint4","hexToUint4","uint8ToHex","hexToUint8","uint4","toUint5","uint4ToUint5","uint4ToUint8","uint5","uint5ToString","uint8ToUint4","fromHex","toHex","dec","decToHex","bigAdd","validateWork","shuffle","hexValue","uintValue","z","right","left","uint4ToHex","letter_list","uint5ToUint4","aux","decValue","sum","hexArray","pop","diff","insert","stringToUint5","string_array","isnum","accountBytes","context","newKey","accountSecretKeyBytes","fromSecretKey","accountPublicKeyBytes","prefix","accountHex","keyBytes","checksum","reverse","account_crop","key_uint4","array_crop","hash_uint4","key_array","blake_hash","equal_arrays","balancePadded","base_difficulty","big64","big_multiplier","big_base","dividedToIntegerBy","currentIndex","temporaryValue","randomIndex","cropped_array","array1","array2","randomBytes","WalletService","hasPending","processingPending","successfulBlocks","reloadingBalance","newTransactions$","shouldNotify","walletAccountIDs","processStateBlock","newAddressBook","reloadAddressBook","txAmount","addPendingBlock","processPendingBlocks","walletData","walletJson","newAccounts","walletType","loadWalletAccount","subscribeAccounts","encrypt","encryptedSeed","secret","scanAccounts","emptyAccountBuffer","emptyTicker","usedIndices","greatestUsedIndex","batchSize","batch","batchAccounts","batchAccountsArray","accountAddress","accountPublicKey","accountKeyPair","used","batchResponse","createSingleKeyAccount","nanoAccountID","pendingOriginal","accountName","createKeyedAccount","unsubscribeAccounts","accountIDs","accountsBalances","walletBalance","walletPending","walletPendingReal","balances","accountsPendingLimit","accountPending","updateAccountPending","loadPendingBlocksForWallet","createSeedAccount","createLedgerAccount","walletAccountIndex","existingHash","accountsPending","comparedTo","sortByAmount","nextBlock","receiveAmount","generateWalletExport","WebsocketService","queuedCommands","keepaliveTimeout","reconnectTimeout","keepaliveSet","socket","connected","subscribedAccounts","onclose","wsUrl","WebSocket","onopen","queueevent","keepalive","onerror","attemptReconnect","newEvent","topic","WorkPoolService","cacheLength","workCache","cachedIndex","saveWorkCache","cached","getPow","uniqByKeepLast","it","workCacheStore","Map","values","WelcomeComponent","donationAccount","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"951e00f48f67c9de9a63.worker.js\");\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {ConfigureWalletComponent} from './components/configure-wallet/configure-wallet.component';\nimport {AccountsComponent} from './components/accounts/accounts.component';\nimport {SendComponent} from './components/send/send.component';\nimport {AddressBookComponent} from './components/address-book/address-book.component';\nimport {ReceiveComponent} from './components/receive/receive.component';\nimport {ManageWalletComponent} from './components/manage-wallet/manage-wallet.component';\nimport {ConfigureAppComponent} from './components/configure-app/configure-app.component';\nimport {AccountDetailsComponent} from './components/account-details/account-details.component';\nimport {TransactionDetailsComponent} from './components/transaction-details/transaction-details.component';\nimport {ImportWalletComponent} from './components/import-wallet/import-wallet.component';\nimport { ImportAddressBookComponent } from './components/import-address-book/import-address-book.component';\nimport {RepresentativesComponent} from './components/representatives/representatives.component';\nimport {SweeperComponent} from './components/sweeper/sweeper.component';\nimport {QrScanComponent} from './components/qr-scan/qr-scan.component';\nimport {SignComponent} from './components/sign/sign.component';\nimport {RemoteSigningComponent} from './components/remote-signing/remote-signing.component';\nimport {ConverterComponent} from './components/converter/converter.component';\nimport {QrGeneratorComponent} from './components/qr-generator/qr-generator.component';\n\nimport { environment } from '../environments/environment';\nimport {ManageRepresentativesComponent} from './components/manage-representatives/manage-representatives.component';\n\nconst routes: Routes = [\n  { path: '', component: WelcomeComponent },\n  { path: 'accounts', component: AccountsComponent },\n  { path: 'account/:account', component: AccountDetailsComponent },\n  { path: 'address-book', component: AddressBookComponent },\n  { path: 'configure-wallet', component: ConfigureWalletComponent },\n  { path: 'configure-app', component: ConfigureAppComponent },\n  { path: 'import-address-book', component: ImportAddressBookComponent },\n  { path: 'import-wallet', component: ImportWalletComponent },\n  { path: 'manage-wallet', component: ManageWalletComponent },\n  { path: 'qr-scan', component: QrScanComponent },\n  { path: 'send', component: SendComponent },\n  { path: 'receive', component: ReceiveComponent },\n  { path: 'representatives', component: RepresentativesComponent },\n  { path: 'manage-representatives', component: ManageRepresentativesComponent },\n  { path: 'transaction/:transaction', component: TransactionDetailsComponent },\n  { path: 'sweeper', component: SweeperComponent },\n  { path: 'sign', component: SignComponent },\n  { path: 'remote-signing', component: RemoteSigningComponent },\n  { path: 'converter', component: ConverterComponent },\n  { path: 'qr-generator', component: QrGeneratorComponent },\n];\n\n@NgModule({\n  imports: [\n    // On the desktop apps, use hashes so it works properly using only index.html\n    RouterModule.forRoot(routes, { useHash: environment.desktop }),\n  ],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","<div uk-grid class=\"app\" uk-height-viewport (mousemove)=\"updateIdleTime()\" (keypress)=\"updateIdleTime()\">\n  <div class=\"uk-width-1-1\" style=\"position: relative; overflow-y: hidden;\">\n\n    <!-- Mobile top bar -->\n    <div uk-grid class=\"mobile-top-bar uk-hidden@s uk-background-primary\">\n      <div class=\"uk-width-1-2\">\n        <div class=\"nav-button\" (click)=\"toggleNav()\" style=\"cursor: pointer;\">\n          <span uk-icon=\"icon: menu;\"></span>\n          <span class=\"app-name\">BademVault</span>\n        </div>\n      </div>\n      <div class=\"uk-width-1-2 \" style=\"text-align: right;\">\n      </div>\n    </div>\n\n    <!-- Accounts dropdown -->\n    <div #accountsDropdown [class]=\"[ 'accounts-dropdown', showAccountsDropdown ? 'visible' : 'hidden' ]\">\n      <div class=\"header\">Currently Selected</div>\n      <div class=\"account active\" *ngIf=\"wallet.selectedAccount !== null\"> <!-- active badem_ account -->\n        <div class=\"name-column\">\n          <div class=\"name\">{{ wallet.selectedAccount.addressBookName ? wallet.selectedAccount.addressBookName : ('Account #' + wallet.selectedAccount.index) }}</div>\n          <div class=\"address\">{{ wallet.selectedAccount.id }}</div>\n        </div>\n        <div class=\"balance-column\">\n          <div class=\"balance primary\">{{ wallet.selectedAccount.balance | badem: settings.settings.displayDenomination }}</div>\n          <div class=\"balance converted\">{{ wallet.selectedAccount.balanceFiat | fiat: settings.settings.displayCurrency }}</div>\n        </div>\n      </div>\n      <div [class]=\"[ 'account', (wallet.selectedAccount === null) ? 'active' : 'inactive' ]\" (click)=\"selectAccount(null)\"> <!-- active/inactive total balance -->\n        <div class=\"name-column\">\n          <div class=\"name\">Total Balance</div>\n          <div class=\"address\"> </div>\n        </div>\n        <div class=\"balance-column\">\n          <div class=\"balance primary\">{{ wallet.balance | badem: settings.settings.displayDenomination }}</div>\n          <div class=\"balance converted\">{{ wallet.balanceFiat | fiat: settings.settings.displayCurrency }}</div>\n        </div>\n      </div>\n      <ng-container *ngFor=\"let account of wallet.accounts\"> <!-- inactive accounts -->\n        <div class=\"account inactive\" (click)=\"selectAccount(account)\" *ngIf=\"( (wallet.selectedAccount === null) || (wallet.selectedAccount.id !== account.id) )\">\n          <div class=\"name-column\">\n            <div class=\"name\">{{ account.addressBookName ? account.addressBookName : ('Account #' + account.index) }}</div>\n            <div class=\"address\">{{ account.id }}</div>\n          </div>\n          <div class=\"balance-column\">\n            <div class=\"balance primary\">\n              <span class=\"incoming-label\" *ngIf=\"account.pending.gt(0)\">\n                <span class=\"text-snippet\">New</span>\n                <span class=\"text-full\">+{{ account.pending | badem: 'mbadem,true' }}</span>\n              </span>\n              {{ account.balance | badem: settings.settings.displayDenomination }}\n            </div>\n            <div class=\"balance converted\">{{ account.balanceFiat | fiat: settings.settings.displayCurrency }}</div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Main content container-->\n    <div uk-grid class=\"app-grid\">\n      <div class=\"uk-width-1-4 nav-container\">\n        <div class=\"nav-header\">\n\n          <div uk-grid>\n            <div class=\"uk-width-expand\">\n\n              <div [class]=\"[ 'nav-nano-card', (wallet.selectedAccount === null) ? 'is-wallet' : 'is-card' ]\">\n                <div class=\"logo\"></div>\n                <div class=\"card-contents\">\n                  <div class=\"account-name-container\">\n                    <a [routerLink]=\"(\n                        (wallet.selectedAccount !== null)\n                      ? '/account/' + wallet.selectedAccount.id\n                      : '/accounts'\n                    )\" class=\"name\">{{\n                        (wallet.selectedAccount !== null)\n                      ? (\n                          wallet.selectedAccount.addressBookName\n                        ? wallet.selectedAccount.addressBookName\n                        : ('Account #' + wallet.selectedAccount.index)\n                      )\n                      : 'Total Balance'\n                    }}</a>\n                    <div #selectButton [class]=\"[ 'select-button', showAccountsDropdown ? 'open' : 'closed' ]\" (click)=\"toggleAccountsDropdown()\">\n                      <div class=\"circle\"></div>\n                      <div class=\"circle\"></div>\n                      <div class=\"circle\"></div>\n                    </div>\n                  </div>\n                  <div class=\"account-balances\">\n                    <ng-container *ngIf=\"node.status || !isConfigured()\">\n                      <div class=\"balance-container primary\">\n                        <div class=\"currency-name\">BADEM</div>\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balance : wallet.balance) | badem: 'mbadem,true' | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balance : wallet.balance) | badem: 'mbadem,true' | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                      <div class=\"balance-container converted\" *ngIf=\"settings.settings.displayCurrency\">\n                        <div class=\"currency-name\"><span class=\"estimate-symbol\">~</span>{{ settings.settings.displayCurrency }}</div>\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balanceFiat : wallet.balanceFiat) | fiat: settings.settings.displayCurrency | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount !== null ? wallet.selectedAccount.balanceFiat : wallet.balanceFiat) | fiat: settings.settings.displayCurrency | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"isConfigured() && (node.status === null)\">\n                      <div class=\"spinner-container\">\n                        <div uk-spinner=\"ratio: 0.6;\" uk-tooltip title=\"Attempting to connect to Badem node\"></div>\n                      </div>\n                    </ng-container>\n                  </div>\n                </div>\n              </div>\n\n              <ng-container *ngIf=\"(wallet.selectedAccount !== null) ? wallet.selectedAccount.pending.gt(0) : walletService.hasPendingTransactions()\">\n                <ng-container *ngIf=\"walletService.processingPending else notProcessingPending\">\n                  <div class=\"nav-action-receive\" *ngIf=\"walletService.processingPending\">\n                    <div class=\"icon\" uk-icon=\"icon: chevron-up; ratio: 1.2;\"></div>\n                    <div class=\"label\"><span uk-spinner=\"ratio: 0.5;\"></span>Processing Transactions...</div>\n                  </div>\n                </ng-container>\n                <ng-template #notProcessingPending>\n                  <ng-container *ngIf=\" (settings.settings.pendingOption !== 'manual') else manuallyReceivingPending \">\n                    <div class=\"nav-action-receive user-action-required uk-animation-slide-left\" *ngIf=\"walletService.isLocked()\">\n                      <div class=\"icon\" uk-icon=\"icon: chevron-up; ratio: 1.2;\"></div>\n                      <div class=\"label\">Unlock Wallet to Receive</div>\n                    </div>\n                  </ng-container>\n                  <ng-template #manuallyReceivingPending>\n                    <div class=\"nav-action-receive uk-animation-slide-left\">\n                      <div class=\"icon\" uk-icon=\"icon: chevron-up; ratio: 1.2;\"></div>\n                      <div class=\"label\">Set to Receive Manually</div>\n                    </div>\n                  </ng-template>\n                </ng-template>\n                <div class=\"nav-nano-card incoming-card uk-animation-slide-left\">\n                  <div class=\"card-contents\">\n                    <div class=\"account-name-container\">\n                      <a routerLink=\"/receive\" class=\"name\">Incoming Balance</a>\n                    </div>\n                    <div class=\"account-balances\">\n                      <div class=\"balance-container primary\">\n                        <div class=\"currency-name\">BADEM</div>\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pending : wallet.pending) | badem: 'mbadem,true' | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pending : wallet.pending) | badem: 'mbadem,true' | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                      <div class=\"balance-container converted\" *ngIf=\"settings.settings.displayCurrency\">\n                        <div class=\"currency-name\"><span class=\"estimate-symbol\">~</span>{{ settings.settings.displayCurrency }}</div>\n                        <div class=\"amount-container\">\n                          <div class=\"amount-integer\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pendingFiat : wallet.pendingFiat) | fiat: settings.settings.displayCurrency | amountsplit: 0 }}</div>\n                          <div class=\"amount-fractional\">{{ (wallet.selectedAccount ? wallet.selectedAccount.pendingFiat : wallet.pendingFiat) | fiat: settings.settings.displayCurrency | amountsplit: 1 }}</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"nav-separator-top\"></div>\n              </ng-container>\n\n              <div class=\"nav-status-row\" *ngIf=\"(node.status === false) && isConfigured()\">\n                <div class=\"status-icon\">\n                  <span class=\"uk-text-danger\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n                </div>\n                <div class=\"status-labels\" *ngIf=\"settings.settings.serverAPI\">\n                  <div class=\"label primary uk-text-danger\">Unable to connect to the server</div>\n                  <div class=\"label secondary\"><a (click)=\"retryConnection()\">Refresh</a> or <a routerLink=\"/configure-app\">select a different server</a></div>\n                </div>\n                <div class=\"status-labels\" *ngIf=\"!settings.settings.serverAPI\">\n                  <div class=\"label primary uk-text-danger\">Wallet is in offline mode</div>\n                  <div class=\"label secondary\"><a routerLink=\"/configure-app\">Select a server</a> to interact with the network</div>\n                </div>\n              </div>\n\n              <app-change-rep-widget *ngIf=\"isConfigured()\"></app-change-rep-widget>\n              <app-wallet-widget></app-wallet-widget>\n\n            </div>\n          </div>\n\n        </div>\n\n        <ul class=\"uk-nav uk-nav-default uk-nav-parent-icon left-nav\" uk-nav>\n          <li><a routerLink=\"/accounts\" routerLinkActive=\"active\"><div class=\"label\">Accounts</div></a></li>\n          <li><a routerLink=\"/send\" routerLinkActive=\"active\"><div class=\"label\">Send</div></a></li>\n          <li>\n            <a routerLink=\"/receive\" routerLinkActive=\"active\">\n              <div uk-grid>\n                <div class=\"uk-width-3-4\">\n                  <div class=\"label\">Receive</div>\n                </div>\n                <div class=\"uk-width-1-4 uk-text-center label-new\">\n                  <span *ngIf=\"walletService.hasPendingTransactions()\" class=\"uk-badge uk-text-top uk-align-center\"><div class=\"label\">New</div></span>\n                </div>\n              </div>\n            </a>\n          </li>\n          <li><a routerLink=\"/address-book\" routerLinkActive=\"active\"><div class=\"label\">Address Book</div></a></li>\n          <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\"><div class=\"label\">Scan QR Code</div></a></li>\n          <li class=\"uk-parent\">\n            <a href=\"#\">Settings</a>\n            <ul class=\"uk-nav-sub\">\n              <li><a routerLink=\"/representatives\" [queryParams]=\"\" routerLinkActive=\"active\"><div class=\"label\">Representatives</div></a></li>\n              <li><a routerLink=\"/configure-app\" routerLinkActive=\"active\"><div class=\"label\">App Settings</div></a></li>\n              <li><a routerLink=\"/manage-wallet\" routerLinkActive=\"active\"><div class=\"label\">Manage Wallet</div></a></li>\n              <li><a routerLink=\"/configure-wallet\" routerLinkActive=\"active\"><div class=\"label\">Configure New Wallet</div></a></li>\n            </ul>\n          </li>\n          <li class=\"uk-parent\">\n            <a href=\"#\">Advanced Tools</a>\n            <ul class=\"uk-nav-sub\">\n              <li><a routerLink=\"/sweeper\" routerLinkActive=\"active\"><div class=\"label\">Wallet Sweeper</div></a></li>\n              <li><a routerLink=\"/remote-signing\" routerLinkActive=\"active\"><div class=\"label\">Remote Signing</div></a></li>\n              <li><a routerLink=\"/converter\" routerLinkActive=\"active\"><div class=\"label\">Unit Converter</div></a></li>\n              <li><a routerLink=\"/qr-generator\" routerLinkActive=\"active\"><div class=\"label\">QR Generator</div></a></li>\n            </ul>\n          </li>\n        </ul>\n\n        <div class=\"nav-search\">\n          <form class=\"uk-search uk-search-default uk-width-1-1\">\n            <a href=\"javascript:void(0)\" (click)=\"performSearch()\" class=\"uk-search-icon-flip\" uk-search-icon></a>\n            <input class=\"uk-search-input uk-width-1-1\" id=\"search-input\" type=\"search\" placeholder=\"Search for an account or block hash\" [(ngModel)]=\"searchData\" name=\"searchData\" (keyup.enter)=\"performSearch()\">\n          </form>\n        </div>\n\n        <div class=\"footer uk-margin-remove-top\" uk-grid>\n          <div class=\"uk-width-1-1 uk-text-center\">\n            <a href=\"https://github.com/bademcurrency/BademVault\" uk-icon=\"icon: github-alt\" uk-tooltip title=\"View our GitHub\" class=\"footer-link\" target=\"_blank\" rel=\"noopener noreferrer\"></a>\n          </div>\n          <div class=\"attribution uk-width-1-1 uk-text-center\">\n            Based on <a href=\"https://github.com/cronoh/nanovault\" target=\"_blank\" rel=\"noopener noreferrer\">NanoVault</a>\n          </div>\n        </div>\n\n\n      </div>\n      <div class=\"uk-width-expand uk-width-1-1 content-container\" [class.nav-expanded]=\"navExpanded\" (click)=\"closeNav()\" style=\"background: #fff;\" [style.height]=\"windowHeight + 'px'\">\n        <div class=\"uk-panel uk-panel-scrollable uk-height-1-1\" style=\"border: 0; height: 100%;\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<app-notifications></app-notifications>\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\nimport {WalletService} from './services/wallet.service';\nimport {AddressBookService} from './services/address-book.service';\nimport {AppSettingsService} from './services/app-settings.service';\nimport {WebsocketService} from './services/websocket.service';\nimport {PriceService} from './services/price.service';\nimport {NotificationService} from './services/notification.service';\nimport {WorkPoolService} from './services/work-pool.service';\nimport {Router} from '@angular/router';\nimport {RepresentativeService} from './services/representative.service';\nimport {NodeService} from './services/node.service';\nimport { LedgerService } from './services';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public walletService: WalletService,\n    private addressBook: AddressBookService,\n    public settings: AppSettingsService,\n    private websocket: WebsocketService,\n    private notifications: NotificationService,\n    public nodeService: NodeService,\n    private representative: RepresentativeService,\n    private router: Router,\n    private workPool: WorkPoolService,\n    private ledger: LedgerService,\n    public price: PriceService) {\n      router.events.subscribe(() => {\n        this.navExpanded = false;\n      });\n    }\n\n  @ViewChild('selectButton') selectButton: ElementRef;\n  @ViewChild('accountsDropdown') accountsDropdown: ElementRef;\n\n  wallet = this.walletService.wallet;\n  node = this.nodeService.node;\n  bademPrice = this.price.price;\n  fiatTimeout = 5 * 60 * 1000; // Update fiat prices every 5 minutes\n  inactiveSeconds = 0;\n  windowHeight = 1000;\n  navExpanded = false;\n  showAccountsDropdown = false;\n  searchData = '';\n  isConfigured = this.walletService.isConfigured;\n  @HostListener('window:resize', ['$event']) onResize (e) {\n    this.windowHeight = e.target.innerHeight;\n  }\n\n  @HostListener('document:mousedown', ['$event']) onGlobalClick(event): void {\n    if (\n            ( this.selectButton.nativeElement.contains(event.target) === false )\n          && ( this.accountsDropdown.nativeElement.contains(event.target) === false )\n      ) {\n        this.showAccountsDropdown = false;\n    }\n  }\n\n  async ngOnInit() {\n    this.windowHeight = window.innerHeight;\n    this.settings.loadAppSettings();\n    this.addressBook.loadAddressBook();\n    this.workPool.loadWorkCache();\n\n    await this.walletService.loadStoredWallet();\n\n    // Navigate to accounts page if there is wallet, but only if coming from home\n    if (this.walletService.isConfigured() && window.location.pathname === '/') {\n      this.router.navigate(['accounts']);\n    }\n\n    // update selected account object with the latest balance, pending, etc\n    if (this.wallet.selectedAccountId) {\n      const currentUpdatedAccount = this.wallet.accounts.find(a => a.id === this.wallet.selectedAccountId);\n      this.wallet.selectedAccount = currentUpdatedAccount;\n    }\n\n    await this.walletService.reloadBalances(true);\n\n    // Workaround fix for github pages when BademVault is refreshed (or externally linked) and there is a subpath for example to the send screen.\n    // This data is saved from the 404.html page\n    const path = localStorage.getItem('path');\n\n    if (path) {\n      const search = localStorage.getItem('query'); // ?param=value\n      const fragment = localStorage.getItem('fragment'); // #value\n      localStorage.removeItem('path');\n      localStorage.removeItem('query');\n      localStorage.removeItem('fragment');\n\n      if (search && search.length) {\n        const queryParams = {};\n        const urlSearch = new URLSearchParams(search);\n        urlSearch.forEach(function(value, key) {\n          queryParams[key] = value;\n        });\n        this.router.navigate([path], { queryParams: queryParams});\n      } else if (fragment && fragment.length) {\n        this.router.navigate([path], { fragment: fragment});\n      } else {\n        this.router.navigate([path]);\n      }\n    }\n\n    this.websocket.connect();\n\n    this.representative.loadRepresentativeList();\n\n    // If the wallet is locked and there is a pending balance, show a warning to unlock the wallet\n    // (if not receive priority is set to manual)\n    if (this.wallet.locked && this.walletService.hasPendingTransactions() && this.settings.settings.pendingOption !== 'manual') {\n      this.notifications.sendWarning(`New incoming transaction(s) - Unlock the wallet to receive`, { length: 10000, identifier: 'pending-locked' });\n    } else if (this.walletService.hasPendingTransactions() && this.settings.settings.pendingOption === 'manual') {\n      this.notifications.sendWarning(`Incoming transaction(s) found - Set to be received manually`, { length: 10000, identifier: 'pending-locked' });\n    }\n\n    // If they are using a Ledger device with a bad browser, warn them\n    if (this.walletService.isLedgerWallet() && this.ledger.isBrokenBrowser()) {\n      this.notifications.sendLedgerChromeWarning();\n    }\n\n    // When the page closes, determine if we should lock the wallet\n    window.addEventListener('beforeunload',  (e) => {\n      if (this.wallet.locked) return; // Already locked, nothing to worry about\n      this.walletService.lockWallet();\n    });\n    window.addEventListener('unload',  (e) => {\n      if (this.wallet.locked) return; // Already locked, nothing to worry about\n      this.walletService.lockWallet();\n    });\n\n    // Listen for an badem: protocol link, triggered by the desktop application\n    window.addEventListener('protocol-load', (e: CustomEvent) => {\n      const protocolText = e.detail;\n      const stripped = protocolText.split('').splice(4).join(''); // Remove badem:\n      if (stripped.startsWith('badem_')) {\n        this.router.navigate(['account', stripped]);\n      }\n      // Soon: Load seed, automatic send page?\n    });\n\n    // Check how long the wallet has been inactive, and lock it if it's been too long\n    setInterval(() => {\n      this.inactiveSeconds += 1;\n      if (!this.settings.settings.lockInactivityMinutes) return; // Do not lock on inactivity\n      if (this.wallet.locked || !this.wallet.password) return;\n\n      // Determine if we have been inactive for longer than our lock setting\n      if (this.inactiveSeconds >= this.settings.settings.lockInactivityMinutes * 60) {\n        this.walletService.lockWallet();\n        this.notifications.sendSuccess(`Wallet locked after ${this.settings.settings.lockInactivityMinutes} minutes of inactivity`);\n      }\n    }, 1000);\n\n    try {\n      if (!this.settings.settings.serverAPI) return;\n      await this.updateFiatPrices();\n    } catch (err) {\n      this.notifications.sendWarning(`There was an issue retrieving latest Badem price.  Ensure your AdBlocker is disabled on this page then reload to see accurate FIAT values.`, { length: 0, identifier: `price-adblock` });\n    }\n  }\n\n  toggleNav() {\n    this.navExpanded = !this.navExpanded;\n  }\n\n  closeNav() {\n    this.navExpanded = false;\n  }\n\n  toggleAccountsDropdown() {\n    if (this.showAccountsDropdown === true) {\n      this.showAccountsDropdown = false;\n      return;\n    }\n\n    this.showAccountsDropdown = true;\n    this.accountsDropdown.nativeElement.scrollTop = 0;\n  }\n\n  selectAccount(account) {\n    // note: account is null when user is switching to 'Total Balance'\n    this.wallet.selectedAccountId = account ? account.id : null;\n    this.wallet.selectedAccount = account;\n    this.wallet.selectedAccount$.next(account);\n    this.toggleAccountsDropdown();\n    this.walletService.saveWalletExport();\n  }\n\n  performSearch() {\n    const searchData = this.searchData.trim();\n    if (!searchData.length) return;\n\n    if (searchData.startsWith('badem_')) {\n      this.router.navigate(['account', searchData]);\n    } else if (searchData.length === 64) {\n      this.router.navigate(['transaction', searchData]);\n    } else {\n      this.notifications.sendWarning(`Invalid Badem account or transaction hash!`);\n    }\n    this.searchData = '';\n  }\n\n  updateIdleTime() {\n    this.inactiveSeconds = 0; // Action has happened, reset the inactivity timer\n  }\n\n  retryConnection() {\n    if (!this.settings.settings.serverAPI) {\n      this.notifications.sendInfo(`Wallet server settings is set to offline mode. Please change server first!`);\n      return;\n    }\n    this.walletService.reloadBalances(true);\n    this.notifications.sendInfo(`Attempting to reconnect to Badem node`);\n  }\n\n  async updateFiatPrices() {\n    const displayCurrency = this.settings.getAppSetting(`displayCurrency`) || 'USD';\n    await this.price.getPrice(displayCurrency);\n    this.walletService.reloadFiatBalances();\n    setTimeout(() => this.updateFiatPrices(), this.fiatTimeout);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {UtilService} from './services/util.service';\nimport {WalletService} from './services/wallet.service';\nimport {ConfigureWalletComponent} from './components/configure-wallet/configure-wallet.component';\nimport {NotificationService} from './services/notification.service';\nimport {NotificationsComponent} from './components/notifications/notifications.component';\nimport {RaiPipe} from './pipes/rai.pipe';\nimport {AccountsComponent} from './components/accounts/accounts.component';\nimport {ApiService} from './services/api.service';\nimport {AddressBookService} from './services/address-book.service';\nimport {SendComponent} from './components/send/send.component';\nimport {SqueezePipe} from './pipes/squeeze.pipe';\nimport {ModalService} from './services/modal.service';\nimport {AddressBookComponent} from './components/address-book/address-book.component';\nimport {ClipboardModule} from 'ngx-clipboard';\nimport {ReceiveComponent} from './components/receive/receive.component';\nimport {WalletWidgetComponent} from './components/wallet-widget/wallet-widget.component';\nimport {ManageWalletComponent} from './components/manage-wallet/manage-wallet.component';\nimport {WorkPoolService} from './services/work-pool.service';\nimport {ConfigureAppComponent} from './components/configure-app/configure-app.component';\nimport {AppSettingsService} from './services/app-settings.service';\nimport {WebsocketService} from './services/websocket.service';\nimport {BademBlockService} from './services/nano-block.service';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { TransactionDetailsComponent } from './components/transaction-details/transaction-details.component';\nimport {PriceService} from './services/price.service';\nimport { FiatPipe } from './pipes/fiat.pipe';\nimport { AmountSplitPipe } from './pipes/amount-split.pipe';\nimport { ImportWalletComponent } from './components/import-wallet/import-wallet.component';\nimport { BademAccountIdComponent } from './components/helpers/nano-account-id/nano-account-id.component';\nimport {PowService} from './services/pow.service';\nimport { ImportAddressBookComponent } from './components/import-address-book/import-address-book.component';\nimport { CurrencySymbolPipe } from './pipes/currency-symbol.pipe';\nimport { RepresentativesComponent } from './components/representatives/representatives.component';\nimport {RepresentativeService} from './services/representative.service';\nimport {ManageRepresentativesComponent} from './components/manage-representatives/manage-representatives.component';\nimport {NodeService} from './services/node.service';\nimport {LedgerService} from './services/ledger.service';\nimport {DesktopService} from './services/desktop.service';\nimport { AccountPipe } from './pipes/account.pipe';\nimport { ChangeRepWidgetComponent } from './components/change-rep-widget/change-rep-widget.component';\nimport { SweeperComponent } from './components/sweeper/sweeper.component';\nimport { QrScanComponent } from './components/qr-scan/qr-scan.component';\nimport {SignComponent} from './components/sign/sign.component';\nimport {RemoteSigningComponent} from './components/remote-signing/remote-signing.component';\nimport {RemoteSignService} from './services/remote-sign.service';\nimport { QrModalComponent } from './components/qr-modal/qr-modal.component';\nimport { QrModalService } from './services/qr-modal.service';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { PasswordStrengthMeterModule } from 'angular-password-strength-meter';\n\n// QR code module\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { ConverterComponent } from './components/converter/converter.component';\nimport { QrGeneratorComponent } from './components/qr-generator/qr-generator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    ConfigureWalletComponent,\n    NotificationsComponent,\n    RaiPipe,\n    SqueezePipe,\n    AccountsComponent,\n    SendComponent,\n    AddressBookComponent,\n    ReceiveComponent,\n    WalletWidgetComponent,\n    ManageWalletComponent,\n    ConfigureAppComponent,\n    AccountDetailsComponent,\n    TransactionDetailsComponent,\n    FiatPipe,\n    AmountSplitPipe,\n    ImportWalletComponent,\n    BademAccountIdComponent,\n    ImportAddressBookComponent,\n    CurrencySymbolPipe,\n    RepresentativesComponent,\n    ManageRepresentativesComponent,\n    AccountPipe,\n    ChangeRepWidgetComponent,\n    SweeperComponent,\n    QrScanComponent,\n    SignComponent,\n    RemoteSigningComponent,\n    QrModalComponent,\n    ConverterComponent,\n    QrGeneratorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ClipboardModule,\n    ZXingScannerModule,\n    NgbModule,\n    PasswordStrengthMeterModule,\n  ],\n  providers: [\n    UtilService,\n    WalletService,\n    NotificationService,\n    ApiService,\n    AddressBookService,\n    ModalService,\n    WorkPoolService,\n    AppSettingsService,\n    WebsocketService,\n    BademBlockService,\n    PriceService,\n    PowService,\n    RepresentativeService,\n    NodeService,\n    LedgerService,\n    DesktopService,\n    RemoteSignService,\n    NgbActiveModal,\n    QrModalService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Account Details</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header uk-visible-toggle\">\n\n        <div uk-grid>\n\n          <div class=\"uk-width-expand\">\n\n            <div *ngIf=\"showEditAddressBook\" uk-grid>\n              <div class=\" uk-width-1-1\">\n                <div class=\"uk-margin\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip uk-text-success\" (click)=\"saveAddressBook()\" uk-icon=\"icon: check\" uk-tooltip title=\"Save Changes\"></a>\n                    <a class=\"uk-form-icon uk-form-icon-flip uk-text-danger\" style=\"margin-right: 26px;\" (click)=\"showEditAddressBook = false\" uk-tooltip title=\"Cancel Changes - Set the label to blank to delete\" uk-icon=\"icon: close\"></a>\n                    <input class=\"uk-input\" (keyup.enter)=\"saveAddressBook()\" [(ngModel)]=\"addressBookModel\" placeholder=\"Account Label (Set to blank to delete)\" type=\"text\" style=\"padding-right: 60px;\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"!showEditAddressBook\" uk-grid>\n              <div class=\"uk-width-1-1\">\n                <div *ngIf=\"addressBookEntry || walletAccount\">\n                  <div class=\"uk-width-1-1\">\n                    <div uk-grid>\n                    <h3 class=\"uk-width-auto uk-card-title uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">{{ addressBookEntry ? addressBookEntry : ('Account #' + walletAccount.index)}}</h3>\n                      <div class=\"uk-width-auto\" style=\"padding-left: 10px; margin-top: 3px;\">\n                        <li style=\"display: contents;\"><span uk-icon=\"icon: pencil;\" title=\"Edit Account Label\" uk-tooltip (click)=\"showEditAddressBook = !showEditAddressBook\" title=\"Edit Account Label\"></span></li>\n                      </div>\n                    </div>\n                  </div>\n                  <div uk-grid>\n                    <div class=\"uk-width-auto uk-text-small uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                      <app-nano-account-id [accountID]=\"accountID\"></app-nano-account-id>\n                    </div>\n                    <div class=\"uk-width-auto\" style=\"padding-left: 10px; margin-top: -3px;\">\n                      <li><a ngxClipboard [cbContent]=\"accountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </div>\n                  </div>\n                </div>\n\n                <div *ngIf=\"!addressBookEntry && !walletAccount\">\n                  <div uk-grid>\n                    <h3 class=\"uk-width-auto uk-card-title uk-text-truncate\" style=\"max-width: calc(100% - 80px);\">\n                      <app-nano-account-id [accountID]=\"accountID\"></app-nano-account-id>\n                    </h3>\n                    <div class=\"uk-width-auto\">\n                      <ul class=\"uk-iconnav\" style=\"margin-top: 5px;\">\n                        <li style=\"display: contents;\"><span uk-icon=\"icon: pencil;\" title=\"Edit Account Label\" uk-tooltip (click)=\"showEditAddressBook = !showEditAddressBook\" title=\"Edit Account Label\"></span></li>\n                        <li><a ngxClipboard [cbContent]=\"accountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-card-body uk-padding-remove uk-form-horizontal\">\n\n        <div class=\"uk-padding-small\" uk-grid>\n\n          <div class=\"uk-width-3-5@s uk-width-3-4@m\">\n            <div uk-grid>\n              <div class=\"uk-width-1-1\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-3 uk-text-right\">\n                    Account Balance\n                  </div>\n                  <div class=\"uk-width-1-3 uk-text-right\">\n                    {{ !account? 0:(account.balance || 0 | badem: settings.settings.displayDenomination) }}\n                    <span *ngIf=\"account && account.balanceRaw && account.balanceRaw > 0\" style=\"display: block; font-size: 12px;\" class=\"uk-text-muted\">+{{ !account? 0:(account.balanceRaw.toString(10)) }} raw</span>\n                  </div>\n                  <div class=\"uk-width-1-3 uk-text-left\">\n                    {{ !account? 0:(account.balanceFiat | fiat: settings.settings.displayCurrency) }}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"uk-width-1-1\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-3 uk-text-right\">\n                    Incoming Amount\n                  </div>\n                  <div class=\"uk-width-1-3 uk-text-right\">\n                    {{ !account? 0:(account.pending || 0 | badem: settings.settings.displayDenomination) }}\n                    <span *ngIf=\"account && account.pendingRaw && account.pendingRaw > 0\" style=\"display: block; font-size: 12px;\" class=\"uk-text-muted\">+{{ !account? 0:(account.pendingRaw.toString(10)) }} raw</span>\n                  </div>\n                  <div class=\"uk-width-1-3 uk-text-left\">\n                    {{ !account? 0:(account.pendingFiat | fiat: settings.settings.displayCurrency) }}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"uk-width-1-1\" *ngIf=\"account && account.representative\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-3 uk-text-right\">\n                    Representative\n                  </div>\n                  <div class=\"uk-width-2-3 uk-text-left\">\n                    <div *ngIf=\"showEditRepresentative\">\n                      <div uk-grid>\n                        <div class=\" uk-width-1-1\">\n                          <div class=\"uk-margin\">\n                            <div class=\"uk-inline uk-width-1-1\">\n                              <a class=\"uk-form-icon uk-form-icon-flip uk-text-success\" (click)=\"saveRepresentative()\" uk-icon=\"icon: check\" uk-tooltip title=\"Save New Representative\"></a>\n                              <a class=\"uk-form-icon uk-form-icon-flip uk-text-danger\" style=\"margin-right: 26px;\" (click)=\"showEditRepresentative = false\" uk-icon=\"icon: close\" uk-tooltip title=\"Cancel Changes\"></a>\n\n                              <input class=\"uk-input\" (keyup.enter)=\"saveRepresentative()\" (blur)=\"validateRepresentative()\" (keyup)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" [(ngModel)]=\"representativeModel\" placeholder=\"New Representative Account\" type=\"text\" style=\"padding-right: 60px;\">\n\n                              <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                                <ul class=\"uk-nav uk-nav-default\">\n                                  <li class=\"uk-nav-header\">Representative List Results</li>\n                                  <li class=\"uk-nav-divider\"></li>\n                                  <li *ngFor=\"let rep of representativeResults$ | async\">\n                                    <a (click)=\"selectRepresentative(rep.id)\">\n                                      {{ rep.name }}\n                                      <span *ngIf=\"rep.trusted\" uk-icon=\"icon: star;\" class=\"uk-text-success\"></span>\n                                      <span *ngIf=\"rep.warn\" uk-icon=\"icon: warning;\" class=\"uk-text-warning\"></span>\n                                    </a>\n                                  </li>\n                                </ul>\n                              </div>\n\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div *ngIf=\"!showEditRepresentative\">\n                      <div uk-grid>\n                        <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                          <span *ngIf=\"repLabel\" class=\"uk-label uk-label-danger\">{{ repLabel }}</span>\n                          <app-nano-account-id [accountID]=\"!account ? '':account.representative\"></app-nano-account-id>\n                        </div>\n                        <div class=\"uk-width-auto\" style=\"padding-left: 10px;\" *ngIf=\"walletAccount && account && account.representative\">\n                          <ul class=\"uk-iconnav\">\n                            <!--<li><a uk-icon=\"icon: pencil;\" title=\"Change Representative\" uk-tooltip (click)=\"showEditRepresentative = true\"></a></li>-->\n                            <li><a uk-icon=\"icon: pencil;\" title=\"Change Representative\" uk-tooltip routerLink=\"/representatives\" [queryParams]=\"{ hideOverview: true, showRecommended: true, accounts: accountID }\"></a></li>\n                          </ul>\n                        </div>\n                      </div>\n\n                    </div>\n                  </div>\n                  <!--<div class=\"uk-width-1-3 uk-text-left\"></div>-->\n                </div>\n              </div>\n\n              <div *ngIf=\"settings.settings.serverAPI\" class=\"uk-width-1-1\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-3 uk-text-right\">\n                    <label>Enable Remote Signing</label>\n                  </div>\n                  <div class=\"uk-width-1-3 uk-text-left\">\n                    <input class=\"uk-checkbox uk-margin-medium-left\" type=\"checkbox\" name=\"remoteVisible\" value=\"1\" [(ngModel)]=\"remoteVisible\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-width-2-5@s uk-width-1-4@m uk-text-center\">\n            <img *ngIf=\"qrCodeImage\" [src]=\"qrCodeImage\" alt=\"QR code\"><br />\n            <span class=\"uk-text-small\">Deposit Address</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"remoteVisible\" uk-grid>\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-width-1-1 uk-margin-medium-left\">\n              <p>Create a new SEND or CHANGE block below. For any incoming transaction in the table: Use REMOTE SIGN.</p>\n              <button class=\"uk-button uk-button-primary\" (click)=\"showRemoteModal()\">CREATE NEW BLOCK</button>\n            </div>\n          </div>\n        </div>\n\n        <div uk-grid style=\"margin-top: 25px;\">\n          <div class=\"uk-width-1-1\">\n            <h3 class=\"uk-heading-divider uk-text-center\" style=\"margin-bottom: 0;\">Recent Transactions<span class=\"{{statsRefreshEnabled ? '':'refresh-disabled'}}\" id=\"refresh\" uk-icon=\"icon: refresh;\" (click)=\"loadAccountDetails(true)\" uk-tooltip title=\"Reload the transaction history from the network.\"></span></h3>\n          <div class=\"uk-overflow-auto\">\n\n\n            <table class=\"uk-table uk-table-striped uk-table-small\" style=\"margin-top: 0;\">\n              <thead>\n              <tr>\n                <th scope=\"col\" class=\"uk-width-1-6@m uk-width-1-6\">Date</th>\n                <th scope=\"col\" class=\"uk-width-1-5@m uk-width-1-4\">Account</th>\n                <th scope=\"col\" class=\"uk-width-1-5@m uk-width-1-4\">Amount</th>\n                <th scope=\"col\" class=\"uk-width-1-5@m uk-width-1-4\">Hash</th>\n                <th scope=\"col\" *ngIf=\"remoteVisible\" class=\"uk-width-1-5@m uk-width-1-4\">Incoming</th>\n              </tr>\n              </thead>\n              <tbody>\n\n              <tr *ngFor=\"let pending of pendingBlocks\" class=\"uk-text-muted\">\n                <td class=\"uk-text-truncate\" *ngIf=\"pending.local_timestamp\">{{ pending.local_timestamp * 1000 | date: 'yyyy-MM-dd HH:mm' }}</td>\n                <td class=\"uk-text-truncate uk-text-muted\" *ngIf=\"!pending.local_timestamp\">N/A</td>\n                <td class=\"uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                      <a [routerLink]=\"'/account/' + pending.account\" class=\"uk-link-text\" title=\"View Account Details\" uk-tooltip>\n                        <span *ngIf=\"pending.addressBookName\" class=\"uk-margin-small-right uk-label uk-label-default\">{{ pending.addressBookName }}</span>\n                        <app-nano-account-id [accountID]=\"pending.account\" middle=\"off\"></app-nano-account-id>\n                      </a>\n                    </div>\n                    <div class=\"uk-width-auto\" style=\"padding-left: 10px;\">\n                      <ul class=\"uk-iconnav\">\n                        <li><a ngxClipboard [cbContent]=\"pending.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                      </ul>\n                    </div>\n                  </div>\n                </td>\n                <td class=\"uk-text-muted\">\n                  +{{ pending.amount | badem: settings.settings.displayDenomination }}*\n                </td>\n                <td class=\"uk-text-truncate\"><a [routerLink]=\"'/transaction/' + pending.hash\" class=\"uk-link-text\" title=\"View Block Details\" uk-tooltip>{{ pending.hash }}</a></td>\n                <td *ngIf=\"remoteVisible\"><button class=\"uk-button uk-button-primary uk-text-center uk-width-auto\" style=\"height: 28px; line-height: 28px; padding-top: 0;\" type=\"button\" (click)=\"generateReceive(pending.hash)\">REMOTE SIGN</button></td>\n              </tr>\n\n              <tr *ngFor=\"let history of accountHistory\">\n                <td class=\"uk-text-truncate\" *ngIf=\"history.local_timestamp\">{{ history.local_timestamp * 1000 | date: 'yyyy-MM-dd HH:mm' }}</td>\n                <td class=\"uk-text-truncate uk-text-muted\" *ngIf=\"!history.local_timestamp\">N/A</td>\n                <td class=\"uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                      <a [routerLink]=\"'/account/' + (history.link_as_account || history.account)\" class=\"uk-link-text\" title=\"View Account Details\" uk-tooltip>\n                        <span *ngIf=\"history.addressBookName\" class=\"uk-margin-small-right uk-label uk-label-default\">{{ history.addressBookName }}</span>\n                        <app-nano-account-id [accountID]=\"history.link_as_account || history.account\" middle=\"off\"></app-nano-account-id>\n                      </a>\n                    </div>\n                    <div class=\"uk-width-auto\" style=\"padding-left: 10px;\">\n                      <ul class=\"uk-iconnav\">\n                        <li><a ngxClipboard [cbContent]=\"history.link_as_account || history.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                      </ul>\n                    </div>\n                  </div>\n                </td>\n                <td [ngClass]=\"{ 'uk-text-success': history.type == 'receive' || history.subtype == 'receive' || history.type == 'open' || history.subtype == 'open', 'uk-text-danger': history.type == 'send' || history.subtype == 'send' }\">\n                  <span *ngIf=\"isNaN(history.amount)\">NEW REP</span>\n                  <span *ngIf=\"!isNaN(history.amount)\">{{ (history.type == 'send' || history.subtype == 'send') ? '-' : '+' }}{{ history.amount | badem: settings.settings.displayDenomination }}</span>\n                </td>\n                <td class=\"uk-text-truncate\"><a [routerLink]=\"'/transaction/' + history.hash\" class=\"uk-link-text\" title=\"View Block Details\" uk-tooltip>{{ history.hash }}</a></td>\n              </tr>\n              <tr *ngIf=\"!accountHistory.length && !pendingBlocks.length\">\n                <td colspan=\"4\" style=\"text-align: center;\">No account history</td>\n              </tr>\n              <tr *ngIf=\"accountHistory.length + 1 >= pageSize && pageSize <= maxPageSize\">\n                <td colspan=\"4\" style=\"text-align: center;\">\n                  <a (click)=\"loadMore()\" class=\"uk-link-text\">Load More Results</a>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1 uk-text-center uk-text-muted uk-text-small\" *ngIf=\"pendingBlocks.length\">\n      * Incoming Transaction\n    </div>\n\n  </div>\n</div>\n\n<!-- Modal for remote receive incoming -->\n<div id=\"receive-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-modal-body modal-qr\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n        <h2 class=\"uk-modal-title\">Unsigned Incoming Block</h2>\n    </div>\n    <div class=\"uk-modal-body modal-qr-body\">\n      <ol>\n        <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the unsigned QR with an offline BademVault, or copy the \"Unsigned Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 2</a>.</li>\n        <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the new signed QR with an online BademVault, or copy the \"Signed Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 3</a>.</li>\n      </ol>\n\n      <div *ngIf=\"blockHashReceive\" class=\"uk-width-1-1 uk-text-center\" style=\"display: flex; justify-content: center;\">\n        <span class=\"uk-text-small\" uk-tooltip title=\"Unsigned block string to be copied to remote device\" style=\"overflow-wrap: anywhere;\"><strong>Unsigned Block</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"qrString\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n        <span class=\"uk-text-small\" uk-tooltip title=\"Final block hash to be signed or verified\" style=\"overflow-wrap: anywhere; margin-left: 50px;\"><strong>Block Hash</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"blockHashReceive\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n      </div>\n\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImageBlockReceive\" [src]=\"qrCodeImageBlockReceive\" class=\"block-qr\" alt=\"QR code\"><br />\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal for creating send and change block for remote signing-->\n<div id=\"block-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-modal-body modal-block\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n        <h2 class=\"uk-modal-title\">Create Block for Remote Signing</h2>\n    </div>\n    <div class=\"uk-modal-body modal-block-body\">\n      <ol>\n        <li>Generate a Badem block below. No wallet login needed.</li>\n        <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the unsigned QR with an offline BademVault, or copy the \"Unsigned Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 2</a>.</li>\n        <li><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the new signed QR with an online BademVault, or copy the \"Signed Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 3</a>.</li>\n      </ol>\n\n      <span><strong>Block Type</strong></span><span uk-icon=\"icon: info;\" uk-tooltip title=\"The block type to create for remote signing. Receiving can be done from the Recent Transactions below.\"></span><br>\n      <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"blocktype\" value={{blockTypes[0]}} [(ngModel)]=\"blockTypeSelected\"> {{blockTypes[0]}}</label>\n      <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"blocktype\" value={{blockTypes[1]}} [(ngModel)]=\"blockTypeSelected\"> {{blockTypes[1]}}</label>\n      <br><br>\n\n      <div *ngIf=\"blockTypeSelected === blockTypes[0]\" class=\"uk-form-horizontal\">\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\" for=\"form-horizontal-text2\">To Account</label>\n          <div class=\"uk-form-controls\">\n            <div class=\"uk-inline uk-width-1-1\">\n              <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n              <input (blur)=\"validateDestination()\" (keyup)=\"searchAddressBook()\" (focus)=\"searchAddressBook()\" [(ngModel)]=\"toAccountID\" [ngClass]=\"{ 'uk-form-success': toAccountStatus === 2, 'uk-form-danger': toAccountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"Account to send to\" autocomplete=\"off\">\n\n              <div *ngIf=\"(addressBookResults$ | async).length\" [hidden]=\"!showAddressBook\" class=\"uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                <ul class=\"uk-nav uk-nav-default\">\n                  <li class=\"uk-nav-header\">Address Book Results</li>\n                  <li class=\"uk-nav-divider\"></li>\n                  <li *ngFor=\"let book of addressBookResults$ | async\">\n                    <a (click)=\"selectBookEntry(book.account)\">{{ book.name }}</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-form-controls\" *ngIf=\"addressBookMatch\">\n            <div class=\"uk-inline uk-width-1-1\">\n              <span class=\"uk-label uk-label-primary\">{{ addressBookMatch }}</span>\n            </div>\n          </div>\n        </div>\n\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-text\">Amount</label>\n            <div class=\"uk-form-controls\">\n              <div uk-grid>\n                <div class=\"uk-width-1-1\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" (click)=\"setMaxAmount()\" style=\"padding-right: 7px;\" uk-tooltip title=\"Set Maximum Amount\">Max</a>\n                    <input [(ngModel)]=\"amount\" [ngClass]=\"{ 'uk-form-danger': amountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text\" (keyup)=\"syncFiatPrice()\" (change)=\"syncFiatPrice()\" type=\"text\" placeholder=\"Amount of {{ selectedAmount.name }} to send\" maxlength=\"40\">\n                  </div>\n                  <div *ngIf=\"amountRaw.gt(0)\" class=\"uk-width-1-1 uk-width-3-5@m uk-text-small uk-text-muted uk-margin-remove\">\n                    <span uk-tooltip title=\"Additional raw to send\">+{{ amountRaw.toString(10) }} raw</span> &nbsp; <a class=\"uk-text-danger\" (click)=\"resetRaw()\" uk-tooltip title=\"Remove the additional raw amount from the total amount\" uk-icon=\"icon: close\"></a>\n                  </div>\n                  <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\" *ngIf=\"settings.settings.displayCurrency\">\n                    <div class=\"uk-width-1-1 uk-inline\">\n                      <a class=\"uk-form-icon uk-link-reset uk-link-muted\" style=\"padding-left: 7px;\" uk-tooltip title=\"Last Price: {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / BADEM\">{{ settings.settings.displayCurrency | currencySymbol }}</a>\n                      <input [(ngModel)]=\"amountFiat\" (keyup)=\"syncBademPrice()\" (change)=\"syncBademPrice()\" style=\"padding-left: 50px !important;\" class=\"uk-input\" id=\"form-horizontal-text-fiat\" type=\"text\" placeholder=\"Amount of {{ settings.settings.displayCurrency }} to send\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"blockTypeSelected === blockTypes[1]\" class=\"uk-form-horizontal\">\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\" for=\"form-horizontal-text3\">Representative</label>\n          <div class=\"uk-form-controls\">\n            <div class=\"uk-inline uk-width-1-1\">\n              <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('rep1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n              <input (blur)=\"validateRepresentative()\" (keyup)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" (keyup.enter)=\"generateChange()\" [(ngModel)]=\"representativeModel\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': repStatus === 2, 'uk-form-danger': repStatus === 0 }\" id=\"form-horizontal-text3\" type=\"text\" placeholder=\"badem_abc...123\" #repInput>\n\n              <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                <ul class=\"uk-nav uk-nav-default\">\n                  <li class=\"uk-nav-header\">Representative List Results</li>\n                  <li class=\"uk-nav-divider\"></li>\n                  <li *ngFor=\"let rep of representativeResults$ | async\">\n                    <a (click)=\"selectRepresentative(rep.id)\">\n                      {{ rep.name }}\n                      <span *ngIf=\"rep.trusted\" uk-icon=\"icon: star;\" class=\"uk-text-success\"></span>\n                      <span *ngIf=\"rep.warn\" uk-icon=\"icon: warning;\" class=\"uk-text-warning\"></span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-form-controls\" *ngIf=\"representativeListMatch\">\n            <div class=\"uk-inline uk-width-1-1\">\n              <span class=\"uk-label uk-label-danger\">{{ representativeListMatch }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br>\n      <button *ngIf=\"blockTypeSelected === blockTypes[0]\" class=\"uk-button uk-button-primary uk-text-center uk-width-1-1\" type=\"button\" style=\"margin-bottom: 20px;\" (click)=\"generateSend()\">Generate Send Block</button>\n      <button *ngIf=\"blockTypeSelected === blockTypes[1]\" class=\"uk-button uk-button-primary uk-text-center uk-width-1-1\" type=\"button\" style=\"margin-bottom: 20px;\" (click)=\"generateChange()\">Generate Change Block</button>\n\n      <div *ngIf=\"blockHash\" class=\"uk-width-1-1 uk-text-center\" style=\"display: flex; justify-content: center;\">\n        <span class=\"uk-text-small\" uk-tooltip title=\"Unsigned block string to be copied to remote device\" style=\"overflow-wrap: anywhere;\"><strong>Unsigned Block</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"qrString\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n        <span class=\"uk-text-small\" uk-tooltip title=\"Final block hash to be signed or verified\" style=\"overflow-wrap: anywhere; margin-left: 50px;\"><strong>Block Hash</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"blockHash\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n      </div>\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImageBlock\" [src]=\"qrCodeImageBlock\" class=\"block-qr\" alt=\"QR code\"><br />\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute, ChildActivationEnd, Router, NavigationEnd} from '@angular/router';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {ApiService} from '../../services/api.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {WalletService} from '../../services/wallet.service';\nimport {BademBlockService} from '../../services/nano-block.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {PriceService} from '../../services/price.service';\nimport {UtilService} from '../../services/util.service';\nimport * as QRCode from 'qrcode';\nimport BigNumber from 'bignumber.js';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {BehaviorSubject} from 'rxjs';\nimport * as nanocurrency from 'nanocurrency';\nimport { QrModalService } from '../../services/qr-modal.service';\n\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.css']\n})\nexport class AccountDetailsComponent implements OnInit, OnDestroy {\n  badem = 100;\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n\n  accountHistory: any[] = [];\n  pendingBlocks = [];\n  pageSize = 25;\n  maxPageSize = 200;\n\n  repLabel: any = '';\n  addressBookEntry: any = null;\n  account: any = {};\n  accountID = '';\n\n  walletAccount = null;\n\n  showEditAddressBook = false;\n  addressBookModel = '';\n  showEditRepresentative = false;\n  representativeModel = '';\n  representativeResults$ = new BehaviorSubject([]);\n  showRepresentatives = false;\n  representativeListMatch = '';\n  isNaN = isNaN;\n\n  qrCodeImage = null;\n\n  routerSub = null;\n  priceSub = null;\n\n  statsRefreshEnabled = true;\n\n  // Remote signing\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n  amounts = [\n    { name: 'BADEM', shortName: 'BADEM', value: 'mbadem' },\n    { name: 'kbadem', shortName: 'kbadem', value: 'kbadem' },\n    { name: 'badem', shortName: 'badem', value: 'badem' },\n  ];\n  selectedAmount = this.amounts[0];\n\n  amount = null;\n  amountRaw: BigNumber = new BigNumber(0);\n  amountFiat: number|null = null;\n  rawAmount: BigNumber = new BigNumber(0);\n  fromAccount: any = {};\n  toAccount: any = false;\n  toAccountID = '';\n  toAddressBook = '';\n  toAccountStatus = null;\n  amountStatus = null;\n  repStatus = null;\n  qrString = null;\n  qrCodeImageBlock = null;\n  qrCodeImageBlockReceive = null;\n  blockHash = null;\n  blockHashReceive = null;\n  remoteVisible = false;\n  blockTypes: string[] = ['Send Badem', 'Change Representative'];\n  blockTypeSelected: string = this.blockTypes[0];\n  representativeList = [];\n  // End remote signing\n\n  constructor(\n    private router: ActivatedRoute,\n    private route: Router,\n    private addressBook: AddressBookService,\n    private api: ApiService,\n    private price: PriceService,\n    private repService: RepresentativeService,\n    private notifications: NotificationService,\n    private wallet: WalletService,\n    private util: UtilService,\n    public settings: AppSettingsService,\n    private bademBlock: BademBlockService,\n    private qrModalService: QrModalService) {\n      // to detect when the account changes if the view is already active\n      route.events.subscribe((val) => {\n        if (val instanceof NavigationEnd) {\n          this.clearRemoteVars(); // reset the modal content for remote signing\n        }\n      });\n  }\n\n  async ngOnInit() {\n    const params = this.router.snapshot.queryParams;\n    if ('sign' in params) {\n      this.remoteVisible = params.sign === 1;\n    }\n\n    this.routerSub = this.route.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        this.loadAccountDetails(); // Reload the state when navigating to itself from the transactions page\n      }\n    });\n    this.priceSub = this.price.lastPrice$.subscribe(event => {\n      this.account.balanceFiat = this.util.badem.rawToMbadem(this.account.balance || 0).times(this.price.price.lastPrice).toNumber();\n      this.account.pendingFiat = this.util.badem.rawToMbadem(this.account.pending || 0).times(this.price.price.lastPrice).toNumber();\n    });\n\n    await this.loadAccountDetails();\n    this.addressBook.loadAddressBook();\n\n    // populate representative list\n    if (!this.settings.settings.serverAPI) return;\n\n    // add the localReps to the list\n    const localReps = this.repService.getSortedRepresentatives();\n    this.representativeList.push(...localReps);\n  }\n\n  clearRemoteVars() {\n    this.selectedAmount = this.amounts[0];\n    this.amount = null;\n    this.amountRaw = new BigNumber(0);\n    this.amountFiat = null;\n    this.rawAmount = new BigNumber(0);\n    this.fromAccount = {};\n    this.toAccount = false;\n    this.toAccountID = '';\n    this.toAddressBook = '';\n    this.toAccountStatus = null;\n    this.repStatus = null;\n    this.qrString = null;\n    this.qrCodeImageBlock = null;\n    this.qrCodeImageBlockReceive = null;\n    this.blockHash = null;\n    this.blockHashReceive = null;\n    this.blockTypeSelected = this.blockTypes[0];\n    this.representativeModel = '';\n    this.representativeListMatch = '';\n  }\n\n  async loadAccountDetails(refresh= false) {\n    if (refresh && !this.statsRefreshEnabled) return;\n    this.statsRefreshEnabled = false;\n    setTimeout(() => this.statsRefreshEnabled = true, 5000);\n\n    this.pendingBlocks = [];\n    this.accountID = this.router.snapshot.params.account;\n    this.addressBookEntry = this.addressBook.getAccountName(this.accountID);\n    this.addressBookModel = this.addressBookEntry || '';\n    this.walletAccount = this.wallet.getWalletAccount(this.accountID);\n    this.account = await this.api.accountInfo(this.accountID);\n\n    if (!this.account) return;\n    const knownRepresentative = this.repService.getRepresentative(this.account.representative);\n    this.repLabel = knownRepresentative ? knownRepresentative.name : null;\n\n    // If there is a pending balance, or the account is not opened yet, load pending transactions\n    if ((!this.account.error && this.account.pending > 0) || this.account.error) {\n      // Take minimum receive into account\n      let pending;\n      if (this.settings.settings.minimumReceive) {\n        const minAmount = this.util.badem.mbademToRaw(this.settings.settings.minimumReceive);\n        pending = await this.api.pendingLimit(this.accountID, 50, minAmount.toString(10));\n        this.account.pending = '0';\n      } else {\n        pending = await this.api.pending(this.accountID, 50);\n      }\n\n      if (pending && pending.blocks) {\n        for (const block in pending.blocks) {\n          if (!pending.blocks.hasOwnProperty(block)) continue;\n          this.pendingBlocks.push({\n            account: pending.blocks[block].source,\n            amount: pending.blocks[block].amount,\n            local_timestamp: pending.blocks[block].local_timestamp,\n            addressBookName: this.addressBook.getAccountName(pending.blocks[block].source) || null,\n            hash: block,\n          });\n\n          // Update the actual account pending amount with this above-threshold-value\n          if (this.settings.settings.minimumReceive) {\n            this.account.pending = new BigNumber(this.account.pending).plus(pending.blocks[block].amount).toString(10);\n          }\n        }\n      }\n    }\n\n    // If the account doesnt exist, set the pending balance manually\n    if (this.account.error) {\n      const pendingRaw = this.pendingBlocks.reduce(\n        (prev: BigNumber, current: any) => prev.plus(new BigNumber(current.amount)),\n        new BigNumber(0)\n      );\n      this.account.pending = pendingRaw;\n    }\n\n    // Set fiat values?\n    this.account.balanceRaw = new BigNumber(this.account.balance || 0).mod(this.badem);\n    this.account.pendingRaw = new BigNumber(this.account.pending || 0).mod(this.badem);\n    this.account.balanceFiat = this.util.badem.rawToMbadem(this.account.balance || 0).times(this.price.price.lastPrice).toNumber();\n    this.account.pendingFiat = this.util.badem.rawToMbadem(this.account.pending || 0).times(this.price.price.lastPrice).toNumber();\n    await this.getAccountHistory(this.accountID);\n\n\n    const qrCode = await QRCode.toDataURL(`${this.accountID}`);\n    this.qrCodeImage = qrCode;\n  }\n\n  ngOnDestroy() {\n    if (this.routerSub) {\n      this.routerSub.unsubscribe();\n    }\n    if (this.priceSub) {\n      this.priceSub.unsubscribe();\n    }\n  }\n\n  async getAccountHistory(account, resetPage = true) {\n    if (resetPage) {\n      this.pageSize = 25;\n    }\n    const history = await this.api.accountHistory(account, this.pageSize, true);\n    const additionalBlocksInfo = [];\n\n    if (history && history.history && Array.isArray(history.history)) {\n      this.accountHistory = history.history.map(h => {\n        if (h.type === 'state') {\n          // For Open and receive blocks, we need to look up block info to get originating account\n          if (h.subtype === 'open' || h.subtype === 'receive') {\n            additionalBlocksInfo.push({ hash: h.hash, link: h.link });\n          } else {\n            h.link_as_account = this.util.account.getPublicAccountID(this.util.hex.toUint8(h.link));\n            h.addressBookName = this.addressBook.getAccountName(h.link_as_account) || null;\n          }\n        } else {\n          h.addressBookName = this.addressBook.getAccountName(h.account) || null;\n        }\n        return h;\n      });\n\n      // Remove change blocks now that we are using the raw output\n      this.accountHistory = this.accountHistory.filter(h => h.type !== 'change' && h.subtype !== 'change');\n\n      if (additionalBlocksInfo.length) {\n        const blocksInfo = await this.api.blocksInfo(additionalBlocksInfo.map(b => b.link));\n        for (const block in blocksInfo.blocks) {\n          if (!blocksInfo.blocks.hasOwnProperty(block)) continue;\n\n          const matchingBlock = additionalBlocksInfo.find(a => a.link === block);\n          if (!matchingBlock) continue;\n          const accountInHistory = this.accountHistory.find(h => h.hash === matchingBlock.hash);\n          if (!accountInHistory) continue;\n\n          const blockData = blocksInfo.blocks[block];\n\n          accountInHistory.link_as_account = blockData.block_account;\n          accountInHistory.addressBookName = this.addressBook.getAccountName(blockData.block_account) || null;\n        }\n      }\n\n    } else {\n      this.accountHistory = [];\n    }\n  }\n\n  async loadMore() {\n    if (this.pageSize <= this.maxPageSize) {\n      this.pageSize += 25;\n      await this.getAccountHistory(this.accountID, false);\n    }\n  }\n\n  async saveRepresentative() {\n    if (this.wallet.walletIsLocked()) return this.notifications.sendWarning(`Wallet must be unlocked`);\n    if (!this.walletAccount) return;\n    const repAccount = this.representativeModel;\n\n    const valid = this.util.account.isValidAccount(repAccount);\n    if (!valid) return this.notifications.sendWarning(`Account ID is not a valid account`);\n\n    try {\n      const changed = await this.bademBlock.generateChange(this.walletAccount, repAccount, this.wallet.isLedgerWallet());\n      if (!changed) {\n        this.notifications.sendError(`Error changing representative, please try again`);\n        return;\n      }\n    } catch (err) {\n      this.notifications.sendError(err.message);\n      return;\n    }\n\n    // Reload some states, we are successful\n    this.representativeModel = '';\n    this.showEditRepresentative = false;\n\n    const accountInfo = await this.api.accountInfo(this.accountID);\n    this.account = accountInfo;\n    const newRep = this.repService.getRepresentative(repAccount);\n    this.repLabel = newRep ? newRep.name : '';\n\n    this.notifications.sendSuccess(`Successfully changed representative`);\n  }\n\n  async saveAddressBook() {\n    const addressBookName = this.addressBookModel.trim();\n    if (!addressBookName) {\n      // Check for deleting an entry in the address book\n      if (this.addressBookEntry) {\n        this.addressBook.deleteAddress(this.accountID);\n        this.notifications.sendSuccess(`Successfully removed address book entry!`);\n        this.addressBookEntry = null;\n      }\n\n      this.showEditAddressBook = false;\n      return;\n    }\n\n    try {\n      await this.addressBook.saveAddress(this.accountID, addressBookName);\n    } catch (err) {\n      this.notifications.sendError(err.message);\n      return;\n    }\n\n    this.notifications.sendSuccess(`Saved address book entry!`);\n\n    this.addressBookEntry = addressBookName;\n    this.showEditAddressBook = false;\n  }\n\n  searchRepresentatives() {\n    if (this.representativeModel !== '' && !this.util.account.isValidAccount(this.representativeModel)) this.repStatus = 0;\n    else this.repStatus = null;\n\n    this.showRepresentatives = true;\n    const search = this.representativeModel || '';\n\n    const matches = this.representativeList\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.representativeResults$.next(matches);\n  }\n\n  selectRepresentative(rep) {\n    this.showRepresentatives = false;\n    this.representativeModel = rep;\n    this.searchRepresentatives();\n    this.validateRepresentative();\n  }\n\n  async validateRepresentative() {\n    setTimeout(() => this.showRepresentatives = false, 400);\n    this.representativeModel = this.representativeModel.replace(/ /g, '');\n\n    if (this.representativeModel === '') {\n      this.representativeListMatch = '';\n      return;\n    }\n\n    const rep = this.repService.getRepresentative(this.representativeModel);\n\n    if (rep) {\n      this.representativeListMatch = rep.name;\n\t} else {\n      this.representativeListMatch = '';\n    }\n  }\n\n  copied() {\n    this.notifications.sendSuccess(`Successfully copied to clipboard!`);\n  }\n\n  // Remote signing methods\n  // An update to the Badem amount, sync the fiat value\n  syncFiatPrice() {\n    if (!this.validateAmount()) return;\n    const rawAmount = this.getAmountBaseValue(this.amount || 0).plus(this.amountRaw);\n    if (rawAmount.lte(0)) {\n      this.amountFiat = 0;\n      return;\n    }\n\n    // This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n    const precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n    // Determine fiat value of the amount\n    const fiatAmount = this.util.badem.rawToMbadem(rawAmount)\n    .times(this.price.price.lastPrice)\n    .times(precision)\n    .floor().div(precision).toNumber();\n\n    this.amountFiat = fiatAmount;\n  }\n\n  // An update to the fiat amount, sync the nano value based on currently selected denomination\n  syncBademPrice() {\n    if (!this.amountFiat) {\n      this.amount = '';\n      return;\n    }\n    if (!this.util.string.isNumeric(this.amountFiat)) return;\n    const rawAmount = this.util.badem.mbademToRaw(new BigNumber(this.amountFiat).div(this.price.price.lastPrice));\n    const bademVal = this.util.badem.rawToBadem(rawAmount).floor();\n    const bademAmount = this.getAmountValueFromBase(this.util.badem.bademToRaw(bademVal));\n\n    this.amount = bademAmount.toNumber();\n  }\n\n  searchAddressBook() {\n    this.showAddressBook = true;\n    const search = this.toAccountID || '';\n    const addressBook = this.addressBook.addressBook;\n\n    const matches = addressBook\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.addressBookResults$.next(matches);\n  }\n\n  selectBookEntry(account) {\n    this.showAddressBook = false;\n    this.toAccountID = account;\n    this.searchAddressBook();\n    this.validateDestination();\n  }\n\n  async validateDestination() {\n    // The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n    setTimeout(() => this.showAddressBook = false, 400);\n\n    // Remove spaces from the account id\n    this.toAccountID = this.toAccountID.replace(/ /g, '');\n\n    this.addressBookMatch = this.addressBook.getAccountName(this.toAccountID);\n\n    // const accountInfo = await this.walletService.walletApi.accountInfo(this.toAccountID);\n    this.toAccountStatus = null;\n    if (this.util.account.isValidAccount(this.toAccountID)) {\n      const accountInfo = await this.api.accountInfo(this.toAccountID);\n      if (accountInfo.error) {\n        if (accountInfo.error === 'Account not found') {\n          this.toAccountStatus = 1;\n        }\n      }\n      if (accountInfo && accountInfo.frontier) {\n        this.toAccountStatus = 2;\n      }\n    } else {\n      this.toAccountStatus = 0;\n    }\n  }\n\n  validateAmount() {\n    if (this.util.account.isValidBademAmount(this.amount)) {\n      this.amountStatus = 1;\n      return true;\n    } else {\n      this.amountStatus = 0;\n      return false;\n    }\n  }\n\n  setMaxAmount() {\n    this.amountRaw = this.account.balance ? new BigNumber(this.account.balance).mod(this.badem) : new BigNumber(0);\n    const bademVal = this.util.badem.rawToBadem(this.account.balance).floor();\n    const maxAmount = this.getAmountValueFromBase(this.util.badem.bademToRaw(bademVal));\n    this.amount = maxAmount.toNumber();\n    this.syncFiatPrice();\n  }\n\n  getAmountBaseValue(value) {\n\n    switch (this.selectedAmount.value) {\n      default:\n      case 'badem': return this.util.badem.bademToRaw(value);\n      case 'kbadem': return this.util.badem.kbademToRaw(value);\n      case 'mbadem': return this.util.badem.mbademToRaw(value);\n    }\n  }\n\n  getAmountValueFromBase(value) {\n    switch (this.selectedAmount.value) {\n      default:\n      case 'badem': return this.util.badem.rawToBadem(value);\n      case 'kbadem': return this.util.badem.rawToKbadem(value);\n      case 'mbadem': return this.util.badem.rawToMbadem(value);\n    }\n  }\n\n  async generateSend() {\n    const isValid = this.util.account.isValidAccount(this.toAccountID);\n    if (!isValid) return this.notifications.sendWarning(`To account address is not valid`);\n    if (!this.accountID || !this.toAccountID) return this.notifications.sendWarning(`From and to account are required`);\n    if (!this.validateAmount()) return this.notifications.sendWarning(`Invalid BADEM Amount`);\n\n    this.qrCodeImageBlock = null;\n\n    const from = await this.api.accountInfo(this.accountID);\n    const to = await this.api.accountInfo(this.toAccountID);\n    if (!from) return this.notifications.sendError(`From account not found`);\n\n    from.balanceBN = new BigNumber(from.balance || 0);\n    to.balanceBN = new BigNumber(to.balance || 0);\n\n    this.fromAccount = from;\n    this.toAccount = to;\n\n    const rawAmount = this.getAmountBaseValue(this.amount || 0);\n    this.rawAmount = rawAmount.plus(this.amountRaw);\n\n    const bademAmount = this.rawAmount.div(this.badem);\n\n    if (this.amount < 0 || rawAmount.lessThan(0)) return this.notifications.sendWarning(`Amount is invalid`);\n    if (from.balanceBN.minus(rawAmount).lessThan(0)) return this.notifications.sendError(`From account does not have enough BADEM`);\n\n    // Determine a proper raw amount to show in the UI, if a decimal was entered\n    this.amountRaw = this.rawAmount.mod(this.badem);\n\n    // Determine fiat value of the amount\n    this.amountFiat = this.util.badem.rawToMbadem(rawAmount).times(this.price.price.lastPrice).toNumber();\n\n    const remaining = new BigNumber(from.balance).minus(this.rawAmount);\n    const remainingDecimal = remaining.toString(10);\n\n    const defaultRepresentative = this.settings.settings.defaultRepresentative || this.bademBlock.getRandomRepresentative();\n    const representative = from.representative || defaultRepresentative;\n    const blockData = {\n      account: this.accountID.replace('badem_', 'badem_').toLowerCase(),\n      previous: from.frontier,\n      representative: representative,\n      balance: remainingDecimal,\n      link: this.util.account.getAccountPublicKey(this.toAccountID),\n    };\n    this.blockHash = nanocurrency.hashBlock({\n      account: blockData.account,\n      link: blockData.link,\n      previous: blockData.previous,\n      representative: blockData.representative,\n      balance: blockData.balance\n    });\n    console.log('Created block', blockData);\n    console.log('Block hash: ' + this.blockHash);\n\n    // Previous block info\n    const previousBlockInfo = await this.api.blockInfo(blockData.previous);\n    if (!('contents' in previousBlockInfo)) return this.notifications.sendError(`Previous block not found`);\n    const jsonBlock = JSON.parse(previousBlockInfo.contents);\n    const blockDataPrevious = {\n      account: jsonBlock.account.replace('badem_', 'badem_').toLowerCase(),\n      previous: jsonBlock.previous,\n      representative: jsonBlock.representative,\n      balance: jsonBlock.balance,\n      link: jsonBlock.link,\n      signature: jsonBlock.signature,\n    };\n\n    // Badem signing standard\n    this.qrString = 'bademsign:{\"block\":' + JSON.stringify(blockData) + ',\"previous\":' + JSON.stringify(blockDataPrevious) + '}';\n    const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n    this.qrCodeImageBlock = qrCode;\n  }\n\n  async generateReceive(pendingHash) {\n    this.qrCodeImageBlockReceive = null;\n    this.qrString = null;\n    this.blockHashReceive = null;\n\n    const UIkit = window['UIkit'];\n    const modal = UIkit.modal('#receive-modal');\n    modal.show();\n\n    const toAcct = await this.api.accountInfo(this.accountID);\n\n    const openEquiv = !toAcct || !toAcct.frontier; // if open block\n\n    const previousBlock = toAcct.frontier || this.zeroHash; // set to zeroes if open block\n    const defaultRepresentative = this.settings.settings.defaultRepresentative || this.bademBlock.getRandomRepresentative();\n    const representative = toAcct.representative || defaultRepresentative;\n\n    const srcBlockInfo = await this.api.blocksInfo([pendingHash]);\n    const srcAmount = new BigNumber(srcBlockInfo.blocks[pendingHash].amount);\n    const newBalance = openEquiv ? srcAmount : new BigNumber(toAcct.balance).plus(srcAmount);\n    const newBalanceDecimal = newBalance.toString(10);\n\n    const blockData = {\n      account: this.accountID.replace('badem_', 'badem_').toLowerCase(),\n      previous: previousBlock,\n      representative: representative,\n      balance: newBalanceDecimal,\n      link: pendingHash,\n    };\n\n    this.blockHashReceive = nanocurrency.hashBlock({\n      account: blockData.account,\n      link: blockData.link,\n      previous: blockData.previous,\n      representative: blockData.representative,\n      balance: blockData.balance\n    });\n    console.log('Created block', blockData);\n    console.log('Block hash: ' + this.blockHashReceive);\n\n    // Previous block info\n    let blockDataPrevious = null;\n    if (!openEquiv) {\n      const previousBlockInfo = await this.api.blockInfo(blockData.previous);\n      if (!('contents' in previousBlockInfo)) return this.notifications.sendError(`Previous block not found`);\n      const jsonBlock = JSON.parse(previousBlockInfo.contents);\n      blockDataPrevious = {\n        account: jsonBlock.account.replace('badem_', 'badem_').toLowerCase(),\n        previous: jsonBlock.previous,\n        representative: jsonBlock.representative,\n        balance: jsonBlock.balance,\n        link: jsonBlock.link,\n        signature: jsonBlock.signature,\n      };\n    }\n\n    let qrData;\n    if (blockDataPrevious) {\n      qrData = {\n        block: blockData,\n        previous: blockDataPrevious\n      };\n    } else {\n      qrData = {\n        block: blockData\n      };\n    }\n\n    // Badem signing standard\n    this.qrString = 'bademsign:' + JSON.stringify(qrData);\n\n    const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n    this.qrCodeImageBlockReceive = qrCode;\n  }\n\n  async generateChange() {\n    if (!this.util.account.isValidAccount(this.representativeModel)) return this.notifications.sendError(`Not a valid representative account`);\n    this.qrCodeImageBlock = null;\n    this.blockHash = null;\n    this.qrString = null;\n\n    const account = await this.api.accountInfo(this.accountID);\n\n    if (!account || !('frontier' in account)) return this.notifications.sendError(`Account must be opened first!`);\n\n    const balance = new BigNumber(account.balance);\n    const balanceDecimal = balance.toString(10);\n    const blockData = {\n      account: this.accountID.replace('badem_', 'badem_').toLowerCase(),\n      previous: account.frontier,\n      representative: this.representativeModel,\n      balance: balanceDecimal,\n      link: this.zeroHash,\n    };\n\n    this.blockHash = nanocurrency.hashBlock({\n      account: blockData.account,\n      link: blockData.link,\n      previous: blockData.previous,\n      representative: blockData.representative,\n      balance: blockData.balance\n    });\n\n    console.log('Created block', blockData);\n    console.log('Block hash: ' + this.blockHash);\n\n    // Previous block info\n    const previousBlockInfo = await this.api.blockInfo(blockData.previous);\n    if (!('contents' in previousBlockInfo)) return this.notifications.sendError(`Previous block not found`);\n    const jsonBlock = JSON.parse(previousBlockInfo.contents);\n    const blockDataPrevious = {\n      account: jsonBlock.account.replace('badem_', 'badem_').toLowerCase(),\n      previous: jsonBlock.previous,\n      representative: jsonBlock.representative,\n      balance: jsonBlock.balance,\n      link: jsonBlock.link,\n      signature: jsonBlock.signature,\n    };\n\n    // Badem signing standard\n    this.qrString = 'bademsign:{\"block\":' + JSON.stringify(blockData) + ',\"previous\":' + JSON.stringify(blockDataPrevious) + '}';\n    const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n    this.qrCodeImageBlock = qrCode;\n  }\n\n  showRemote(state: boolean) {\n    this.remoteVisible = !state;\n  }\n\n  showRemoteModal() {\n    const UIkit = window['UIkit'];\n    const modal = UIkit.modal('#block-modal');\n    modal.show();\n    this.clearRemoteVars();\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.toAccountID = data.content;\n          this.validateDestination();\n          break;\n        case 'rep1':\n          this.representativeModel = data.content;\n          this.validateRepresentative();\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  resetRaw() {\n    this.amountRaw = new BigNumber(0);\n  }\n\n  // End remote signing methods\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    \n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider\">\n          Accounts\n          <a (click)=\"viewAdvanced = !viewAdvanced\" style=\"font-size: 12px; margin-left: 25px;\">{{ viewAdvanced ? 'BASIC' : 'ADVANCED' }}</a>\n        </h2>\n      </div>\n      <div class=\"uk-width-auto@m uk-width-1-1 uk-text-right\">\n        <div class=\"uk-grid-small uk-child-width-expand\" uk-grid>\n          <div>\n            <input type=\"number\" class=\"uk-input uk-form-width-small uk-width-1-1@m\" [(ngModel)]=\"newAccountIndex\" placeholder=\"Account #\" *ngIf=\"viewAdvanced\">\n          </div>\n          <div class=\"uk-width-auto@m\">\n            <button class=\"uk-button uk-button-secondary uk-width-1-1@m\" (click)=\"createAccount()\">\n              Add New Account\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-overflow-auto\">\n      <table class=\"uk-table uk-table-striped uk-table-small\">\n        <thead>\n        <tr>\n          <th scope=\"col\" class=\"uk-width-3-5@m uk-width-1-2\">\n            Account\n          </th>\n          <th scope=\"col\" class=\"uk-width-1-5@m uk-width-1-4 uk-text-right\">Balance</th>\n          <th scope=\"col\" class=\"uk-width-1-5@m uk-width-1-4 uk-text-right\"></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let account of accounts\" class=\"uk-visible-toggle\">\n          <td class=\"uk-visible-toggle uk-text-truncate\">\n            <div uk-grid>\n              <div [class]=\"[ 'uk-width-auto', 'uk-text-truncate', !isLedgerWallet ? 'account-container' : 'account-container-wide' ]\">\n                <div class=\"uk-width-1-1\">\n                  <a class=\"uk-label uk-label-default account-index\" [routerLink]=\"'/account/' + account.id\" title=\"View Account Details\" uk-tooltip>\n                    {{ account.addressBookName ? account.addressBookName : 'Account #' + account.index }}\n                  </a>\n                </div>\n                <a [routerLink]=\"'/account/' + account.id\" class=\"uk-link-text\" title=\"View Account Details\" uk-tooltip>\n                  <app-nano-account-id [accountID]=\"account.id\" middle=\"on\"></app-nano-account-id>\n                </a>\n              </div>\n              <div class=\"uk-width-auto copy-container\">\n                <ul class=\"uk-iconnav copy-icons\">\n                  <li><a ngxClipboard [cbContent]=\"account.id\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                  <li *ngIf=\"isLedgerWallet\"><a uk-icon=\"icon: commenting\" title=\"Confirm Address On Ledger\" (click)=\"showLedgerAddress(account)\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </td>\n          <td class=\"uk-text-right\" style=\"white-space: nowrap;\">\n            <div class=\"uk-width-1-1\">\n              <div *ngIf=\"account.pending.gt(0)\" class=\"incoming-label\">\n                <div class=\"text-snippet\">New</div>\n                <div class=\"text-full\">+{{ account.pending | badem: settings.settings.displayDenomination + ',true' }}</div>\n              </div>\n              <span [title]=\"( account.balanceRaw.gt(0) ? ( '+' + ( account.balanceRaw.toString(10) | squeeze:'5,5' ) + ' raw' ) : '' )\">\n                {{ account.balance | badem: settings.settings.displayDenomination }}\n              </span>\n            </div>\n            <div class=\"uk-width-1-1\">\n              {{ account.balanceFiat | fiat: settings.settings.displayCurrency }}\n            </div>\n          </td>\n          <td class=\"uk-text-right\">\n            <div class=\"uk-float-right\">\n              <a (click)=\"deleteAccount(account)\" class=\"uk-text-danger\" title=\"Hide Account\" uk-tooltip><span uk-icon=\"icon: close;\"></span></a>\n            </div>\n          </td>\n        </tr>\n        <tr *ngIf=\"!accounts.length\">\n          <td colspan=\"4\" style=\"text-align: center;\">You don't have any accounts yet, <a (click)=\"createAccount()\">click here to create one</a>.</td>\n        </tr>\n        <tr class=\"uk-alert uk-alert-primary missing-accounts-hint\" *ngIf=\"!isSingleKeyWallet\">\n          <td colspan=\"4\" style=\"text-align: center;\"><span uk-icon=\"icon: info\"></span> Missing accounts? <a (click)=\"createAccount()\">Add new account</a> to import a previously used address.</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <p class=\"uk-text-center uk-text-small\">Click on an account to view more details!</p>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Subject, timer} from 'rxjs';\nimport {debounce} from 'rxjs/operators';\nimport {\n  AppSettingsService,\n  LedgerService,\n  LedgerStatus,\n  ModalService,\n  NotificationService,\n  RepresentativeService,\n  WalletService\n} from '../../services';\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.css']\n})\nexport class AccountsComponent implements OnInit {\n  accounts = this.walletService.wallet.accounts;\n  isLedgerWallet = this.walletService.isLedgerWallet();\n  isSingleKeyWallet = this.walletService.isSingleKeyWallet();\n  viewAdvanced = false;\n  newAccountIndex = null;\n\n  // When we change the accounts, redetect changable reps (Debounce by 5 seconds)\n  accountsChanged$ = new Subject();\n  reloadRepWarning$ = this.accountsChanged$.pipe(debounce(() => timer(5000)));\n\n  constructor(\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    public modal: ModalService,\n    public settings: AppSettingsService,\n    private representatives: RepresentativeService,\n    private ledger: LedgerService) { }\n\n  async ngOnInit() {\n    this.reloadRepWarning$.subscribe(a => {\n      this.representatives.detectChangeableReps();\n    });\n  }\n\n  async createAccount() {\n    if (this.walletService.isLocked()) {\n      return this.notificationService.sendError(`Wallet is locked.`);\n    }\n    if (!this.walletService.isConfigured()) return this.notificationService.sendError(`Wallet is not configured`);\n    if (this.walletService.wallet.accounts.length >= 20) return this.notificationService.sendWarning(`You can only track up to 20 accounts at a time.`);\n    // Advanced view, manual account index?\n    let accountIndex = null;\n    if (this.viewAdvanced && this.newAccountIndex != null) {\n      const index = parseInt(this.newAccountIndex, 10);\n      if (index < 0) return this.notificationService.sendWarning(`Invalid account index - must be positive number`);\n      const existingAccount = this.walletService.wallet.accounts.find(a => a.index === index);\n      if (existingAccount) {\n        return this.notificationService.sendWarning(`The account at this index is already loaded`);\n      }\n      accountIndex = index;\n    }\n    try {\n      const newAccount = await this.walletService.addWalletAccount(accountIndex);\n      this.notificationService.sendSuccess(`Successfully created new account ${newAccount.id}`);\n      this.newAccountIndex = null;\n      this.accountsChanged$.next(newAccount.id);\n    } catch (err) {\n      this.notificationService.sendError(`Unable to add new account: ${err.message}`);\n    }\n  }\n\n  sortAccounts() {\n    if (this.walletService.isLocked()) {\n      return this.notificationService.sendError(`Wallet is locked.`);\n    }\n    if (!this.walletService.isConfigured()) return this.notificationService.sendError(`Wallet is not configured`);\n    if (this.walletService.wallet.accounts.length <= 1) return this.notificationService.sendWarning(`You need at least 2 accounts to sort them`);\n    this.walletService.wallet.accounts = this.walletService.wallet.accounts.sort((a, b) => a.index - b.index);\n    // this.accounts = this.walletService.wallet.accounts;\n    this.walletService.saveWalletExport(); // Save new sorted accounts list\n    this.notificationService.sendSuccess(`Successfully sorted accounts by index!`);\n  }\n\n  copied() {\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`);\n  }\n\n  async deleteAccount(account) {\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning(`Wallet must be unlocked.`);\n    }\n    try {\n      await this.walletService.removeWalletAccount(account.id);\n      this.notificationService.sendSuccess(`Successfully removed account ${account.id}`);\n      this.accountsChanged$.next(account.id);\n    } catch (err) {\n      this.notificationService.sendError(`Unable to delete account: ${err.message}`);\n    }\n  }\n\n  async showLedgerAddress(account) {\n    if (this.ledger.ledger.status !== LedgerStatus.READY) {\n      return this.notificationService.sendWarning(`Ledger device must be ready`);\n    }\n    this.notificationService.sendInfo(`Confirming account address on Ledger device...`, { identifier: 'ledger-account', length: 0 });\n    try {\n      await this.ledger.getLedgerAccount(account.index, true);\n      this.notificationService.sendSuccess(`Account address confirmed on Ledger`);\n    } catch (err) {\n      this.notificationService.sendError(`Account address denied - if it is wrong do not use the wallet!`);\n    }\n    this.notificationService.removeNotification('ledger-account');\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\" id=\"address-book-sortable\">\n    \n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider\">\n          Address Book\n          <a (click)=\"activePanel =  activePanel === 0 ? 2 : 0;\" style=\"font-size: 12px; margin-left: 25px;\">{{ activePanel === 2 ? 'ADDRESS BOOK' : 'IMPORT / EXPORT' }}</a>\n        </h2>\n      </div>\n      <div class=\"uk-width-auto@s uk-width-1-1 uk-text-right\">\n        <button class=\"uk-button uk-button-secondary uk-align-right uk-width-auto@s\" (click)=\"activePanel = 1;\">Add New Contact</button>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1 nlt-page-intro\">\n      <p>\n        You can use the address book to store a label for your own accounts and others you frequently transact with, which are visible throughout the application.\n      </p>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel === 0\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-margin\">\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n            <li style=\"background: #fff; border-bottom: 0;\">\n              <div uk-grid style=\"color: #999; text-transform: uppercase; font-size: .875rem; font-weight: 400;\">\n                <div class=\"uk-width-2-5\">Name</div>\n                <div class=\"uk-width-expand\">Account ID</div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">Options</div>\n              </div>\n            </li>\n          </ul>\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\" uk-sortable=\"handle: .uk-sortable-handle; cls-custom: uk-box-shadow-small uk-background uk-background-default;\">\n            <li class=\"\" *ngFor=\"let addressBook of addressBook$ | async;\" [attr.data-account]=\"addressBook.account\">\n              <div uk-grid>\n                <div class=\"uk-width-2-5 uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <a (click)=\"editEntry(addressBook)\" class=\"uk-link-text\" title=\"Edit Account Label\" uk-tooltip>{{ addressBook.name }}</a>\n                    </div>\n                    <ul class=\"uk-iconnav uk-width-auto\" style=\"padding-left: 0;\">\n                      <li><span class=\"uk-sortable-handle uk-margin-small-right\" uk-icon=\"icon: table\"></span></li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"uk-width-expand uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <a [routerLink]=\"'/account/' + addressBook.account\" class=\"uk-link-text uk-display-block\" title=\"View Account Details\" uk-tooltip>\n                        <app-nano-account-id [accountID]=\"addressBook.account\"></app-nano-account-id>\n                      </a>\n                    </div>\n                    <ul class=\"uk-iconnav\" style=\"padding-left: 10px;\">\n                      <li><a ngxClipboard [cbContent]=\"addressBook.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n\n                </div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">\n                  <a (click)=\"deleteAddress(addressBook.account)\" class=\"uk-text-danger\" title=\"Delete From Address Book\" uk-tooltip><span uk-icon=\"icon: trash;\"></span></a>\n                </div>\n              </div>\n\n            </li>\n            <li *ngIf=\"!(addressBook$ | async).length\" class=\"uk-text-center\">\n              You do not have any address book entries saved yet, <a (click)=\"activePanel = 1\">click here to create one</a>.\n            </li>\n          </ul>\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel === 1\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h2 class=\"uk-card-title\">Add New Contact</h2>\n          </div>\n          <div class=\"uk-card-body\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-account\">Account ID</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input type=\"text\" class=\"uk-input\" id=\"new-address-account\" [(ngModel)]=\"newAddressAccount\" placeholder=\"badem_abc123\">\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-name\">Name</label>\n                <div class=\"uk-form-controls\">\n                  <input type=\"text\" class=\"uk-input\" id=\"new-address-name\" [(ngModel)]=\"newAddressName\" (keyup.enter)=\"saveNewAddress()\" placeholder=\"Exchange Deposit Address, Main Trading Account, etc\">\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-card-footer\">\n            <div uk-grid>\n              <div class=\"uk-width-1-2@s uk-text-left\">\n                <button class=\"uk-button uk-button-danger uk-width-1-1\" (click)=\"cancelNewAddress()\">Cancel</button>\n              </div>\n              <div class=\"uk-width-1-2@s uk-text-right\">\n                <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"saveNewAddress()\">Save New Contact</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel === 2\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h3 class=\"uk-card-title\">Import / Export</h3>\n          </div>\n          <div class=\"uk-card-body\">\n            Use this tool to simplify transferring your address book between devices.  Use the options below to import or export your\n            address book from a file or QR Code/URL.  Your address book is NOT encrypted by your wallet password.\n            <div *ngIf=\"addressBookShowQRExport\" uk-grid>\n              <div class=\"uk-width-1-1\">\n                <hr class=\"uk-divider-icon\">\n              </div>\n\n              <div class=\"uk-width-1-2@s uk-width-1-4@m\">\n                <img [src]=\"addressBookQRExportImg\" alt=\"QR code\">\n              </div>\n              <div class=\"uk-width-1-2@s uk-width-3-4@m\">\n                Scan the QR code on any device to import your BademVault Address Book!<br>\n                <br>\n                If you do not have a QR code scanner, you can also import your address book by using the URL below.<br>\n                <input type=\"text\" class=\"uk-input\" value=\"{{ addressBookQRExportUrl }}\"><br>\n                <a title=\"Copy Export URL To Clipboard\" ngxClipboard [cbContent]=\"addressBookQRExportUrl\" (cbOnSuccess)=\"notificationService.sendSuccess('Address book export copied to clipboard!')\" uk-tooltip>Copy to clipboard</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n            <div class=\"js-upload uk-text-left uk-width-auto@s uk-width-1-1\" style=\"display: inline-block;\" uk-form-custom>\n              <input type=\"file\" id=\"import-from-file\" (change)=\"importFromFile($event.target.files)\" multiple>\n              <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" type=\"button\" tabindex=\"-1\">Import Address Book</button>\n            </div>\n            <button (click)=\"exportAddressBookToFile()\" class=\"uk-button uk-button-secondary uk-width-auto@s uk-width-1-1\">Export As File</button>\n            <button (click)=\"exportAddressBook()\" class=\"uk-button uk-button-secondary uk-width-auto@s uk-width-1-1\">Export As QR Code / URL</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {UtilService} from '../../services/util.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport {Router} from '@angular/router';\nimport * as QRCode from 'qrcode';\n\n@Component({\n  selector: 'app-address-book',\n  templateUrl: './address-book.component.html',\n  styleUrls: ['./address-book.component.css']\n})\nexport class AddressBookComponent implements OnInit, AfterViewInit {\n\n  activePanel = 0;\n\n  addressBook$ = this.addressBookService.addressBook$;\n  newAddressAccount = '';\n  newAddressName = '';\n  addressBookShowQRExport = false;\n  addressBookQRExportUrl = '';\n  addressBookQRExportImg = '';\n  importExport = false;\n\n  constructor(\n    private addressBookService: AddressBookService,\n    private walletService: WalletService,\n    public notificationService: NotificationService,\n    public modal: ModalService,\n    private util: UtilService,\n    private qrModalService: QrModalService,\n    private router: Router) { }\n\n  async ngOnInit() {\n    this.addressBookService.loadAddressBook();\n  }\n\n  ngAfterViewInit() {\n    // Listen for reordering events\n    document.getElementById('address-book-sortable').addEventListener('moved', (e) => {\n      const element = e.target as HTMLDivElement;\n      const elements = element.children;\n\n      const result = [].slice.call(elements);\n      const datas = result.map(el => el.dataset.account);\n\n      this.addressBookService.setAddressBookOrder(datas);\n      this.notificationService.sendSuccess(`Updated address book order`);\n    });\n  }\n\n  editEntry(addressBook) {\n    this.newAddressAccount = addressBook.account;\n    this.newAddressName = addressBook.name;\n    this.activePanel = 1;\n    setTimeout(() => {\n      document.getElementById('new-address-name').focus();\n    }, 150);\n  }\n\n  async saveNewAddress() {\n    if (!this.newAddressAccount || !this.newAddressName) return this.notificationService.sendError(`Account and name are required`);\n\n    this.newAddressAccount = this.newAddressAccount.replace(/ /g, ''); // Remove spaces\n\n    // Make sure name doesn't exist\n    if (this.addressBookService.nameExists(this.newAddressName)) {\n      return this.notificationService.sendError(`This name is already in use!  Please use a unique name`);\n    }\n\n    // Make sure the address is valid\n    const valid = this.util.account.isValidAccount(this.newAddressAccount);\n    if (!valid) return this.notificationService.sendWarning(`Account ID is not a valid account`);\n\n    try {\n      await this.addressBookService.saveAddress(this.newAddressAccount, this.newAddressName);\n      this.notificationService.sendSuccess(`Successfully created new name for account!`);\n      // IF this is one of our accounts, set its name, and hope things update?\n      const walletAccount = this.walletService.wallet.accounts.find(a => a.id.toLowerCase() === this.newAddressAccount.toLowerCase());\n      if (walletAccount) {\n        walletAccount.addressBookName = this.newAddressName;\n      }\n      this.cancelNewAddress();\n    } catch (err) {\n      this.notificationService.sendError(`Unable to save entry: ${err.message}`);\n    }\n  }\n\n  cancelNewAddress() {\n    this.newAddressName = '';\n    this.newAddressAccount = '';\n    this.activePanel = 0;\n  }\n\n  copied() {\n    this.notificationService.sendSuccess(`Account address copied to clipboard!`);\n  }\n\n  async deleteAddress(account) {\n    try {\n      this.addressBookService.deleteAddress(account);\n      this.notificationService.sendSuccess(`Successfully deleted address book entry`);\n    } catch (err) {\n      this.notificationService.sendError(`Unable to delete entry: ${err.message}`);\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.newAddressAccount = data.content;\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  async exportAddressBook() {\n    const exportData = this.addressBookService.addressBook;\n    if (exportData.length >= 25) {\n      return this.notificationService.sendError(`Address books with more than 24 entries need to use the file export method.`);\n    }\n    const base64Data = btoa(JSON.stringify(exportData));\n    const exportUrl = `https://nault.cc/import-address-book#${base64Data}`;\n\n    this.addressBookQRExportUrl = exportUrl;\n    this.addressBookQRExportImg = await QRCode.toDataURL(exportUrl);\n    this.addressBookShowQRExport = true;\n  }\n\n  exportAddressBookToFile() {\n    const fileName = `BademVault-AddressBook.json`;\n\n    const exportData = this.addressBookService.addressBook;\n    this.triggerFileDownload(fileName, exportData);\n\n    this.notificationService.sendSuccess(`Address book export downloaded!`);\n  }\n\n  importFromFile(files) {\n    if (!files.length) {\n      return;\n    }\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const fileData = event.target['result'] as string;\n      try {\n        const importData = JSON.parse(fileData);\n        if (!importData.length || !importData[0].account) {\n          return this.notificationService.sendError(`Bad import data, make sure you selected a BademVault Address Book export`);\n        }\n\n        const encoded = btoa(JSON.stringify(importData));\n        this.router.navigate(['import-address-book'], { fragment: encoded });\n      } catch (err) {\n        this.notificationService.sendError(`Unable to parse import data, make sure you selected the right file!`);\n      }\n    };\n\n    reader.readAsText(file);\n  }\n\n  triggerFileDownload(fileName, exportData) {\n    const blob = new Blob([JSON.stringify(exportData)], { type: 'application/json' });\n\n    // Check for iOS, which is weird with saving files\n    const iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    } else {\n      const elem = window.document.createElement('a');\n      const objUrl = window.URL.createObjectURL(blob);\n      if (iOS) {\n        elem.href = `data:attachment/file,${JSON.stringify(exportData)}`;\n      } else {\n        elem.href = objUrl;\n      }\n      elem.download = fileName;\n      document.body.appendChild(elem);\n      elem.click();\n      setTimeout(function() {\n        document.body.removeChild(elem);\n        window.URL.revokeObjectURL(objUrl);\n      }, 200);\n    }\n  }\n\n}\n","<div class=\"nav-representative-info\" *ngIf=\"(displayedRepresentatives.length > 0) else noRepresentatives\">\n  <div class=\"representative\" *ngFor=\"let rep of displayedRepresentatives; let repIdx = index\" (mouseover)=\"showRepHelp=rep.id\" (mouseout)=\"showRepHelp=null\">\n    <h2>Representative{{\n        (repIdx !== 0)\n      ? (\n          ' for '\n        + (\n            rep.accounts[0].addressBookName\n          ? ( '\"' + rep.accounts[0].addressBookName + '\"' )\n          : ( rep.accounts[0].id.slice(0, 10) + '...' )\n        )\n      )\n      : ''\n    }}</h2>\n    <div class=\"representative-name-row\">\n      <a (click)=\"showRepSelectionForSpecificRep(rep)\" class=\"name\">{{ rep.label || 'Unknown Rep' }}</a>\n      <div class=\"weight-total\" *ngIf=\"!rep.percent.isZero()\">{{ rep.percent.toFixed(2) }}%</div>\n    </div>\n    <ng-container [ngSwitch]=\"true\">\n      <div class=\"representative-health-row health-green\" *ngSwitchCase=\"(rep.statusText == 'trusted')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">Good Representative</div>\n      </div>\n      <div class=\"representative-health-row health-green\" *ngSwitchCase=\"(rep.statusText == 'ok')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">Good Representative</div>\n      </div>\n      <div class=\"representative-health-row health-yellow\" *ngSwitchCase=\"(rep.statusText == 'warn')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">Acceptable Representative</div>\n      </div>\n      <div class=\"representative-health-row health-red\" *ngSwitchCase=\"(rep.statusText == 'alert')\">\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">Bad Representative</div>\n      </div>\n      <div class=\"representative-health-row health-unknown\" *ngSwitchDefault>\n        <div class=\"health-icon\"></div>\n        <div class=\"label\">Unknown Status</div>\n      </div>\n    </ng-container>\n    <div [class]=\"[ 'representative-help-tooltip', showRepHelp==rep.id ? 'visible' : 'hidden' ]\">\n      <p class=\"primary\"><b>{{ rep.label || 'Unknown Rep' }}</b> represents you in the Badem consensus protocol by voting on your behalf.</p>\n      <p>You can change representative at any time by clicking on its name above.</p>\n      <div class=\"header-row\">\n        <div class=\"separator\"></div>\n        <h2>Health</h2>\n        <div class=\"separator\"></div>\n      </div>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.markedToAvoid\">\n        <span uk-icon=\"icon: warning;\"></span>This representative is <b>marked as \"avoid\"</b> in the list of known reps.\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.veryHighWeight\">\n        <span uk-icon=\"icon: warning;\"></span>This representative has a <b>very high voting weight</b> (over 3%).\n      </p>\n      <p class=\"uk-text-warning\" *ngIf=\"rep.status.highWeight\">\n        <span uk-icon=\"icon: warning;\"></span>This representative has a <b>high voting weight</b> (over 2%).\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"rep.status.veryLowUptime && rep.status.uptime > 0\">\n        <span uk-icon=\"icon: warning;\"></span>This representative is <b>often offline</b> ({{ rep.status.uptime.toFixed(1) }}% uptime).\n      </p>\n      <p class=\"uk-text-warning\" *ngIf=\"rep.status.lowUptime && rep.status.uptime > 0\">\n        <span uk-icon=\"icon: warning;\"></span>This representative is <b>sometimes offline</b> ({{ rep.status.uptime.toFixed(1) }}% uptime).\n      </p>\n      <p class=\"uk-text-danger\" *ngIf=\"!rep.status.online && rep.status.uptime === 0\">\n        <span uk-icon=\"icon: warning;\"></span>This representative has been <b>offline for the past {{ rep.status.daysSinceLastVoted }} days</b>.\n      </p>\n      <ng-container [ngSwitch]=\"true\">\n        <p *ngSwitchCase=\"(rep.statusText == 'trusted')\">\n          You have marked this representative as trusted, meaning its status will remain \"Good\" even in case of severe issues with uptime or weight distribution.\n        </p>\n        <p class=\"uk-text-success\" *ngSwitchCase=\"(rep.statusText == 'ok')\">\n          <span uk-icon=\"icon: check;\"></span>We found no issues with uptime or weight distribution of your current representative.\n        </p>\n        <p *ngSwitchCase=\"(rep.statusText == 'warn')\">\n          Switching to a different representative could improve security and decentralization of the Badem network.\n        </p>\n        <p *ngSwitchCase=\"(rep.statusText == 'alert')\">\n          It is <b>highly advised</b> to switch to a different representative, in order to improve security and decentralization of the Badem network.\n        </p>\n        <p *ngSwitchDefault>\n          <span uk-icon=\"icon: question;\"></span>We could not determine status of this representative.\n        </p>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<ng-template #noRepresentatives>\n  <div class=\"nav-representative-info\" *ngIf=\"(!initialLoadComplete || selectedAccountHasRepresentative) else selectedAccountHasNoRep\">\n    <div class=\"representative\">\n      <h2>Representative</h2>\n      <div class=\"representative-name-row\">\n        <div class=\"name no-interact\">Loading...</div>\n      </div>\n      <div class=\"representative-health-row health-unknown health-loading\">\n        <div uk-spinner=\"ratio: 0.5;\"></div>\n        <div class=\"label\">Checking Status...</div>\n      </div>\n    </div>\n  </div>\n  <ng-template #selectedAccountHasNoRep>\n    <div class=\"nav-representative-info\">\n      <div class=\"representative\">\n        <h2>Representative</h2>\n        <div class=\"representative-name-row\">\n          <div class=\"name no-interact\">None</div>\n        </div>\n        <div class=\"representative-health-row health-unknown\">\n          <div class=\"health-icon\"></div>\n          <div class=\"label\">Receive a transaction to configure</div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-template>\n\n<div class=\"nav-status-row interactable uk-animation-slide-left\" (click)=\"showRepSelectionForAllChangeableReps()\" *ngIf=\"showRepChangeRequired\">\n  <div class=\"status-icon\">\n    <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n  </div>\n  <div class=\"status-labels\">\n    <div class=\"label primary uk-text-warning\">Representative Change Required</div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {BademBlockService} from '../../services/nano-block.service';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-change-rep-widget',\n  templateUrl: './change-rep-widget.component.html',\n  styleUrls: ['./change-rep-widget.component.css']\n})\nexport class ChangeRepWidgetComponent implements OnInit {\n\n  changeableRepresentatives = this.repService.changeableReps;\n  displayedRepresentatives = [];\n  representatives = [];\n  showRepChangeRequired = false;\n  showRepHelp = false;\n  selectedAccount = null;\n  selectedAccountHasRep = false;\n  initialLoadComplete = false;\n\n  constructor(\n    private walletService: WalletService,\n    private blockService: BademBlockService,\n    private repService: RepresentativeService,\n    private router: Router\n    ) { }\n\n  async ngOnInit() {\n    this.repService.walletReps$.subscribe(async reps => {\n      if ( reps[0] === null ) {\n        // initial state from new BehaviorSubject([null])\n        return;\n      }\n\n      this.representatives = reps;\n      await this.updateChangeableRepresentatives();\n      this.updateDisplayedRepresentatives();\n      this.initialLoadComplete = true;\n    });\n\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      this.selectedAccount = acc;\n      this.updateDisplayedRepresentatives();\n    });\n\n    // Detect if a wallet is reset\n    this.walletService.wallet.newWallet$.subscribe(shouldReload => {\n      if (shouldReload) {\n        this.resetRepresentatives();\n      }\n    });\n\n    // Detect if a new open block is received\n    this.blockService.newOpenBlock$.subscribe(async shouldReload => {\n      if (shouldReload) {\n        await this.repService.getRepresentativesOverview(); // calls walletReps$.next\n      }\n    });\n\n    this.repService.changeableReps$.subscribe(async reps => {\n      // Includes both acceptable and bad reps\n      // When user clicks 'Rep Change Required' action, acceptable reps will also be included\n      this.changeableRepresentatives = reps;\n\n      // However 'Rep Change Required' action will only appear when there is at least one bad rep\n      this.showRepChangeRequired = reps.some(rep => (rep.status.changeRequired === true));\n\n      this.updateDisplayedRepresentatives();\n    });\n\n    this.selectedAccount = this.walletService.wallet.selectedAccount;\n    this.updateSelectedAccountHasRep();\n    await this.repService.getRepresentativesOverview(); // calls walletReps$.next\n  }\n\n  async resetRepresentatives() {\n    console.log('Reloading representatives..');\n    this.initialLoadComplete = false;\n    this.selectedAccount = null;\n    this.representatives = [];\n    this.changeableRepresentatives = [];\n    this.showRepChangeRequired = false;\n    this.updateDisplayedRepresentatives();\n    await this.repService.getRepresentativesOverview(); // calls walletReps$.next\n    console.log('Representatives reloaded');\n  }\n\n  async updateChangeableRepresentatives() {\n    await this.repService.detectChangeableReps(this.representatives);\n  }\n\n  updateDisplayedRepresentatives() {\n    this.updateSelectedAccountHasRep();\n    this.displayedRepresentatives = this.getDisplayedRepresentatives(this.representatives);\n  }\n\n  includeRepRequiringChange(displayedReps: any[]) {\n    const repRequiringChange =\n      this.changeableRepresentatives\n        .sort((a, b) => b.delegatedWeight.minus(a.delegatedWeight))\n        .filter(\n          (changeableRep) => (\n              (changeableRep.status.changeRequired === true)\n            && displayedReps.every(\n              (displayedRep) =>\n                (displayedRep.id !== changeableRep.id)\n            )\n          )\n        )[0];\n\n    if (repRequiringChange == null) {\n      return [...displayedReps];\n    }\n\n    return [ ...displayedReps, Object.assign({}, repRequiringChange) ];\n  }\n\n  updateSelectedAccountHasRep() {\n    if (this.selectedAccount != null) {\n      this.selectedAccountHasRep = !!this.selectedAccount.frontier;\n      return;\n    }\n\n    this.selectedAccountHasRep =\n      this.walletService.wallet.accounts.some(\n        (acc) =>\n          (acc.frontier)\n      );\n  }\n\n  getDisplayedRepresentatives(representatives: any[]) {\n    if (this.representatives.length === 0) {\n      return [];\n    }\n\n    if (this.selectedAccount !== null) {\n      const selectedAccountRep =\n        this.representatives\n          .filter(\n            (rep) =>\n              rep.accounts.some(\n                (a) =>\n                  (a.id === this.selectedAccount.id)\n              )\n          )[0];\n\n      if (selectedAccountRep == null) {\n        return [];\n      }\n\n      const displayedRepsAllAccounts = [ Object.assign( {}, selectedAccountRep ) ];\n\n      return this.includeRepRequiringChange(displayedRepsAllAccounts);\n    }\n\n    const sortedRepresentatives: any[] = [...representatives];\n\n    sortedRepresentatives.sort((a, b) => b.delegatedWeight.minus(a.delegatedWeight));\n\n    const displayedReps = [ Object.assign( {}, sortedRepresentatives[0] ) ];\n\n    return this.includeRepRequiringChange(displayedReps);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  showRepSelectionForSpecificRep(clickedRep) {\n    this.showRepHelp = false;\n    const accountsToChangeRepFor = (\n        (\n            (this.selectedAccount !== null)\n          && clickedRep.accounts.some(a => (a.id === this.selectedAccount.id))\n        )\n      ? this.selectedAccount.id\n      : ( // all accounts that delegate to this rep\n        this.representatives\n          .filter(\n            (rep) =>\n              (rep.id === clickedRep.id)\n          )\n          .map(\n            (rep) =>\n              rep.accounts.map(a => a.id).join(',')\n          )\n          .join(',')\n      )\n    );\n\n    this.router.navigate(['/representatives'], {\n      queryParams: { hideOverview: true, accounts: accountsToChangeRepFor, showRecommended: true }\n    });\n  }\n\n  showRepSelectionForAllChangeableReps() {\n    const allAccounts = this.changeableRepresentatives.map(rep => rep.accounts.map(a => a.id).join(',')).join(',');\n\n    this.router.navigate(['/representatives'], { queryParams: { hideOverview: true, accounts: allAccounts, showRecommended: true } });\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Configure BademVault</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Display Settings</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">FIAT Currency <span uk-icon=\"icon: info;\" uk-tooltip title=\"Change the currency pair used when showing fiat values in the application.  Select None to hide fiat pairs.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedCurrency\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let currency of currencies\" [value]=\"currency.value\">{{ currency.name }}</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <!--<div class=\"uk-width-1-1\">-->\n            <!--<div class=\"uk-form-horizontal\">-->\n\n              <!--<div class=\"uk-margin\">-->\n                <!--<label class=\"uk-form-label\">Account Prefix <span uk-icon=\"icon: info;\" uk-tooltip title=\"Change the Badem account prefix used throughout the application.  Both are valid when sending\"></span></label>-->\n                <!--<div class=\"uk-form-controls\">-->\n\n                  <!--<div class=\"uk-inline uk-width-1-1\">-->\n                    <!--<select class=\"uk-select\" [(ngModel)]=\"selectedPrefix\">-->\n                      <!--<option *ngFor=\"let prefix of prefixOptions\" [value]=\"prefix.value\">{{ prefix.name }}</option>-->\n                    <!--</select>-->\n                  <!--</div>-->\n                <!--</div>-->\n              <!--</div>-->\n            <!--</div>-->\n          <!--</div>-->\n\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button (click)=\"updateDisplaySettings()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">Update Display Settings</button>\n      </div>\n    </div>\n\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Wallet Settings</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Lock After Inactivity <span uk-icon=\"icon: info;\" uk-tooltip title=\"Change if your wallet should be locked automatically after you have not interacted with it for a certain period of time\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedInactivityMinutes\">\n                      <option *ngFor=\"let option of inactivityOptions\" [value]=\"option.value\">{{ option.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Wallet Storage <span uk-icon=\"icon: info;\" uk-tooltip title=\"Change where your wallet is stored.  If you select none, your wallet is reset every time you reload.\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedStorage\">\n                      <option *ngFor=\"let storage of storageOptions\" [value]=\"storage.value\">{{ storage.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">PoW Source <span uk-icon=\"icon: info;\" uk-tooltip title=\"Change how Proof of Work for your blocks are generated.\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedPoWOption\">\n                      <option *ngFor=\"let pow of powOptions\" [value]=\"pow.value\">{{ pow.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Receive Method <span uk-icon=\"icon: info;\" uk-tooltip title=\"If automatically receiving incoming transactions with the largest amount first or chronological from recorded time. Manual will allow you to pick your own transactions from the receive screen.\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <select class=\"uk-select\" [(ngModel)]=\"selectedPendingOption\">\n                      <option *ngFor=\"let pending of pendingOptions\" [value]=\"pending.value\">{{ pending.name }}</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Min Receive [BADEM] <span uk-icon=\"icon: info;\" uk-tooltip title=\"Minimum BADEM amount to receive. Transactions below this amount will be ignored by the wallet both for receiving and in the transaction list.  Set to blank or 0 to accept all transactions.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <input [(ngModel)]=\"minimumReceive\" class=\"uk-input uk-margin-small-bottom\" id=\"form-horizontal-text4\" type=\"text\" placeholder=\"0.000001\">\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Default Representative <span uk-icon=\"icon: info;\" uk-tooltip title=\"This representative will be used when creating the initial open block on a new account\"></span></label>\n\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('rep1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input (blur)=\"validateRepresentative()\" (keyup)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" [(ngModel)]=\"defaultRepresentative\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': repStatus === 2, 'uk-form-danger': repStatus === 0 }\" id=\"form-horizontal-text3\" type=\"text\" placeholder=\"Leave blank to use a recommended one\" #repInput>\n\n                    <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">Representative List Results</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let rep of representativeResults$ | async\">\n                          <a (click)=\"selectRepresentative(rep.id)\">\n                            {{ rep.name }}\n                            <span *ngIf=\"rep.trusted\" uk-icon=\"icon: star;\" class=\"uk-text-success\"></span>\n                            <span *ngIf=\"rep.warn\" uk-icon=\"icon: warning;\" class=\"uk-text-warning\"></span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\" *ngIf=\"representativeListMatch\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <span class=\"uk-label uk-label-danger\">{{ representativeListMatch }}</span>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button (click)=\"updateWalletSettings()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">Update Wallet Settings</button>\n      </div>\n    </div>\n\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\" id=\"server-settings\">\n        <h3 class=\"uk-card-title\">Server Settings</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-1\">\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">Server Configuration <span uk-icon=\"icon: info;\" uk-tooltip title=\"Change which server is used to communicate with the Badem network\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"selectedServer\" (change)=\"serverConfigChange(selectedServer)\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let server of serverOptions\" [value]=\"server.value\">{{ server.name }}</option>\n                  </select>\n                </div>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showServerValues()\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"\">\n                <label class=\"uk-form-label uk-text-right\">API Server <span uk-icon=\"icon: info;\" uk-tooltip title=\"This server is used to load, cache, and enhance results from the Badem node\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"!showServerConfigs()\">\n                    <strong>{{ serverAPI }}</strong>\n                  </div>\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"showServerConfigs()\">\n                    <input [(ngModel)]=\"serverAPI\" class=\"uk-input uk-margin-small-bottom\" type=\"text\" placeholder=\"https://domain.com/path\">\n                    <span class=\"uk-text-meta\">\n                      This has to be a valid <a href=\"https://docs.nano.org/commands/rpc-protocol/\" target=\"_blank\" rel=\"noopener noreferrer\">Badem RPC endpoint</a> or an API compliant with it.\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showServerValues()\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"\">\n                <label class=\"uk-form-label uk-text-right\">WebSocket Server <span uk-icon=\"icon: info;\" uk-tooltip title=\"This server is used to notify the wallet in real time when new transactions arrive\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"!showServerConfigs()\">\n                    <strong>{{ serverWS }}</strong>\n                  </div>\n\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"showServerConfigs()\">\n                    <input [(ngModel)]=\"serverWS\" class=\"uk-input uk-margin-small-bottom\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"wss://domain.com/path\">\n                    <span class=\"uk-text-meta\">\n                      This has to be a <a href=\"https://docs.nano.org/integration-guides/websockets/#configuration\" target=\"_blank\" rel=\"noopener noreferrer\">Badem Node Websocket</a> or a WebSocket API compliant with it.<br>\n                      <i>Note: Since this server only notifies about new transactions, most of the wallet functions fine without it.</i>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showServerValues()\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"\">\n                <label class=\"uk-form-label uk-text-right\">Auth Header <span uk-icon=\"icon: info;\" uk-tooltip title=\"If API requires authentication. For example using basic auth: Basic xyz\"></span></label>\n                <div class=\"uk-form-controls\">\n\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"!showServerConfigs()\">\n                    <strong>{{ serverAuth }}</strong>\n                  </div>\n                  <div class=\"uk-inline uk-width-1-1\" *ngIf=\"showServerConfigs()\">\n                    <input [(ngModel)]=\"serverAuth\" class=\"uk-input uk-margin-small-bottom\" type=\"text\" placeholder=\"Optional\">\n                    <span class=\"uk-text-meta\">\n                      This has to be a valid Authorization header.<br>\n                      <i>For example, basic auth defined as \"Authorization: Basic base64Encode(username:password)\"<br>In that case, enter: Basic dHV0c3BsdXM6MTIzNDU2</i>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1\" *ngIf=\"showStatValues() || showServerConfigs()\">\n            <div class=\"uk-form-horizontal\">\n              <div>\n                <label class=\"uk-form-label uk-text-right\">Node Stats <span class=\"{{statsRefreshEnabled ? '':'node-stats-disabled'}}\" id=\"node-stats\" uk-icon=\"icon: refresh;\" (click)=\"updateNodeStats(true)\" uk-tooltip title=\"Can be used for troubleshooting. Click refresh to update.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <span class=\"uk-text-meta\">\n                      <table id=\"node-stats-table\">\n                        <td>\n                          <tr>\n                            <strong>Server</strong>\n                          </tr>\n                          <tr>\n                            <strong>Block Count</strong>\n                          </tr>\n                          <tr>\n                            <strong>Uncemented Blocks</strong>\n                          </tr>\n                          <tr>\n                            <strong>Peers Stake Required</strong>\n                          </tr>\n                          <tr>\n                            <strong>Peers Stake Total</strong>\n                          </tr>\n                          <tr>\n                            <strong>Node Version</strong>\n                          </tr>\n                          <tr>\n                            <strong>Network</strong>\n                          </tr>\n                          <tr *ngIf=\"showServerValues() && !showServerConfigs()\">\n                            <strong>Random Server</strong>\n                          </tr>\n                        </td>\n                        <td>\n                          <tr>\n                            {{serverAPIUpdated ? serverAPI:'Save settings to update'}}\n                          </tr>\n                          <tr>\n                            {{nodeBlockCount || 'N/A'}}\n                          </tr>\n                          <tr>\n                            {{nodeUncemented || 'N/A'}}\n                          </tr>\n                          <tr>\n                            {{peersStakeReq || 'N/A'}}\n                          </tr>\n                          <tr>\n                            {{peersStakeTotal || 'N/A'}}\n                          </tr>\n                          <tr>\n                            {{nodeVendor || 'N/A'}}\n                          </tr>\n                          <tr>\n                            {{nodeNetwork || 'N/A'}}\n                          </tr>\n                          <tr *ngIf=\"showServerValues() && !showServerConfigs()\">\n                            {{shouldRandom || 'No'}}\n                          </tr>\n                        </td>\n                      </table>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center\">\n        <button (click)=\"updateServerSettings()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">Update Server Settings</button>\n      </div>\n    </div>\n\n\n    <div class=\"uk-card uk-card-default uk-margin\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Advanced Options</h3>\n      </div>\n      <div class=\"uk-card-body uk-text-center\">\n        <div uk-grid>\n\n          <div class=\"uk-width-1-3@m\">\n            <button class=\"uk-button uk-button-danger\" (click)=\"clearWorkCache()\" uk-tooltip title=\"This will delete all locally cached Proof of Work values\">Clear Work Cache</button>\n          </div>\n          <div class=\"uk-width-1-3@m\">\n            <button class=\"uk-button uk-button-danger\" (click)=\"clearWalletData()\" uk-tooltip title=\"This will delete all data related to your wallet (Your seed and accounts)\">Delete Wallet Data</button>\n          </div>\n          <div class=\"uk-width-1-3@m\">\n            <button class=\"uk-button uk-button-danger\" (click)=\"clearAllData()\" uk-tooltip title=\"This will delete ALL stored data and reset app settings, including your wallet, address book and more.\">Delete ALL Data</button>\n          </div>\n        </div>\n      </div>\n      <!--<div class=\"uk-card-footer uk-text-right\">-->\n        <!--<button (click)=\"updateWalletSettings()\" class=\"uk-button uk-button-secondary\">Update Wallet Settings</button>-->\n      <!--</div>-->\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {PriceService} from '../../services/price.service';\nimport {PowService} from '../../services/pow.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {ApiService} from '../../services/api.service';\nimport {WebsocketService} from '../../services/websocket.service';\nimport {NodeService} from '../../services/node.service';\nimport {UtilService} from '../../services/util.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {QrModalService} from '../../services/qr-modal.service';\n\n@Component({\n  selector: 'app-configure-app',\n  templateUrl: './configure-app.component.html',\n  styleUrls: ['./configure-app.component.css']\n})\n\nexport class ConfigureAppComponent implements OnInit {\n\n  constructor(\n    private walletService: WalletService,\n    private notifications: NotificationService,\n    private appSettings: AppSettingsService,\n    private addressBook: AddressBookService,\n    private pow: PowService,\n    private api: ApiService,\n    private websocket: WebsocketService,\n    private workPool: WorkPoolService,\n    private repService: RepresentativeService,\n    private node: NodeService,\n    private util: UtilService,\n    private price: PriceService,\n    private qrModalService: QrModalService) { }\n  wallet = this.walletService.wallet;\n\n  denominations = [\n    { name: 'BADEM', value: 'mbadem' },\n    { name: 'kbadem', value: 'kbadem' },\n    { name: 'badem', value: 'badem' },\n  ];\n  selectedDenomination = this.denominations[0].value;\n\n  storageOptions = [\n    { name: 'Browser Local Storage', value: 'localStorage' },\n    { name: 'None', value: 'none' },\n  ];\n  selectedStorage = this.storageOptions[0].value;\n\n  currencies = [\n    { name: 'None', value: '' },\n    { name: 'USD - US Dollar', value: 'USD' },\n    { name: 'BTC - Bitcoin', value: 'BTC' },\n    { name: 'AUD - Australian Dollar', value: 'AUD' },\n    { name: 'BRL - Brazilian Real', value: 'BRL' },\n    { name: 'CAD - Canadian Dollar', value: 'CAD' },\n    { name: 'CHF - Swiss Franc', value: 'CHF' },\n    { name: 'CLP - Chilean Peso', value: 'CLP' },\n    { name: 'CNY - Chinese Yuan', value: 'CNY' },\n    { name: 'CZK - Czech Koruna', value: 'CZK' },\n    { name: 'DKK - Danish Krown', value: 'DKK' },\n    { name: 'EUR - Euro', value: 'EUR' },\n    { name: 'GBP - British Pound', value: 'GBP' },\n    { name: 'HKD - Hong Kong Dollar', value: 'HKD' },\n    { name: 'HUF - Hungarian Forint', value: 'HUF' },\n    { name: 'IDR - Indonesian Rupiah', value: 'IDR' },\n    { name: 'ILS - Israeli New Shekel', value: 'ILS' },\n    { name: 'INR - Indian Rupee', value: 'INR' },\n    { name: 'JPY - Japanese Yen', value: 'JPY' },\n    { name: 'KRW - South Korean Won', value: 'KRW' },\n    { name: 'MXN - Mexican Peso', value: 'MXN' },\n    { name: 'MYR - Malaysian Ringgit', value: 'MYR' },\n    { name: 'NOK - Norwegian Krone', value: 'NOK' },\n    { name: 'NZD - New Zealand Dollar', value: 'NZD' },\n    { name: 'PHP - Philippine Piso', value: 'PHP' },\n    { name: 'PKR - Pakistani Rupee', value: 'PKR' },\n    { name: 'PLN - Polish Zloty', value: 'PLN' },\n    { name: 'RUB - Russian Ruble', value: 'RUB' },\n    { name: 'SEK - Swedish Krona', value: 'SEK' },\n    { name: 'SGD - Singapore Dollar', value: 'SGD' },\n    { name: 'THB - Thai Baht', value: 'THB' },\n    { name: 'TRY - Turkish Lira', value: 'TRY' },\n    { name: 'TWD - New Taiwan Dollar', value: 'TWD' },\n    { name: 'ZAR - South African Rand', value: 'ZAR' },\n  ];\n  selectedCurrency = this.currencies[0].value;\n\n  inactivityOptions = [\n    { name: 'Never', value: 0 },\n    { name: '1 Minute', value: 1 },\n    { name: '5 Minutes', value: 5 },\n    { name: '15 Minutes', value: 15 },\n    { name: '30 Minutes', value: 30 },\n    { name: '1 Hour', value: 60 },\n    { name: '6 Hours', value: 360 },\n  ];\n  selectedInactivityMinutes = this.inactivityOptions[4].value;\n\n  powOptions = [\n    { name: 'Best Option Available', value: 'best' },\n    { name: 'Client Side - WebGL [Recommended] (Chrome/Firefox)', value: 'clientWebGL' },\n    { name: 'Client Side - CPU', value: 'clientCPU' },\n    { name: 'Server - BademVault Server', value: 'server' },\n  ];\n  selectedPoWOption = this.powOptions[0].value;\n\n  pendingOptions = [\n    { name: 'Largest Amount First', value: 'amount' },\n    { name: 'Oldest Transaction First', value: 'date' },\n    { name: 'Manual', value: 'manual' },\n  ];\n  selectedPendingOption = this.pendingOptions[0].value;\n\n  // prefixOptions = [\n  //   { name: 'badem_', value: 'badem' },\n  //   { name: 'badem_', value: 'badem' },\n  // ];\n  // selectedPrefix = this.prefixOptions[0].value;\n\n  serverOptions = [];\n  selectedServer = null;\n\n  defaultRepresentative = null;\n  representativeResults$ = new BehaviorSubject([]);\n  showRepresentatives = false;\n  representativeListMatch = '';\n  repStatus = null;\n  representativeList = [];\n\n  serverAPI = null;\n  serverAPIUpdated = null;\n  serverWS = null;\n  serverAuth = null;\n  minimumReceive = null;\n\n  nodeBlockCount = null;\n  nodeUnchecked = null;\n  nodeCemented = null;\n  nodeUncemented = null;\n  peersStakeReq = null;\n  peersStakeTotal = null;\n  nodeVendor = null;\n  nodeNetwork = null;\n  statsRefreshEnabled = true;\n  shouldRandom = null;\n\n  showServerValues = () => this.selectedServer && this.selectedServer !== 'random' && this.selectedServer !== 'offline';\n  showStatValues = () => this.selectedServer && this.selectedServer !== 'offline';\n  showServerConfigs = () => this.selectedServer && this.selectedServer === 'custom';\n\n  async ngOnInit() {\n    this.loadFromSettings();\n    this.updateNodeStats();\n\n    // populate representative list\n    if (!this.serverAPI) return;\n\n    // add the localReps to the list\n    const localReps = this.repService.getSortedRepresentatives();\n    this.representativeList.push(...localReps);\n  }\n\n  async updateNodeStats(refresh= false) {\n    if ((!this.serverAPIUpdated ||\n      (this.serverAPIUpdated !== this.appSettings.settings.serverAPI && this.selectedServer === 'random'))) return;\n    // refresh is not enabled\n    if (refresh && !this.statsRefreshEnabled) return;\n    // Offline mode selected\n    if (this.selectedServer === 'offline') return;\n\n    this.statsRefreshEnabled = false;\n    try {\n      const blockCount = await this.api.blockCount();\n      this.nodeBlockCount = Number(blockCount.count).toLocaleString('en-US');\n      this.nodeUnchecked = Number(blockCount.unchecked).toLocaleString('en-US');\n      this.nodeCemented = Number(blockCount.cemented).toLocaleString('en-US');\n      this.nodeUncemented = Number(blockCount.count - blockCount.cemented).toLocaleString('en-US');\n    } catch {console.warn('Failed to get node stats: block count'); }\n\n    try {\n      const quorumData = await this.api.confirmationQuorum();\n      this.peersStakeReq = quorumData ? Number(this.util.badem.rawToMbadem(quorumData.peers_stake_required)).toLocaleString('en-US') : null;\n      this.peersStakeTotal = quorumData ? Number(this.util.badem.rawToMbadem(quorumData.peers_stake_total)).toLocaleString('en-US') : null;\n    } catch {console.warn('Failed to get node stats: confirmation quorum'); }\n\n    try {\n      const version = await this.api.version();\n      this.nodeVendor = version.node_vendor;\n      this.nodeNetwork = version.network;\n    } catch {console.warn('Failed to get node stats: version'); }\n\n    setTimeout(() => this.statsRefreshEnabled = true, 5000);\n  }\n\n  loadFromSettings() {\n    const settings = this.appSettings.settings;\n\n    const matchingCurrency = this.currencies.find(d => d.value === settings.displayCurrency);\n    this.selectedCurrency = matchingCurrency.value || this.currencies[0].value;\n\n    const matchingStorage = this.storageOptions.find(d => d.value === settings.walletStore);\n    this.selectedStorage = matchingStorage.value || this.storageOptions[0].value;\n\n    const matchingInactivityMinutes = this.inactivityOptions.find(d => d.value === settings.lockInactivityMinutes);\n    this.selectedInactivityMinutes = matchingInactivityMinutes ? matchingInactivityMinutes.value : this.inactivityOptions[4].value;\n\n    const matchingPowOption = this.powOptions.find(d => d.value === settings.powSource);\n    this.selectedPoWOption = matchingPowOption ? matchingPowOption.value : this.powOptions[0].value;\n\n    const matchingPendingOption = this.pendingOptions.find(d => d.value === settings.pendingOption);\n    this.selectedPendingOption = matchingPendingOption ? matchingPendingOption.value : this.pendingOptions[0].value;\n\n    this.serverOptions = this.appSettings.serverOptions;\n    this.selectedServer = settings.serverName;\n    this.serverAPI = settings.serverAPI;\n    this.serverAPIUpdated = this.serverAPI;\n    this.serverWS = settings.serverWS;\n    this.serverAuth = settings.serverAuth;\n\n    this.minimumReceive = settings.minimumReceive;\n    this.defaultRepresentative = settings.defaultRepresentative;\n    if (this.defaultRepresentative) {\n      this.validateRepresentative();\n    }\n  }\n\n  async updateDisplaySettings() {\n    const newCurrency = this.selectedCurrency;\n    // const updatePrefixes = this.appSettings.settings.displayPrefix !== this.selectedPrefix;\n    const reloadFiat = this.appSettings.settings.displayCurrency !== newCurrency;\n    this.notifications.sendSuccess(`App display settings successfully updated!`);\n\n    if (reloadFiat) {\n      // Reload prices with our currency, then call to reload fiat balances.\n      await this.price.getPrice(newCurrency);\n      this.appSettings.setAppSetting('displayCurrency', newCurrency);\n      this.walletService.reloadFiatBalances();\n    }\n  }\n\n  async updateWalletSettings() {\n    const newStorage = this.selectedStorage;\n    let newPoW = this.selectedPoWOption;\n    const pendingOption = this.selectedPendingOption;\n    let minReceive = null;\n    if (this.util.account.isValidBademAmount(this.minimumReceive)) {\n      minReceive = this.minimumReceive;\n    }\n\n    const resaveWallet = this.appSettings.settings.walletStore !== newStorage;\n\n    // reload pending if threshold changes or if receive priority changes from manual to auto\n    const reloadPending = this.appSettings.settings.minimumReceive !== this.minimumReceive\n    || (pendingOption !== 'manual' && pendingOption !== this.appSettings.settings.pendingOption);\n\n    if (this.defaultRepresentative && this.defaultRepresentative.length) {\n      const valid = this.util.account.isValidAccount(this.defaultRepresentative);\n      if (!valid) {\n        return this.notifications.sendWarning(`Default representative is not a valid account`);\n      }\n    }\n\n    if (this.appSettings.settings.powSource !== newPoW) {\n      if (newPoW === 'clientWebGL' && !this.pow.hasWebGLSupport()) {\n        this.notifications.sendWarning(`WebGL support not available, set PoW to Best`);\n        newPoW = 'best';\n      }\n      if (newPoW === 'clientCPU' && !this.pow.hasWorkerSupport()) {\n        this.notifications.sendWarning(`CPU Worker support not available, set PoW to Best`);\n        newPoW = 'best';\n      }\n    }\n\n    const newSettings = {\n      walletStore: newStorage,\n      lockInactivityMinutes: Number(this.selectedInactivityMinutes),\n      powSource: newPoW,\n      pendingOption: pendingOption,\n      minimumReceive: minReceive,\n      defaultRepresentative: this.defaultRepresentative || null,\n    };\n\n    this.appSettings.setAppSettings(newSettings);\n    this.notifications.sendSuccess(`App wallet settings successfully updated!`);\n\n    if (resaveWallet) {\n      this.walletService.saveWalletExport(); // If swapping the storage engine, resave the wallet\n    }\n    if (reloadPending) {\n      this.walletService.reloadBalances(true);\n    }\n  }\n\n  async updateServerSettings() {\n    const newSettings = {\n      serverName: this.selectedServer,\n      serverAPI: null,\n      serverWS: null,\n      serverAuth: null,\n    };\n\n    // Custom... do some basic validation\n    if (this.serverAPI != null && this.serverAPI.trim().length > 1) {\n      if (this.serverAPI.startsWith('https://') || this.serverAPI.startsWith('http://')) {\n        newSettings.serverAPI = this.serverAPI;\n      } else {\n        return this.notifications.sendWarning(`Custom API Server has an invalid address.`);\n      }\n    }\n\n    if (this.serverWS != null && this.serverWS.trim().length > 1) {\n      if (this.serverWS.startsWith('wss://') || this.serverWS.startsWith('ws://')) {\n        newSettings.serverWS = this.serverWS;\n      } else {\n        return this.notifications.sendWarning(`Custom Update Server has an invalid address.`);\n      }\n    }\n\n    if (this.serverAuth != null && this.serverAuth.trim().length > 1) {\n      newSettings.serverAuth = this.serverAuth;\n    }\n\n    this.appSettings.setAppSettings(newSettings);\n    this.appSettings.loadAppSettings();\n\n    this.notifications.sendSuccess(`Server settings successfully updated, reconnecting to backend`);\n\n    this.node.node.status = false; // Directly set node to offline since API url changed.  Status will get set by reloadBalances\n\n    // Reload balances which triggers an api check + reconnect to websocket server\n    await this.walletService.reloadBalances();\n    this.websocket.forceReconnect();\n    // this is updated after setting server to random and doing recheck of wallet balance\n    this.serverAPIUpdated = this.appSettings.settings.serverAPI;\n    this.serverAPI = this.serverAPIUpdated;\n    this.statsRefreshEnabled = true;\n    this.updateNodeStats();\n  }\n\n  searchRepresentatives() {\n    if (this.defaultRepresentative !== '' && !this.util.account.isValidAccount(this.defaultRepresentative)) this.repStatus = 0;\n    else this.repStatus = null;\n\n    this.showRepresentatives = true;\n    const search = this.defaultRepresentative || '';\n\n    const matches = this.representativeList\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.representativeResults$.next(matches);\n  }\n\n  selectRepresentative(rep) {\n    this.showRepresentatives = false;\n    this.defaultRepresentative = rep;\n    this.searchRepresentatives();\n    this.validateRepresentative();\n  }\n\n  async validateRepresentative() {\n    setTimeout(() => this.showRepresentatives = false, 400);\n    if (this.defaultRepresentative) this.defaultRepresentative = this.defaultRepresentative.replace(/ /g, '');\n\n    if (this.defaultRepresentative === '') {\n      this.representativeListMatch = '';\n      return;\n    }\n\n    const rep = this.repService.getRepresentative(this.defaultRepresentative);\n\n    if (rep) {\n      this.representativeListMatch = rep.name;\n    } else {\n      this.representativeListMatch = '';\n    }\n  }\n\n  // When changing the Server Config option, prefill values\n  serverConfigChange(newServer) {\n    const custom = this.serverOptions.find(c => c.value === newServer);\n    if (custom) {\n      this.serverAPI = custom.api;\n      this.serverAPIUpdated = null;\n      this.serverWS = custom.ws;\n      this.serverAuth = custom.auth;\n      this.shouldRandom = custom.shouldRandom ? 'Yes' : 'No';\n    }\n\n    // reset server stats until updated\n    this.nodeBlockCount = null;\n    this.nodeUnchecked = null;\n    this.nodeCemented = null;\n    this.nodeUncemented = null;\n    this.peersStakeReq = null;\n    this.peersStakeTotal = null;\n    this.nodeVendor = null;\n    this.nodeNetwork = null;\n    this.statsRefreshEnabled = newServer === 'random' ? false : true;\n  }\n\n  async clearWorkCache() {\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p style=\"text-align: center;\">You are about to delete all locally cached Proof of Work values<br><br><b>Are you sure?</b></p>');\n      this.workPool.clearCache();\n      this.notifications.sendSuccess(`Successfully cleared the work cache!`);\n    } catch (err) {}\n  }\n\n  async clearWalletData() {\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p style=\"text-align: center;\">You are about to delete all of your wallet data stored in BademVault!<br><b>Make sure you have your seed and/or mnemonic backed up!!</b><br><br><b>Are you sure?</b></p>');\n      this.walletService.resetWallet();\n      this.walletService.removeWalletData();\n\n      this.notifications.sendSuccess(`Successfully deleted all wallet data!`);\n    } catch (err) {}\n  }\n\n  async clearAllData() {\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p style=\"text-align: center;\">You are about to delete all your data stored in BademVault and reset all settings.<br>This includes all of your wallet data and address book!<br><br><b>Make sure you have your seed and/or mnemonic backed up!!</b><br><br><b>Are you sure?</b></p>');\n      this.walletService.resetWallet();\n      this.walletService.removeWalletData();\n\n      this.workPool.deleteCache();\n      this.addressBook.clearAddressBook();\n      this.appSettings.clearAppSettings();\n      this.repService.resetRepresentativeList();\n\n      this.loadFromSettings();\n\n      this.notifications.sendSuccess(`Successfully deleted locally stored data and reset the settings!`);\n\n      // Get a new random API server or BademVault will get stuck in offline mode\n      this.updateServerSettings();\n    } catch (err) {}\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'rep1':\n          this.defaultRepresentative = data.content;\n          this.validateRepresentative();\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","<h2 class=\"uk-heading-divider\">Configure Wallet</h2>\n<p *ngIf=\"activePanel === panels.create || activePanel === panels.import\">Use the options below to import an existing wallet or create a new one</p>\n\n<div *ngIf=\"isConfigured() && (activePanel === panels.create || activePanel === panels.import)\" class=\"uk-alert uk-alert-danger\">\n  <b>You already have a local BademVault wallet configured</b><br>\n  Before going any further, be 100% certain you have backed up the seed to your current wallet!<br>\n  Without it, <b>any funds you have will become completely unrecoverable!</b>\n</div>\n\n<div uk-grid *ngIf=\"activePanel === panels.create || activePanel === panels.import\">\n  <div class=\"uk-width-1-1\">\n    <div class=\"uk-button-group uk-width-1-1\">\n      <button (click)=\"setPanel(0)\" class=\"uk-button uk-width-1-2\" [ngClass]=\"{ 'uk-button-primary': activePanel === panels.create, 'uk-button-secondary': activePanel !== panels.create }\">Create New Wallet</button>\n      <button (click)=\"setPanel(1)\" class=\"uk-button uk-width-1-2\" [ngClass]=\"{ 'uk-button-primary': activePanel === panels.import, 'uk-button-secondary': activePanel !== panels.import }\">Import Existing Wallet</button>\n    </div>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.create\">\n  <div class=\"uk-card-body\">\n    <p>\n      When you create a new wallet, a new Badem seed will be generated which can be used to create brand new accounts\n      on the Badem network.  Your Badem seed is the master key to all of your accounts and any money inside of them!\n    </p>\n    <div class=\"uk-alert-primary\" uk-alert>\n      <p>Make sure you back up your seed, write it down, and keep it incredibly safe! All funds inside can be lost without it!</p>\n    </div>\n  </div>\n  <div class=\"uk-card-footer uk-text-right\">\n    <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Create Wallet</button>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.import\">\n  <div class=\"uk-card-body\">\n    <p>\n      If you already have a Badem wallet, you can import it below.  When you import a wallet, it replaces the previous one in the GUI but none of your existing\n      accounts are affected since the wallet can be restored simply by importing it again. The seed is not stored anywhere besides in your local client so please make sure you have it stored elsewhere.  Use the drop\n      down below to select which type of import you want to use.\n    </p>\n    <div uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">Select Import Type</label>\n            <div class=\"uk-form-controls\">\n              <select class=\"uk-select\" [(ngModel)]=\"selectedImportOption\" id=\"form-horizontal-select\" (change)=\"onMethodChange(selectedImportOption)\">\n                <option *ngFor=\"let option of importOptions\" [value]=\"option.value\">{{ option.name }}</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr class=\"uk-divider-icon\" style=\"margin-top: 10px;\">\n\n    <div uk-grid *ngIf=\"selectedImportOption === 'file'\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          If you have saved your wallet to a file using BademVault before, use the button below to import it.\n        </p>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'seed'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          Enter your seed from any Badem wallet to import it below.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('seed1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <input type=\"text\" class=\"uk-input\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedModel\" placeholder=\"64 character Badem Backup Seed\">\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'mnemonic'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          Enter your mnemonic generated from BademVault or other Badem wallets. If it came from a Ledger device or certain multi-currency wallets, use \"BIP39 Mnemonic\" import type instead.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('mnemo1','mnemonic')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <textarea class=\"uk-textarea\" rows=\"3\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedMnemonicModel\" placeholder=\"24-words mnemonic\"></textarea>\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'bip39-mnemonic'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          Enter your mnemonic generated from a Ledger device or certain multi-currency wallets. If it was generated in BademVault, use \"Badem Mnemonic\" import type instead.\n        </p>\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">BIP39 Mnemonic</label>\n            <div class=\"uk-form-controls\">\n              <div class=\"uk-inline uk-width-expand\">\n                <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('mnemo2','mnemonic')\" uk-tooltip title=\"Scan from QR code\"></a>\n                <textarea class=\"uk-textarea\" rows=\"2\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedBip39MnemonicModel\" placeholder=\"12,15,18,21 or 24-words mnemonic\" autocomplete=\"off\"></textarea>\n              </div>\n           </div>\n          </div>\n        </div>\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">Account Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The wallet will be imported as a single private key for the account index you provide.\"></span></label>\n            <div class=\"uk-form-controls\">\n              <input type=\"text\" class=\"uk-input uk-margin-small-bottom {{validIndex ? '':'uk-form-danger'}}\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedBip39MnemonicIndexModel\" (ngModelChange)=\"accountIndexChange(importSeedBip39MnemonicIndexModel)\" maxLength=\"10\" placeholder=\"0 to {{indexMax}}\" autocomplete=\"off\">\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-form-horizontal\">\n          <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-horizontal-select\">BIP39 Passphrase <span uk-icon=\"icon: info;\" uk-tooltip title=\"Required only if the BIP39 seed is protected by a password or passphrase.\"></span></label>\n            <div class=\"uk-form-controls\">\n              <input type=\"password\" class=\"uk-input\" (keyup.enter)=\"importExistingWallet()\" [(ngModel)]=\"importSeedBip39MnemonicPasswordModel\" placeholder=\"Optional\" autocomplete=\"off\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'ledger'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          Make sure you have the Badem app installed, then connect your ledger device via USB. <a href=\"https://docs.nault.cc/2020/08/04/ledger-guide.html\" target=\"_blank\" rel=\"noopener noreferrer\">Ledger/BademVault User Guide</a><br>\n          <br>\n        </p>\n        <div *ngIf=\"ledger.status === ledgerStatus.NOT_CONNECTED\" class=\"uk-alert uk-alert-warning\">\n          <b>Ledger Device Not Connected</b><br>\n          Connect your ledger device via USB and make sure you have the Badem app installed, then press the button below to retry\n        </div>\n        <div *ngIf=\"ledger.status === ledgerStatus.LOCKED\" class=\"uk-alert uk-alert-warning\">\n          <b>Ledger Device Locked</b><br>\n          Unlock your Ledger device, then press the button below to retry\n        </div>\n        <div *ngIf=\"ledger.status === ledgerStatus.READY\" class=\"uk-alert uk-alert-success\">\n          <b>Ledger Device Ready</b><br>\n          Press the import button below to use your ledger wallet\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'privateKey'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          Enter your Badem private key below. These are not to be confused with Badem seeds, which are more common, and produce many private keys.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('priv1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <input type=\"text\" class=\"uk-input\" (keyup.enter)=\"importSingleKeyWallet()\" [(ngModel)]=\"importPrivateKeyModel\" placeholder=\"64 character Badem Private Key\">\n        </div>\n      </div>\n    </div>\n    <div uk-grid *ngIf=\"selectedImportOption === 'expandedKey'\" class=\"uk-margin-top\">\n      <div class=\"uk-width-1-1\">\n        <p>\n          Enter your expanded private key below. These are rare, and are usually generated from multi-party cryptography magic.\n        </p>\n        <div class=\"uk-inline uk-width-1-1\">\n          <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('expanded1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n          <input type=\"text\" class=\"uk-input\" (keyup.enter)=\"importSingleKeyWallet()\" [(ngModel)]=\"importExpandedKeyModel\" placeholder=\"64 or 128 character Badem Expanded Private Key\">\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"uk-card-footer uk-text-right\">\n    <div *ngIf=\"selectedImportOption === 'file'\" class=\"js-upload uk-width-auto@s uk-width-1-1\" uk-form-custom style=\"display: inline-block;\">\n      <input type=\"file\" id=\"import-from-file\" (change)=\"importFromFile($event.target.files)\" multiple>\n      <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" type=\"button\" tabindex=\"-1\">Import From File</button>\n    </div>\n    <button *ngIf=\"selectedImportOption === 'mnemonic'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Mnemonic</button>\n    <button *ngIf=\"selectedImportOption === 'bip39-mnemonic'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" [disabled]=\"!validIndex\" (click)=\"setPasswordInit()\">Import From Mnemonic</button>\n    <button *ngIf=\"selectedImportOption === 'seed'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Seed</button>\n    <button *ngIf=\"selectedImportOption === 'ledger' && ledger.status === ledgerStatus.READY\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"importLedgerWallet()\">Import From Ledger</button>\n    <button *ngIf=\"selectedImportOption === 'ledger' && ledger.status !== ledgerStatus.READY\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"importLedgerWallet(true)\">Refresh Ledger Status</button>\n    <button *ngIf=\"selectedImportOption === 'privateKey'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Private Key</button>\n    <button *ngIf=\"selectedImportOption === 'expandedKey'\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" (click)=\"setPasswordInit()\">Import From Expanded Private Key</button>\n  </div>\n</div>\n\n\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.backup\">\n  <div class=\"uk-card-header\">\n    <h3 class=\"uk-card-title\">Save Wallet Backup</h3>\n  </div>\n  <div class=\"uk-card-body\">\n    <p>\n      Below is the seed and mnemonic backup. You can use whichever you prefer in any other compatible wallet.\n    </p>\n    <div class=\"uk-alert-danger uk-alert-primary\">\n      Make sure to write down your seed and/or mnemonic or save it somewhere safe, and <strong>never share it with anyone!</strong><br>\n      It is the master key to all of your accounts, and the only way to recover your funds in an emergency.<br>\n    </div>\n    <br>\n\n    <div uk-grid>\n      <div class=\"uk-width-1-4\">Badem Seed</div>\n      <div class=\"uk-width-3-4 uk-text-truncate\">\n        {{ newWalletSeed }}<br>\n        <a title=\"Copy Seed To Clipboard\" ngxClipboard [cbContent]=\"newWalletSeed\" (cbOnSuccess)=\"copied()\" uk-tooltip>Copy seed to clipboard</a>\n      </div>\n    </div>\n\n    <hr class=\"uk-divider-icon\">\n\n    <div uk-grid>\n      <div class=\"uk-width-1-4@m\">\n        Badem Mnemonic<br>\n      </div>\n      <div class=\"uk-width-3-4@m\">\n        <pre class=\"mne-box\"><span *ngFor=\"let line of newWalletMnemonicLines; let l = index\" class=\"mne-cont\"><span *ngFor=\"let word of line; let i = index\" class=\"mne-word\"><span class=\"mne-num\">{{ (l * 4) + i + 1 }}</span> {{ word }}</span></span></pre>\n        <a title=\"Copy Mnemonic To Clipboard\" ngxClipboard [cbContent]=\"newWalletMnemonic\" (cbOnSuccess)=\"copied()\" uk-tooltip>Copy mnemonic to clipboard</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"uk-card-footer\">\n    <div class=\"uk-width-1-1\">\n      <label style=\"cursor: pointer;\"><input type=\"checkbox\" class=\"uk-checkbox\" [(ngModel)]=\"hasConfirmedBackup\"> &nbsp; I have securely stored the seed and/or mnemonic</label>\n    </div>\n    <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" id=\"create-wallet\" [disabled]=\"!hasConfirmedBackup\" (click)=\"confirmNewSeed()\">CREATE WALLET</button>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.password\">\n  <div class=\"uk-card-header\">\n    <h3 class=\"uk-card-title\">Set Wallet Password</h3>\n  </div>\n  <div class=\"uk-card-body\">\n    <p>\n      Your password is used to encrypt the sensitive parts of\n      your wallet when it is locked, which disables sending, receiving, creating accounts, and other operations.\n    </p>\n\n    <p>\n      For the safety of your funds, use a secure (green) password.\n    </p>\n    <div uk-grid>\n      <div class=\"uk-width-1-2@m\">\n        <input type=\"password\" class=\"uk-input\" [(ngModel)]=\"walletPasswordModel\" placeholder=\"New Wallet Password\">\n        <password-strength-meter *ngIf=\"walletPasswordModel.length > 0\" [password]=\"walletPasswordModel\" [enableFeedback]=\"true\" [minPasswordLength]=\"6\"></password-strength-meter>\n        <span class=\"password-helper\" *ngIf=\"walletPasswordModel.length > 0 && walletPasswordModel.length < 6\">Password must be at least 6 characters long</span>\n        <span class=\"password-helper\" *ngIf=\"walletPasswordConfirmModel.length >= 6 && walletPasswordModel !== walletPasswordConfirmModel\">Passwords do not match!</span>\n      </div>\n      <div class=\"uk-width-1-2@m\">\n        <input type=\"password\" class=\"uk-input\" (keyup.enter)=\"saveWalletPassword()\" [(ngModel)]=\"walletPasswordConfirmModel\" placeholder=\"Confirm Wallet Password\">\n      </div>\n    </div>\n  </div>\n  <div class=\"uk-card-footer uk-text-right\">\n    <button class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\" [disabled]=\"walletPasswordModel.length < 6 || (walletPasswordModel !== walletPasswordConfirmModel)\" (click)=\"saveWalletPassword()\">{{isNewWallet ? 'Next':'Import Wallet'}}</button>\n  </div>\n</div>\n\n<div class=\"uk-card uk-card-default\" *ngIf=\"activePanel === panels.final\">\n  <div class=\"uk-card-header\">\n    <h3 class=\"uk-card-title\">Wallet Created!</h3>\n  </div>\n  <div class=\"uk-card-body\">\n    <p>\n      Your wallet has been created and you are ready to send and receive Badem!<br>\n      It will lock after a certain amount of inactivity which can be changed in the <a routerLink=\"/configure-app\" routerLinkActive=\"active\">app settings</a>.\n    </p>\n  </div>\n  <div class=\"uk-card-footer uk-text-right\">\n    <button routerLink=\"/accounts\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">View Accounts</button>\n  </div>\n</div>\n\n<div *ngIf=\"activePanel === panels.final && !walletService.isLedgerWallet()\" class=\"uk-alert-primary\" uk-alert>\n  <p><strong>ProTip:</strong> If you lose your password, you can always restore your wallet using your seed or mnemonic you were given.</p>\n</div>\n<div *ngIf=\"activePanel === panels.final && walletService.isLedgerWallet()\" class=\"uk-alert-primary\" uk-alert>\n  <p><strong>ProTip:</strong> Press the Ledger status bar on the left side to reload your Ledger when connecting or disconnecting it.</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService, NotificationService, RepresentativeService} from '../../services';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as bip from 'bip39';\nimport {LedgerService, LedgerStatus} from '../../services/ledger.service';\nimport { QrModalService } from '../../services/qr-modal.service';\nimport {UtilService} from '../../services/util.service';\nimport { wallet } from 'nanocurrency-web';\n\nenum panels {'create', 'import', 'password', 'backup', 'final'}\nconst INDEX_MAX = 4294967295; // seed index\n\n@Component({\n  selector: 'app-configure-wallet',\n  templateUrl: './configure-wallet.component.html',\n  styleUrls: ['./configure-wallet.component.css']\n})\nexport class ConfigureWalletComponent implements OnInit {\n  panels = panels;\n  activePanel = panels.create;\n  wallet = this.walletService.wallet;\n  isConfigured = this.walletService.isConfigured;\n  isNewWallet = true;\n  hasConfirmedBackup = false;\n  importSeed = '';\n  isExpanded = false;\n  keyString = '';\n\n  newWalletSeed = '';\n  newWalletMnemonic = '';\n  newWalletMnemonicLines = [];\n  newPassword = '';\n  importSeedModel = '';\n  importPrivateKeyModel = '';\n  importExpandedKeyModel = '';\n  importSeedMnemonicModel = '';\n  importSeedBip39MnemonicModel = '';\n  importSeedBip39MnemonicIndexModel = '0';\n  importSeedBip39MnemonicPasswordModel = '';\n  walletPasswordModel = '';\n  walletPasswordConfirmModel = '';\n  validIndex = true;\n  indexMax = INDEX_MAX;\n\n  selectedImportOption = 'seed';\n  importOptions = [\n    { name: 'Badem Seed', value: 'seed' },\n    { name: 'Badem Mnemonic Phrase', value: 'mnemonic' },\n    { name: 'BIP39 Mnemonic Phrase', value: 'bip39-mnemonic' },\n    { name: 'BademVault Wallet File', value: 'file' },\n    { name: 'Ledger Nano S / Badem X', value: 'ledger' },\n    { name: 'Private Key', value: 'privateKey' },\n    { name: 'Expanded Private Key', value: 'expandedKey' },\n  ];\n\n  ledgerStatus = LedgerStatus;\n  ledger = this.ledgerService.ledger;\n\n  constructor(\n    private router: ActivatedRoute,\n    public walletService: WalletService,\n    private notifications: NotificationService,\n    private route: Router,\n    private qrModalService: QrModalService,\n    private ledgerService: LedgerService,\n    private util: UtilService) {\n    if (this.route.getCurrentNavigation().extras.state && this.route.getCurrentNavigation().extras.state.seed) {\n      this.activePanel = panels.import;\n      this.importSeedModel = this.route.getCurrentNavigation().extras.state.seed;\n      this.isNewWallet = false;\n    } else if (this.route.getCurrentNavigation().extras.state && this.route.getCurrentNavigation().extras.state.key) {\n      this.activePanel = panels.import;\n      this.importPrivateKeyModel = this.route.getCurrentNavigation().extras.state.key;\n      this.selectedImportOption = 'privateKey';\n      this.isNewWallet = false;\n    }\n  }\n\n  async ngOnInit() {\n    const toggleImport = this.router.snapshot.queryParams.import;\n    if (toggleImport) {\n      this.activePanel = panels.import;\n      this.isNewWallet = false;\n    }\n  }\n\n  onMethodChange(method) {\n    if (method === 'ledger') {\n      this.importLedgerWallet(true);\n    }\n  }\n\n  async importExistingWallet() {\n    this.notifications.sendInfo(`Starting to scan the first 10 accounts and importing them if they have been used...`, {length: 7000});\n    this.route.navigate(['accounts']); // load accounts and watch them update in real-time\n    await this.walletService.createWalletFromSeed(this.importSeed);\n    this.importSeed = '';\n    this.storePassword();\n\n    this.notifications.sendSuccess(`Successfully imported wallet!`, {length: 10000});\n\n    // this.repService.detectChangeableReps(); // this is now called from change-rep-widget.component when new wallet\n    this.walletService.informNewWallet();\n  }\n\n  async importSingleKeyWallet() {\n    this.walletService.createWalletFromSingleKey(this.keyString, this.isExpanded);\n    this.storePassword();\n    this.route.navigate(['accounts']); // load accounts and watch them update in real-time\n    this.keyString = '';\n\n    this.notifications.sendSuccess(`Successfully imported wallet from a private key!`);\n    this.walletService.informNewWallet();\n  }\n\n  async importLedgerWallet(refreshOnly = false) {\n    // Determine status of ledger device using ledger service\n    this.notifications.sendInfo(`Checking for Ledger device...`, { identifier: 'ledger-status', length: 0 });\n    await this.ledgerService.loadLedger(true);\n    this.notifications.removeNotification('ledger-status');\n\n    if (this.ledger.status === LedgerStatus.NOT_CONNECTED) {\n      return this.notifications.sendWarning(`No ledger device detected, make sure it is connected and you are using Chrome/Opera`);\n    }\n\n    if (this.ledger.status === LedgerStatus.LOCKED) {\n      return this.notifications.sendWarning(`Unlock your ledger device and open the Badem app to continue`);\n    }\n\n    if (refreshOnly) {\n      return;\n    }\n\n    // If a wallet exists already, make sure they know they are overwriting it\n    const confirmed = await this.confirmWalletOverwrite();\n    if (!confirmed) {\n      return;\n    }\n\n    // We skip the password panel\n    this.route.navigate(['accounts']); // load accounts and watch them update in real-time\n\n    // If they are using Chrome, warn them.\n    if (this.ledgerService.isBrokenBrowser()) {\n      this.notifications.sendLedgerChromeWarning();\n    }\n\n    // Create new ledger wallet\n    const newWallet = await this.walletService.createLedgerWallet();\n    this.notifications.sendSuccess(`Successfully loaded ledger device!`);\n\n    this.walletService.informNewWallet();\n  }\n\n  // Send a confirmation dialog to the user if they already have a wallet configured\n  async confirmWalletOverwrite() {\n    if (!this.isConfigured()) return true;\n\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p style=\"text-align: center;\"><span style=\"font-size: 18px;\">You are about to create a new wallet<br>which will <b>reset the local BademVault wallet you already have</b></span><br><br><b style=\"font-size: 18px;\">Be sure you have saved your current Badem seed and/or mnemonic before continuing</b><br><br>Without a backup - <b>ALL FUNDS WILL BE UNRECOVERABLE</b><br/><br/></p>');\n      return true;\n    } catch (err) {\n      this.notifications.sendInfo(`You can use the 'Manage Wallet' page to back up your Badem seed and/or mnemonic`);\n      return false;\n    }\n  }\n\n  async setPasswordInit() {\n    // if importing from existing, the format check must be done prior the password page\n    if (!this.isNewWallet) {\n      if (this.selectedImportOption === 'mnemonic' || this.selectedImportOption === 'seed') {\n        if (this.selectedImportOption === 'seed') {\n          const existingSeed = this.importSeedModel.trim();\n          if (existingSeed.length !== 64) return this.notifications.sendError(`Seed is invalid, double check it!`);\n          this.importSeed = existingSeed;\n        } else if (this.selectedImportOption === 'mnemonic') {\n          // Clean the value by trimming it and removing newlines\n          const mnemonic = this.importSeedMnemonicModel.toLowerCase().trim().replace(/\\n/g, ``);\n\n          const words = mnemonic.split(' ');\n          if (words.length < 20) return this.notifications.sendError(`Mnemonic is too short, double check it!`);\n\n          // Try and decode the mnemonic\n          try {\n            const newSeed = bip.mnemonicToEntropy(mnemonic);\n            if (!newSeed || newSeed.length !== 64) return this.notifications.sendError(`Mnemonic is invalid, double check it!`);\n            this.importSeed = newSeed.toUpperCase(); // Force uppercase, for consistency\n          } catch (err) {\n            return this.notifications.sendError(`Unable to decode mnemonic, double check it!`);\n          }\n        } else {\n          return this.notifications.sendError(`Invalid import option`);\n        }\n      } else if (this.selectedImportOption === 'privateKey' || this.selectedImportOption === 'expandedKey') {\n        if (this.selectedImportOption === 'privateKey') {\n          this.isExpanded = false;\n        } else if (this.selectedImportOption === 'expandedKey') {\n          this.isExpanded = true;\n        } else {\n          return this.notifications.sendError(`Invalid import option`);\n        }\n\n        this.keyString = this.isExpanded ? this.importExpandedKeyModel : this.importPrivateKeyModel;\n        this.keyString = this.keyString.trim();\n        if (this.isExpanded && this.keyString.length === 128) {\n          // includes deterministic R value material which we ignore\n          this.keyString = this.keyString.substring(0, 64);\n        } else if (this.keyString.length !== 64) {\n          return this.notifications.sendError(`Private key is invalid, double check it!`);\n        }\n      } else if (this.selectedImportOption === 'bip39-mnemonic') {\n        // If bip39, import wallet as a single private key\n        if (!bip.validateMnemonic(this.importSeedBip39MnemonicModel)) {\n          return this.notifications.sendError(`Mnemonic is invalid, double check it!`);\n        }\n        if (!this.validIndex) {\n          return this.notifications.sendError(`The account index is invalid, double check it!`);\n        }\n\n        // convert mnemonic to bip39 seed\n        const bip39Seed = this.importSeedBip39MnemonicPasswordModel !== '' ?\n        bip.mnemonicToSeedSync(this.importSeedBip39MnemonicModel, this.importSeedBip39MnemonicPasswordModel).toString('hex') :\n        bip.mnemonicToSeedSync(this.importSeedBip39MnemonicModel).toString('hex');\n\n        // derive private key from bip39 seed using the account index provided\n        const accounts = wallet.accounts(bip39Seed, Number(this.importSeedBip39MnemonicIndexModel),\n        Number(this.importSeedBip39MnemonicIndexModel));\n        this.keyString = accounts[0].privateKey;\n        this.isExpanded = false;\n      }\n    }\n\n    // If a wallet already exists, confirm that the seed is saved\n    const confirmed = await this.confirmWalletOverwrite();\n    if (!confirmed) return;\n    this.activePanel = panels.password;\n  }\n\n  async createNewWallet() {\n    const seedBytes = this.util.account.generateSeedBytes();\n    this.newWalletSeed = this.util.hex.fromUint8(seedBytes);\n    this.newWalletMnemonic = bip.entropyToMnemonic(this.newWalletSeed);\n\n    // Split the seed up so we can show 4 per line\n    const words = this.newWalletMnemonic.split(' ');\n    const lines = [\n      words.slice(0, 4),\n      words.slice(4, 8),\n      words.slice(8, 12),\n      words.slice(12, 16),\n      words.slice(16, 20),\n      words.slice(20, 24),\n    ];\n    this.newWalletMnemonicLines = lines;\n\n    this.activePanel = panels.backup;\n  }\n\n  confirmNewSeed() {\n    if (!this.hasConfirmedBackup) {\n      return this.notifications.sendWarning(`Please confirm you have saved a wallet backup!`);\n    }\n    this.walletService.createNewWallet(this.newWalletSeed);\n    this.storePassword();\n    this.newWalletSeed = '';\n    this.newWalletMnemonicLines = [];\n    this.saveNewWallet();\n\n    this.activePanel = panels.final;\n  }\n\n  saveWalletPassword() {\n    if (this.walletPasswordConfirmModel !== this.walletPasswordModel) {\n      return this.notifications.sendError(`Password confirmation does not match, try again!`);\n    }\n    if (this.walletPasswordModel.length < 6) {\n      return this.notifications.sendWarning(`Password length must be at least 6`);\n    }\n    this.newPassword = this.walletPasswordModel;\n    this.walletPasswordModel = '';\n    this.walletPasswordConfirmModel = '';\n\n    if (this.isNewWallet) {\n      this.createNewWallet();\n    } else if (this.selectedImportOption === 'mnemonic' || this.selectedImportOption === 'seed') {\n      this.importExistingWallet();\n    } else if (this.selectedImportOption === 'privateKey' || this.selectedImportOption === 'expandedKey'\n    || this.selectedImportOption === 'bip39-mnemonic') {\n      this.importSingleKeyWallet();\n    }\n  }\n\n  storePassword() {\n    this.walletService.wallet.password = this.newPassword;\n    this.newPassword = '';\n  }\n\n  saveNewWallet() {\n    this.walletService.saveWalletExport();\n    this.walletService.informNewWallet();\n\n    this.notifications.sendSuccess(`Successfully created new wallet! Do not lose the seed/mnemonic!`);\n  }\n\n  setPanel(panel) {\n    this.activePanel = panel;\n    if (panel === panels.create) {\n      this.isNewWallet = true;\n    } else if (panel === panels.import) {\n      this.isNewWallet = false;\n    }\n  }\n\n  copied() {\n    this.notifications.sendSuccess(`Wallet seed copied to clipboard!`);\n  }\n\n  importFromFile(files) {\n    if (!files.length) return;\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const fileData = event.target['result'] as string;\n      try {\n        const importData = JSON.parse(fileData);\n        if (!importData.seed || (!importData.hasOwnProperty('accountsIndex') && !importData.hasOwnProperty('indexes'))) {\n          return this.notifications.sendError(`Bad import data `);\n        }\n\n        const walletEncrypted = btoa(JSON.stringify(importData));\n        this.route.navigate(['import-wallet'], { fragment: walletEncrypted });\n      } catch (err) {\n        this.notifications.sendError(`Unable to parse import data, make sure you selected the right file!`);\n      }\n    };\n\n    reader.readAsText(file);\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'seed1':\n          this.importSeedModel = data.content;\n          break;\n        case 'mnemo1':\n          this.importSeedMnemonicModel = data.content;\n          break;\n        case 'mnemo2':\n          this.importSeedBip39MnemonicModel = data.content;\n          break;\n        case 'priv1':\n          this.importPrivateKeyModel = data.content;\n          break;\n        case 'expanded1':\n          this.importExpandedKeyModel = data.content;\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n  accountIndexChange(index) {\n    let invalid = false;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!this.util.badem.isValidIndex(index)) {\n        invalid = true;\n      }\n      if (index > INDEX_MAX) {\n        invalid = true;\n      }\n    } else {\n      invalid = true;\n    }\n    this.validIndex = !invalid;\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {UtilService} from '../../services/util.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport * as nanocurrency from 'nanocurrency';\nimport {PriceService} from '../../services/price.service';\nimport { BigNumber } from 'bignumber.js';\nimport {NotificationService} from '../../services/notification.service';\n\n@Component({\n  selector: 'app-converter',\n  templateUrl: './converter.component.html',\n  styleUrls: ['./converter.component.less']\n})\nexport class ConverterComponent implements OnInit, OnDestroy {\n  Mbadem = '1';\n  raw = '';\n  invalidMbadem = false;\n  invalidRaw = false;\n  invalidFiat = false;\n  fiatPrice = '0';\n  priceSub = null;\n\n  constructor(\n    private util: UtilService,\n    public settings: AppSettingsService,\n    private price: PriceService,\n    public notifications: NotificationService,\n  ) { }\n\n  ngOnInit(): void {\n    BigNumber.config({ DECIMAL_PLACES: 30 });\n    this.Mbadem = '1';\n\n    this.priceSub = this.price.lastPrice$.subscribe(event => {\n      this.fiatPrice = (new BigNumber(this.Mbadem)).times(this.price.price.lastPrice).toString();\n    });\n\n    this.unitChange('mbadem');\n  }\n\n  ngOnDestroy() {\n    if (this.priceSub) {\n      this.priceSub.unsubscribe();\n    }\n  }\n\n  unitChange(unit) {\n    switch (unit) {\n      case 'mbadem':\n        if (this.util.account.isValidBademAmount(this.Mbadem)) {\n          this.raw = nanocurrency.convert(this.Mbadem, {from: nanocurrency.Unit.NANO, to: nanocurrency.Unit.raw});\n          this.fiatPrice = (new BigNumber(this.Mbadem)).times(this.price.price.lastPrice).toString(10);\n          this.invalidMbadem = false;\n          this.invalidRaw = false;\n          this.invalidFiat = false;\n        } else {\n          this.raw = '';\n          this.fiatPrice = '';\n          this.invalidMbadem = true;\n        }\n        break;\n      case 'raw':\n        if (this.util.account.isValidAmount(this.raw)) {\n          this.Mbadem = nanocurrency.convert(this.raw, {from: nanocurrency.Unit.raw, to: nanocurrency.Unit.NANO});\n          this.fiatPrice = (new BigNumber(this.Mbadem)).times(this.price.price.lastPrice).toString(10);\n          this.invalidRaw = false;\n          this.invalidMbadem = false;\n          this.invalidFiat = false;\n        } else {\n          this.Mbadem = '';\n          this.fiatPrice = '';\n          this.invalidRaw = true;\n        }\n        break;\n      case 'fiat':\n        if (this.util.string.isNumeric(this.fiatPrice)) {\n          this.Mbadem = (new BigNumber(this.fiatPrice)).dividedBy(this.price.price.lastPrice).toString(10);\n          this.raw = nanocurrency.convert(this.Mbadem, {from: nanocurrency.Unit.NANO, to: nanocurrency.Unit.raw});\n          this.invalidRaw = false;\n          this.invalidMbadem = false;\n          this.invalidFiat = false;\n        } else {\n          this.Mbadem = '';\n          this.raw = '';\n          this.invalidFiat = true;\n        }\n        break;\n    }\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Unit Converter</h2>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"mbadem\">BADEM <span uk-icon=\"icon: info;\" uk-tooltip title=\"The main unit used in Badem wallets and exchanges.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <a class=\"uk-form-icon uk-form-icon-flip\" ngxClipboard [cbContent]=\"Mbadem\" (cbOnSuccess)=\"notifications.sendSuccess('Value Copied!')\" uk-icon=\"icon: copy\" title=\"Copy Value\" uk-tooltip></a>\n                        <input [(ngModel)]=\"Mbadem\" class=\"uk-input uk-margin-small-bottom\" [ngClass]=\"{ 'uk-form-danger': invalidMbadem }\" id=\"mbadem\" type=\"text\" (ngModelChange)=\"unitChange('mbadem')\" placeholder=\"\" autocomplete=\"off\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"raw\">raw <span uk-icon=\"icon: info;\" uk-tooltip title=\"The smallest possible Badem unit\"></span></label>\n                <div class=\"uk-form-controls\">\n                <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <a class=\"uk-form-icon uk-form-icon-flip\" ngxClipboard [cbContent]=\"raw\" (cbOnSuccess)=\"notifications.sendSuccess('Value Copied!')\" uk-icon=\"icon: copy\" title=\"Copy Value\" uk-tooltip></a>\n                      <input [(ngModel)]=\"raw\" class=\"uk-input uk-margin-small-bottom\" [ngClass]=\"{ 'uk-form-danger': invalidRaw }\" id=\"raw\" type=\"text\" (ngModelChange)=\"unitChange('raw')\" placeholder=\"\" autocomplete=\"off\">\n                    </div>\n                    </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"fiat\">{{settings.settings.displayCurrency}} <span uk-icon=\"icon: info;\" uk-tooltip title=\"Latest fiat price. The currency can be changed from the app settings.\"></span></label>\n                <div class=\"uk-form-controls\">\n                <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <a class=\"uk-form-icon uk-form-icon-flip\" ngxClipboard [cbContent]=\"fiatPrice\" (cbOnSuccess)=\"notifications.sendSuccess('Value Copied!')\" uk-icon=\"icon: copy\" title=\"Copy Value\" uk-tooltip></a>\n                      <input [(ngModel)]=\"fiatPrice\" class=\"uk-input uk-margin-small-bottom\" [ngClass]=\"{ 'uk-form-danger': invalidFiat }\" id=\"fiat\" type=\"text\" (ngModelChange)=\"unitChange('fiat')\" placeholder=\"\" autocomplete=\"off\">\n                    </div>\n                    </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n  </div>\n","import {Component, Input, OnChanges, HostBinding} from '@angular/core';\n\n@Component({\n  selector: 'app-nano-account-id',\n  templateUrl: './nano-account-id.component.html',\n  styleUrls: ['./nano-account-id.component.css'],\n})\nexport class BademAccountIdComponent implements OnChanges {\n\n  @HostBinding('class.uk-flex') isFlex: boolean;\n  @Input() accountID: string;\n  @Input() middle: 'on'|'off'|'auto' = 'auto';\n\n  firstCharacters = '';\n  middleCharacters = '';\n  lastCharacters = '';\n\n  constructor() { }\n\n  ngOnChanges() {\n    this.isFlex = this.middle === 'auto';\n    const accountID = this.accountID;\n    const openingChars = 10;\n    const closingChars = 5;\n    this.firstCharacters = accountID.split('').slice(0, openingChars).join('');\n    this.lastCharacters = accountID.split('').slice(-closingChars).join('');\n    if (this.middle !== 'off') {\n      this.middleCharacters = accountID.split('').slice(openingChars, -closingChars).join('');\n    }\n  }\n\n}\n","<span style=\"color: #4A90E2;\">{{ firstCharacters }}</span>\n<span [class.uk-text-truncate]=\"middle === 'auto'\">{{ middleCharacters || '...'}}</span>\n<span style=\"color: #cba644;\">{{ lastCharacters }}</span>\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Import Address Book Entries</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'error'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Bad Import Data</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>There was an issue reading the import data for your address book.  Double check the address and try again.</p>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'import'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Confirm Import</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p class=\"uk-text-center\">\n          You are about to import the following address book entries {{hostname ? 'from ' + hostname : ''}}\n        </p>\n        <p class=\"uk-text-center\">\n          <span class=\"import-warning\" *ngIf=\"conflictingEntries\">\n            {{ conflictingEntries }} Labels already exist and will have their name changed.\n          </span>\n          <span class=\"import-warning\" *ngIf=\"newEntries\">\n            {{ newEntries }} New labels will be added.\n          </span>\n          <span class=\"import-warning\" *ngIf=\"existingEntries\">\n            {{ existingEntries }} Labels already exist and will not be modified.\n          </span>\n        </p>\n\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n              <li style=\"background: #fff; border-bottom: 0;\">\n                <div uk-grid style=\"color: #999; text-transform: uppercase; font-size: .875rem; font-weight: 400;\">\n                  <div class=\"uk-width-1-4\">New Label</div>\n                  <div class=\"uk-width-1-4\">Current Label</div>\n                  <div class=\"uk-width-1-2 uk-text-truncate\" style=\"padding-left: 0;\">Account</div>\n                </div>\n              </li>\n            </ul>\n            <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n              <li *ngFor=\"let entry of importData\" [ngClass]=\"{ 'uk-text-success': !entry.originalName, 'uk-text-warning': entry.originalName && entry.originalName !== entry.name, 'uk-text-muted': entry.originalName == entry.name }\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-4 uk-text-truncate\">\n                    {{ entry.name }}\n                  </div>\n                  <div class=\"uk-width-1-4 uk-text-truncate\">\n                    {{ entry.originalName }}\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-truncate\">\n                    {{ entry.account }}\n                  </div>\n                </div>\n\n              </li>\n            </ul>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"uk-card-footer\">\n        <div uk-grid>\n          <div class=\"uk-width-1-2 uk-text-left\">\n            <button routerLink=\"/address-book\" class=\"uk-button uk-button-danger\">Cancel</button>\n          </div>\n          <div class=\"uk-width-1-2 uk-text-right\">\n            <button (click)=\"confirmImport()\" class=\"uk-button uk-button-secondary\">Import Entries</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from '../../services/notification.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-import-address-book',\n  templateUrl: './import-address-book.component.html',\n  styleUrls: ['./import-address-book.component.css']\n})\nexport class ImportAddressBookComponent implements OnInit {\n  activePanel = 'error';\n\n  validImportData = false;\n  importData: any = null;\n\n  conflictingEntries = 0;\n  newEntries = 0;\n  existingEntries = 0;\n  hostname = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private notifications: NotificationService,\n    private addressBook: AddressBookService,\n    private router: Router) { }\n\n  ngOnInit() {\n    const importData = this.route.snapshot.fragment;\n    const queryData = this.route.snapshot.queryParams;\n    if (!importData || !importData.length) {\n      return this.importDataError(`No import data found.  Check your link and try again.`);\n    }\n\n    if ('hostname' in queryData) this.hostname = queryData.hostname;\n    const decodedData = atob(importData);\n\n    try {\n      const importBlob = JSON.parse(decodedData);\n      if (!importBlob || !importBlob.length) {\n        return this.importDataError(`Bad import data.  Check your link and try again.`);\n      }\n      this.validImportData = true;\n      this.importData = importBlob;\n      this.activePanel = 'import';\n\n      // Now, find conflicting accounts\n      for (const entry of importBlob) {\n        if (!entry.account || !entry.name) {\n          continue; // Data missing?\n        }\n        entry.originalName = this.addressBook.getAccountName(entry.account);\n        if (!entry.originalName) {\n          this.newEntries++;\n        } else if (entry.originalName === entry.name) {\n          this.existingEntries++;\n        } else {\n          this.conflictingEntries++;\n        }\n      }\n\n    } catch (err) {\n      return this.importDataError(`Unable to decode import data.  Check your link and try again.`);\n    }\n  }\n\n  async confirmImport() {\n    // Go through our address book and see which ones need to be saved\n    let importedCount = 0;\n    for (const entry of this.importData) {\n      if (!entry.originalName) {\n        await this.addressBook.saveAddress(entry.account, entry.name);\n        importedCount++;\n      } else if (entry.originalName && entry.originalName !== entry.name) {\n        await this.addressBook.saveAddress(entry.account, entry.name);\n        importedCount++;\n      }\n    }\n\n    this.router.navigate(['address-book']);\n    this.notifications.sendSuccess(`Successfully imported ${importedCount} address book entries`);\n  }\n\n  importDataError(message) {\n    this.activePanel = 'error';\n    return this.notifications.sendError(message);\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Import Wallet</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'error'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Bad Import Data</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>There was an issue reading the import data for your wallet.  Double check the address and try again.</p>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'import'\">\n      <div *ngIf=\"walletService.isConfigured()\" class=\"uk-alert uk-alert-danger\">\n        <b>You already have a wallet configured</b><br>\n        Before going any further, be 100% certain you have backed up the seed to your current wallet!<br>\n        Without it, <b>any funds you have will become completely unrecoverable!</b>\n      </div>\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Confirm Wallet Import</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>You are about to import a wallet {{hostname ? 'from ' + hostname : ''}} - just enter your {{hostname ? 'wallet' : ''}} password to decrypt it!</p>\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <input class=\"uk-input\" [(ngModel)]=\"walletPassword\" placeholder=\"Wallet Password\" type=\"password\">\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right\">\n        <button (click)=\"decryptWallet()\" class=\"uk-button uk-button-secondary\">Import Wallet</button>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"activePanel == 'imported'\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Wallet Imported</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p>Your wallet has been successfully imported!</p>\n      </div>\n      <div class=\"uk-card-footer uk-text-right\">\n        <button routerLink=\"/accounts\" class=\"uk-button uk-button-secondary\">View Accounts</button>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NotificationService} from '../../services/notification.service';\nimport * as CryptoJS from 'crypto-js';\nimport {WalletService} from '../../services/wallet.service';\n\n@Component({\n  selector: 'app-import-wallet',\n  templateUrl: './import-wallet.component.html',\n  styleUrls: ['./import-wallet.component.css']\n})\nexport class ImportWalletComponent implements OnInit {\n  activePanel = 'error';\n\n  walletPassword = '';\n  validImportData = false;\n  importData: any = null;\n  hostname = '';\n\n  constructor(private route: ActivatedRoute, private notifications: NotificationService, private walletService: WalletService,\n    private router: Router) { }\n\n  ngOnInit() {\n    const importData = this.route.snapshot.fragment;\n    const queryData = this.route.snapshot.queryParams;\n    if (!importData || !importData.length) {\n      return this.importDataError(`No import data found.  Check your link and try again.`);\n    }\n\n    if ('hostname' in queryData) this.hostname = queryData.hostname;\n    const decodedData = atob(importData);\n\n    try {\n      const importBlob = JSON.parse(decodedData);\n      if (!importBlob || !importBlob.seed) {\n        return this.importDataError(`Bad import data.  Check your link and try again.`);\n      }\n      this.validImportData = true;\n      this.importData = importBlob;\n      this.activePanel = 'import';\n    } catch (err) {\n      return this.importDataError(`Unable to decode import data.  Check your link and try again.`);\n    }\n  }\n\n  importDataError(message) {\n    this.activePanel = 'error';\n    return this.notifications.sendError(message);\n  }\n\n  async decryptWallet() {\n    // Attempt to decrypt the seed value using the password\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500)); // brute force delay\n      const decryptedBytes = CryptoJS.AES.decrypt(this.importData.seed, this.walletPassword);\n      const decryptedSeed = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      if (!decryptedSeed || decryptedSeed.length !== 64) {\n        this.walletPassword = '';\n        return this.notifications.sendError(`Invalid password, please try again`);\n      }\n\n      this.router.navigate(['accounts']); // load accounts and watch them update in real-time\n      this.notifications.sendInfo(`Loading all accounts for the wallet...`);\n      if (await this.walletService.loadImportedWallet(decryptedSeed, this.walletPassword,\n        this.importData.accountsIndex || 0, this.importData.indexes || null)) {\n          this.notifications.sendSuccess(`Successfully imported the wallet!`, {length: 10000});\n      } else {\n        return this.notifications.sendError(`Failed importing the wallet. Invalid data!`);\n      }\n\n    } catch (err) {\n      this.walletPassword = '';\n      return this.notifications.sendError(`Invalid password, please try again`);\n    }\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\" id=\"address-book-sortable\">\n\n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider\">Representatives List</h2>\n      </div>\n      <div class=\"uk-width-auto@s uk-width-1-1 uk-text-right\">\n        <button class=\"uk-button uk-button-secondary uk-align-right uk-width-auto@s\" (click)=\"activePanel = 1;\">Add New Rep</button>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1 nlt-page-intro\">\n      <p>\n        You can use the representatives list to store a label and other information for representatives you use.\n      </p>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel == 0\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-margin\">\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n            <li style=\"background: #fff; border-bottom: 0;\">\n              <div uk-grid style=\"color: #999; text-transform: uppercase; font-size: .875rem; font-weight: 400;\">\n                <div class=\"uk-width-2-5\">Name</div>\n                <div class=\"uk-width-expand\">Account ID</div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">Options</div>\n              </div>\n            </li>\n          </ul>\n\n          <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n            <li class=\"\" *ngFor=\"let representative of representatives$ | async;\" [attr.data-account]=\"representative.id\">\n              <div uk-grid>\n                <div class=\"uk-width-2-5 uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <span class=\"circle circle-online\" *ngIf=\"representative.online\" uk-tooltip title=\"Representative is online\"></span>\n                      <span class=\"circle circle-offline\" *ngIf=\"!representative.online\" uk-tooltip title=\"Representative is offline\"></span>\n                      <a (click)=\"editEntry(representative)\" class=\"uk-link-text\" title=\"Edit Representative\" uk-tooltip>{{ representative.name }}</a>\n                    </div>\n                    <ul class=\"uk-iconnav uk-width-auto\" style=\"padding-left: 0;\">\n                      <!--<li><span class=\"uk-sortable-handle uk-margin-small-right\" uk-icon=\"icon: table\"></span></li>-->\n                      <li *ngIf=\"representative.trusted\"><span class=\"uk-text-success\" uk-icon=\"icon: star\" uk-tooltip title=\"Representative marked as trusted\"></span></li>\n                      <li *ngIf=\"representative.warn\"><span class=\"uk-text-warning\" uk-icon=\"icon: warning\" uk-tooltip title=\"Representative marked as avoid\"></span></li>\n                    </ul>\n                  </div>\n                </div>\n                <div class=\"uk-width-expand uk-text-truncate uk-visible-toggle\">\n                  <div uk-grid>\n                    <div class=\"uk-width-expand uk-text-truncate\">\n                      <a [routerLink]=\"'/account/' + representative.id\" class=\"uk-link-text uk-display-block\" title=\"View Account Details\" uk-tooltip>\n                        <app-nano-account-id [accountID]=\"representative.id\"></app-nano-account-id>\n                      </a>\n                    </div>\n                    <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n                      <li><a ngxClipboard [cbContent]=\"representative.id\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n\n                </div>\n                <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">\n                  <a (click)=\"deleteRepresentative(representative.id)\" class=\"uk-text-danger\" title=\"Delete Representative\" uk-tooltip><span uk-icon=\"icon: trash;\"></span></a>\n                </div>\n              </div>\n\n            </li>\n            <li *ngIf=\"!(representatives$ | async).length\" class=\"uk-text-center\">\n              You do not have any representatives saved yet, <a (click)=\"activePanel = 1\">click here to create one</a>.\n            </li>\n          </ul>\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-animation-slide-left-small\" *ngIf=\"activePanel == 1\" uk-grid>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-header\">\n            <h2 class=\"uk-card-title\">Create New Representative</h2>\n          </div>\n          <div class=\"uk-card-body\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-account\">Account ID</label>\n                <div class=\"uk-form-controls\">\n                  <input type=\"text\" class=\"uk-input\" id=\"new-address-account\" [(ngModel)]=\"newRepAccount\" placeholder=\"badem_abc123\">\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"new-address-name\">Name</label>\n                <div class=\"uk-form-controls\">\n                  <input type=\"text\" class=\"uk-input\" id=\"new-address-name\" [(ngModel)]=\"newRepName\" (keyup.enter)=\"saveNewRepresentative()\" placeholder=\"Representative Name\">\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\">Representative Flags</label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <label style=\"cursor: pointer;\" uk-tooltip title=\"Make a representative appear at the top of your list as a recommended option\"><input type=\"checkbox\" class=\"uk-checkbox\" [(ngModel)]=\"newRepTrusted\"> &nbsp; Trusted Representative</label>\n                    </div>\n                    <div class=\"uk-width-1-1 uk-margin-small-top\">\n                      <label style=\"cursor: pointer;\" uk-tooltip title=\"Warn the user when using this representative\"><input type=\"checkbox\" class=\"uk-checkbox\" [(ngModel)]=\"newRepWarn\"> &nbsp; Avoid Representative</label>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"uk-card-footer\">\n            <div uk-grid>\n              <div class=\"uk-width-1-2@s uk-text-left\">\n                <button class=\"uk-button uk-button-danger uk-width-1-1\" (click)=\"cancelNewRep()\">Cancel</button>\n              </div>\n              <div class=\"uk-width-1-2@s uk-text-right\">\n                <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"saveNewRepresentative()\">Save New Representative</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</div>\n","\nimport {map} from 'rxjs/operators';\nimport {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {ApiService} from '../../services/api.service';\nimport {Router} from '@angular/router';\nimport {RepresentativeService} from '../../services/representative.service';\nimport {UtilService} from '../../services/util.service';\n\n@Component({\n  selector: 'app-manage-representatives',\n  templateUrl: './manage-representatives.component.html',\n  styleUrls: ['./manage-representatives.component.css']\n})\nexport class ManageRepresentativesComponent implements OnInit, AfterViewInit {\n\n  activePanel = 0;\n\n  // Set the online status of each representative\n  representatives$ = this.repService.representatives$.pipe(map(reps => {\n    return reps.map(rep => {\n      rep.online = this.onlineReps.indexOf(rep.id) !== -1;\n      return rep;\n    });\n  }));\n\n  newRepAccount = '';\n  newRepName = '';\n  newRepTrusted = false;\n  newRepWarn = false;\n\n  onlineReps = [];\n\n  constructor(\n    private api: ApiService,\n    private notificationService: NotificationService,\n    public modal: ModalService,\n    private repService: RepresentativeService,\n    private util: UtilService) { }\n\n  async ngOnInit() {\n    this.repService.loadRepresentativeList();\n    this.onlineReps = await this.getOnlineRepresentatives();\n    this.repService.representatives$.next(this.repService.representatives); // Forcefully repush rep list once we have online status\n  }\n\n  ngAfterViewInit() {\n  }\n\n  editEntry(representative) {\n    this.newRepAccount = representative.id;\n    this.newRepName = representative.name;\n    this.newRepTrusted = !!representative.trusted;\n    this.newRepWarn = !!representative.warn;\n    this.activePanel = 1;\n    setTimeout(() => {\n      document.getElementById('new-address-name').focus();\n    }, 150);\n  }\n\n  async saveNewRepresentative() {\n    if (!this.newRepAccount || !this.newRepName) {\n      return this.notificationService.sendError(`Account and name are required`);\n    }\n\n    this.newRepAccount = this.newRepAccount.replace(/ /g, ''); // Remove spaces\n\n    // Make sure the address is valid\n    const valid = this.util.account.isValidAccount(this.newRepAccount);\n    if (!valid) {\n      return this.notificationService.sendWarning(`Account ID is not a valid account`);\n    }\n\n    try {\n      await this.repService.saveRepresentative(this.newRepAccount, this.newRepName, this.newRepTrusted, this.newRepWarn);\n      this.notificationService.sendSuccess(`Successfully saved new representative!`);\n\n      this.cancelNewRep();\n    } catch (err) {\n      this.notificationService.sendError(`Unable to save entry: ${err.message}`);\n    }\n  }\n\n  cancelNewRep() {\n    this.newRepName = '';\n    this.newRepAccount = '';\n    this.newRepTrusted = false;\n    this.newRepWarn = false;\n    this.activePanel = 0;\n  }\n\n  copied() {\n    this.notificationService.sendSuccess(`Account address copied to clipboard!`);\n  }\n\n  async getOnlineRepresentatives() {\n    const representatives = [];\n    try {\n      const reps = await this.api.representativesOnline();\n      for (const representative in reps.representatives) {\n        if (!reps.representatives.hasOwnProperty(representative)) {\n          continue;\n        }\n        representatives.push(reps.representatives[representative]);\n      }\n    } catch (err) {\n      this.notificationService.sendWarning(`Unable to determine online status of representatives`);\n    }\n\n    return representatives;\n  }\n\n  async deleteRepresentative(accountID) {\n    try {\n      this.repService.deleteRepresentative(accountID);\n      this.notificationService.sendSuccess(`Successfully deleted representative`);\n    } catch (err) {\n      this.notificationService.sendError(`Unable to delete representative: ${err.message}`);\n    }\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Manage Wallet</h2>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"!walletService.isLedgerWallet()\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Change Wallet Password</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-2@s\">\n            <input class=\"uk-input\" [(ngModel)]=\"newPassword\" placeholder=\"New Password\" type=\"password\">\n            <password-strength-meter *ngIf=\"newPassword.length > 0\" [password]=\"newPassword\" [enableFeedback]=\"true\" [minPasswordLength]=\"6\"></password-strength-meter>\n            <span class=\"password-helper\" *ngIf=\"newPassword.length > 0 && newPassword.length < 6\">Password must be at least 6 characters long</span>\n            <span class=\"password-helper\" *ngIf=\"confirmPassword.length >= 6 && newPassword !== confirmPassword\">Passwords do not match!</span>\n          </div>\n          <div class=\"uk-width-1-2@s\">\n            <input class=\"uk-input\" [(ngModel)]=\"confirmPassword\" placeholder=\"Confirm New Password\" type=\"password\">\n          </div>\n        </div>\n      </div>\n      <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\">\n        <button [disabled]=\"newPassword.length < 6 || (newPassword !== confirmPassword)\" (click)=\"changePassword()\" class=\"uk-button uk-button-primary uk-width-auto@s uk-width-1-1\">Update Password</button>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"!walletService.isLedgerWallet()\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Backup Wallet</h3>\n      </div>\n      <div class=\"uk-card-body\">\n        <p *ngIf=\"wallet.locked\">\n          <span uk-icon=\"icon: lock;\"></span> Unlock wallet to access the seed/mnemonic.\n        </p>\n        <p *ngIf=\"!wallet.locked\">\n          To backup your wallet mnemonic phrase, <a title=\"Copy Mnemonic To Clipboard\" ngxClipboard [cbContent]=\"seedMnemonic()\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet mnemonic copied to clipboard!')\" uk-tooltip>click here</a> to copy it to your clipboard.<br>\n          <br>\n          To backup your wallet seed, <a title=\"Copy Seed To Clipboard\" ngxClipboard [cbContent]=\"wallet.seed\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet seed copied to clipboard!')\" uk-tooltip>click here</a> to copy it to your clipboard.<br>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"!walletService.isLedgerWallet()\">\n      <div class=\"uk-card-header\">\n        <h3 class=\"uk-card-title\">Export BademVault Wallet</h3>\n      </div>\n      <ng-container *ngIf=\"wallet.locked else walletUnlocked\">\n        <div class=\"uk-card-body\">\n          <span uk-icon=\"icon: lock;\"></span> Unlock wallet to access the export tool.\n        </div>\n      </ng-container>\n      <ng-template #walletUnlocked>\n        <ng-container *ngIf=\"wallet.password else walletHasNoPassword\">\n          <div class=\"uk-card-body\">\n            Use this export tool to simplify wallet transfer to other devices.\n            <br>\n            Your data will be encrypted with your wallet's password, and then can be imported into BademVault on any device!\n            <br><br>\n            Note: The export does not contain your address book.<br>\n            <div *ngIf=\"showQRExport\" uk-grid>\n              <div class=\"uk-width-1-1\">\n                <hr class=\"uk-divider-icon uk-margin-small-top\">\n                <div class=\"uk-alert uk-alert-danger\">\n                  <b>If you forget the wallet password used at the time of this export, you will NOT be able to restore your wallet.</b>\n                  <br>\n                  For backup purposes, <b>always store the seed and/or mnemonic</b> from the \"Backup Wallet\" section above.\n                </div>\n              </div>\n\n              <div class=\"uk-width-1-1@s uk-width-1-2@m uk-width-1-3@l\">\n                <img [src]=\"QRExportImg\" alt=\"QR code\">\n              </div>\n              <div class=\"uk-width-1-1@s uk-width-1-2@m uk-width-2-3@l\">\n                <br>\n                Scan the QR code on any device to import your BademVault wallet!<br>\n                <br>\n                You can also import your wallet by using the URL below.\n                <br><br>\n                <input type=\"text\" class=\"uk-input\" style=\"max-width: 750px;\" value=\"{{ QRExportUrl }}\">\n                <div class=\"nlt-button-group uk-margin-small-top\">\n                  <button ngxClipboard [cbContent]=\"QRExportUrl\" (cbOnSuccess)=\"notifications.sendSuccess('Wallet export copied to clipboard!')\" class=\"uk-button uk-button-secondary\" style=\"margin-left: 0;\">Copy To Clipboard</button>\n                  <button (click)=\"exportToFile()\" class=\"uk-button uk-button-primary\">Export As File</button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"uk-card-footer uk-text-right@s uk-text-center nlt-button-group\" *ngIf=\"!showQRExport\">\n            <button (click)=\"exportWallet()\" class=\"uk-button uk-button-secondary uk-width-auto@s uk-width-1-1\">Export Wallet</button>\n          </div>\n        </ng-container>\n        <ng-template #walletHasNoPassword>\n          <div class=\"uk-card-body\">\n            You need to set a secure wallet password before you can use this export tool.\n          </div>\n        </ng-template>\n      </ng-template>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport * as QRCode from 'qrcode';\nimport * as bip from 'bip39';\n\n@Component({\n  selector: 'app-manage-wallet',\n  templateUrl: './manage-wallet.component.html',\n  styleUrls: ['./manage-wallet.component.css']\n})\nexport class ManageWalletComponent implements OnInit {\n\n  wallet = this.walletService.wallet;\n\n  newPassword = '';\n  confirmPassword = '';\n\n  showQRExport = false;\n  QRExportUrl = '';\n  QRExportImg = '';\n\n  constructor(\n    public walletService: WalletService,\n    public notifications: NotificationService) { }\n\n  async ngOnInit() {\n    this.wallet = this.walletService.wallet;\n  }\n\n  async changePassword() {\n    if (this.newPassword !== this.confirmPassword) {\n      return this.notifications.sendError(`Passwords do not match`);\n    }\n    if (this.newPassword.length < 1) {\n      return this.notifications.sendError(`Password cannot be empty`);\n    }\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(`Wallet must be unlocked`);\n    }\n\n    this.walletService.wallet.password = this.newPassword;\n    this.walletService.saveWalletExport();\n\n    this.newPassword = '';\n    this.confirmPassword = '';\n    this.notifications.sendSuccess(`Wallet password successfully updated`);\n\n    this.showQRExport = false;\n  }\n\n  async exportWallet() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(`Wallet must be unlocked`);\n    }\n\n    const exportUrl = this.walletService.generateExportUrl();\n    this.QRExportUrl = exportUrl;\n    this.QRExportImg = await QRCode.toDataURL(exportUrl, { errorCorrectionLevel: 'M', scale: 8 });\n    this.showQRExport = true;\n  }\n\n  copied() {\n    this.notifications.sendSuccess(`Wallet seed copied to clipboard!`);\n  }\n\n  seedMnemonic() {\n    if (this.wallet && this.wallet.seed ) {\n      return bip.entropyToMnemonic(this.wallet.seed);\n    }\n  }\n\n  triggerFileDownload(fileName, exportData) {\n    const blob = new Blob([JSON.stringify(exportData)], { type: 'application/json' });\n\n    // Check for iOS, which is weird with saving files\n    const iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n    if (window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    } else {\n      const elem = window.document.createElement('a');\n      const objUrl = window.URL.createObjectURL(blob);\n      if (iOS) {\n        elem.href = `data:attachment/file,${JSON.stringify(exportData)}`;\n      } else {\n        elem.href = objUrl;\n      }\n      elem.download = fileName;\n      document.body.appendChild(elem);\n      elem.click();\n      setTimeout(function() {\n        document.body.removeChild(elem);\n        window.URL.revokeObjectURL(objUrl);\n      }, 200);\n    }\n  }\n\n  exportToFile() {\n    if (this.walletService.walletIsLocked()) {\n      return this.notifications.sendWarning(`Wallet must be unlocked`);\n    }\n\n    const fileName = `BademVault-Wallet.json`;\n    const exportData = this.walletService.generateExportData();\n    this.triggerFileDownload(fileName, exportData);\n\n    this.notifications.sendSuccess(`Wallet export downloaded!`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from '../../services/notification.service';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  notificationLength = 5000;\n\n  notifications: any[] = [];\n  constructor(private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.notificationService.notifications$.subscribe(notification => {\n      if (!notification) {\n        return; // Default value\n      }\n\n      // Check the options\n      const length = notification.options.hasOwnProperty('length') ? notification.options.length : this.notificationLength;\n      const identifier = notification.options.identifier || null;\n\n      // Stop duplicates\n      if (identifier) {\n        const existingNotification = this.notifications.find(n => n.identifier === identifier);\n        if (existingNotification) {\n          return;\n        }\n      }\n\n      const newNotification = {\n        type: notification.type,\n        message: notification.message,\n        cssClass: this.getCssClass(notification.type),\n        identifier: identifier,\n        length: length,\n      };\n\n      this.notifications.push(newNotification);\n      if (length) {\n        setTimeout(() => this.removeNotification(newNotification), length);\n      }\n    });\n\n    this.notificationService.removeNotification$.subscribe(identifier => {\n      if (!identifier) {\n        return;\n      }\n\n      const existingNotification = this.notifications.find(n => n.identifier === identifier);\n      if (existingNotification) {\n        this.removeNotification(existingNotification);\n      }\n    });\n  }\n\n  private removeNotification(notification) {\n    const existingNotification = this.notifications.findIndex(n => n === notification);\n    if (existingNotification !== -1) {\n      this.notifications.splice(existingNotification, 1);\n    }\n  }\n\n  private getCssClass(type) {\n    switch (type) {\n      default:\n      case 'info': return 'uk-alert-primary';\n      case 'success': return 'uk-alert-success';\n      case 'warning': return 'uk-alert-warning';\n      case 'error': return 'uk-alert-danger';\n    }\n  }\n\n}\n","<div class=\"notification-container\">\n  <div *ngFor=\"let notification of notifications\" [ngClass]=\"notification.cssClass\" class=\"uk-animation-slide-bottom-small wallet-notification\" uk-alert>\n    <a class=\"uk-alert-close close-notification\" (click)=\"removeNotification(notification)\" uk-close></a>\n    <p [innerHTML]=\"notification.message\"></p>\n  </div>\n</div>\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">QR Generator</h2>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1\">\n            <textarea [(ngModel)]=\"input\" rows=\"5\" class=\"uk-input uk-margin-small-bottom\" placeholder=\"Text to be converted into QR\" (keyup)=\"generateQR()\" maxlength=\"2000\"></textarea>\n          </div>\n          <div class=\"block-qr\" [ngStyle]=\"{'width': width+'px'}\">\n            <img *ngIf=\"qrCodeImageBlock\" [src]=\"qrCodeImageBlock\" alt=\"QR code\">\n          </div>\n        </div>\n      </div>\n    </div>\n  \n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport * as QRCode from 'qrcode';\n\n@Component({\n  selector: 'app-qr-generator',\n  templateUrl: './qr-generator.component.html',\n  styleUrls: ['./qr-generator.component.less']\n})\nexport class QrGeneratorComponent implements OnInit {\n  qrCodeImageBlock = null;\n  input = '';\n  width = 300;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  async generateQR() {\n    if (this.input === '') {\n      this.qrCodeImageBlock = null;\n      return;\n    }\n    // Gradually make QR larger when complexity increases\n    this.width = Math.min(Math.max(300, Math.round(Math.log2(this.input.length) * 120 - 300)), 800);\n    const qrCode = await QRCode.toDataURL(this.input, { errorCorrectionLevel: 'M', scale: 16 });\n    this.qrCodeImageBlock = qrCode;\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport { NotificationService } from '../../services/notification.service';\nimport { BarcodeFormat } from '@zxing/library';\nimport { BehaviorSubject } from 'rxjs';\nimport { UtilService } from '../../services/util.service';\nimport * as bip39 from 'bip39';\n\nexport type QRType = 'account' | 'hash' | 'mnemonic' | 'generic';\n\n@Component({\n  selector: 'app-qr-modal',\n  templateUrl: './qr-modal.component.html',\n  styleUrls: ['./qr-modal.component.css']\n})\nexport class QrModalComponent implements OnInit {\n\n  @Input() title = 'QR Scanner';\n  @Input() reference: string;\n  @Input() type: QRType;\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n  badem_scheme = /^(badem|bademrep|bademseed|bademkey):.+$/g;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private notifcationService: NotificationService,\n    private util: UtilService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onCodeResult(resultString: string) {\n    let type: QRType = null;\n    let content = '';\n    // account\n    if (this.util.account.isValidAccount(resultString)) {\n      type = 'account';\n      content = resultString;\n    } else if (bip39.validateMnemonic(resultString)) {\n      type = 'mnemonic';\n      content = resultString;\n    } else if (resultString.length === 128) {\n      // includes deterministic R value material which we ignore\n      resultString = resultString.substring(0, 64);\n      if (this.util.badem.isValidHash(resultString)) {\n        type = 'hash';\n        content = resultString;\n      }\n    } else if (this.util.badem.isValidHash(resultString)) {\n      type = 'hash';\n      content = resultString;\n    } else if (this.badem_scheme.test(resultString)) {\n      // This is a valid Badem scheme URI\n      const url = new URL(resultString);\n      content = url.pathname;\n\n      if (['badem:', 'bademrep:', 'badem:'].includes(url.protocol) && this.util.account.isValidAccount(url.pathname)) {\n        type = 'account';\n      } else if (['bademseed:', 'bademkey:'].includes(url.protocol) && this.util.badem.isValidHash(url.pathname)) {\n        type = 'hash';\n      }\n    } else {\n      type = 'generic';\n      content = resultString;\n    }\n\n    // check that the result is valid and matched the requested type\n    if (type != null && type === this.type || this.type === 'generic') {\n      this.activeModal.close({reference: this.reference, content: content});\n    } else {\n      this.notifcationService.sendWarning('This QR code is not recognized.', { length: 5000, identifier: 'qr-not-recognized' });\n      return;\n    }\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  toggleTorch(): void {\n    this.torchEnabled = !this.torchEnabled;\n  }\n\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n","<div role=\"document\" class=\"modal-dialog scanner-modal-sub\">\n    <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Scan a QR</h4>\n            <button class=\"uk-modal-close-default\" type=\"button\" uk-close (click)=\"activeModal.dismiss('QR scanner dismissed')\"></button>\n        </div>\n        <div class=\"modal-body\">\n            <ng-content></ng-content>\n            <div uk-grid>\n                <div class=\"uk-width-1-1 uk-animation-slide-left-small\">\n                  <div uk-grid class=\"uk-margin-top\">\n                    <div class=\"uk-width-1-1@m\" [hidden]=\"!hasDevices\">\n                      <div class=\"uk-width-1-1\">\n                        <div class=\"uk-form-horizontal\">\n              \n                          <div class=\"uk-margin\">\n                            <label class=\"uk-form-label\">Device</label>\n                            <div class=\"uk-form-controls\">\n                              <select class=\"uk-select\" (change)=\"onDeviceSelectChange($event.target.value)\">\n                                <option value=\"\" [selected]=\"!currentDevice\">No Device Selected</option>\n                                <option *ngFor=\"let device of availableDevices\" [value]=\"device.deviceId\"\n                                  [selected]=\"currentDevice && device.deviceId === currentDevice.deviceId\">{{device.label}}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n              \n                      <div class=\"uk-card uk-card-default uk-card-small\">\n                        <div class=\"uk-card-body uk-center\">\n                          <zxing-scanner [torch]=\"torchEnabled\" [(device)]=\"currentDevice\" (scanSuccess)=\"onCodeResult($event)\"\n                            [formats]=\"formatsEnabled\" [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\"\n                            (camerasFound)=\"onCamerasFound($event)\" (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div *ngIf=\"hasPermission === undefined && hasDevices === undefined\" class=\"uk-alert uk-alert-info\">\n                <b>Waiting for permissions.</b><br>\n                If your device does not has cameras, no permissions will be asked.\n              </div>\n              \n              <div *ngIf=\"hasPermission === false\" class=\"uk-alert uk-alert-danger\">\n                <b>You denied the camera permission.</b><br>\n                We can't scan anything without it. 😪\n              </div>\n              \n              <div *ngIf=\"hasDevices === null || hasPermission === null\" class=\"uk-alert uk-alert-danger\">\n                <b>Couldn't check for devices.</b><br>\n                This may be caused by some security error.\n              </div>\n              \n              <div *ngIf=\"hasDevices === false\" class=\"uk-alert uk-alert-danger\">\n                <b>No devices were found.</b><br>\n                I believe your device has no media devices attached to.\n              </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UtilService } from '../../services/util.service';\nimport { NotificationService } from '../../services/notification.service';\nimport { WalletService } from '../../services/wallet.service';\nimport { BarcodeFormat } from '@zxing/library';\nimport { BehaviorSubject } from 'rxjs';\nimport { RemoteSignService } from '../../services/remote-sign.service';\n\n@Component({\n  selector: 'app-qr-scan',\n  templateUrl: './qr-scan.component.html',\n  styleUrls: ['./qr-scan.component.css']\n})\nexport class QrScanComponent implements OnInit {\n\n  availableDevices: MediaDeviceInfo[];\n  currentDevice: MediaDeviceInfo = null;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  hasAccounts = this.walletService.wallet.accounts.length > 0;\n\n  constructor(\n    private router: Router,\n    private notifcationService: NotificationService,\n    private util: UtilService,\n    private walletService: WalletService,\n    private remoteSignService: RemoteSignService,\n  ) { }\n\n  ngOnInit(): void { }\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString;\n\n    const badem_scheme = /^(badem|bademrep|bademseed|bademkey|bademsign|bademprocess|https):.+$/g;\n\n    if (this.util.account.isValidAccount(resultString)) {\n      // Got address, routing to send...\n      this.router.navigate(['send'], {queryParams: {to: resultString}});\n\n    } else if (this.util.badem.isValidSeed(resultString)) {\n      // Seed\n      this.handleSeed(resultString);\n\n    } else if (badem_scheme.test(resultString)) {\n      // This is a valid Badem scheme URI\n      const url = new URL(resultString);\n\n      // check if QR contains a full URL path\n      if (url.protocol === 'https:') {\n        if (url.pathname === '/import-wallet' && url.hash.slice(1).length) {\n          // wallet import\n          this.router.navigate(['import-wallet'], { queryParams: {hostname: url.hostname}, fragment: url.hash.slice(1)});\n        } else if (url.pathname === '/import-address-book' && url.hash.slice(1).length) {\n          // address book import\n          this.router.navigate(['import-address-book'], { queryParams: {hostname: url.hostname}, fragment: url.hash.slice(1)});\n        }\n      } else if (url.protocol === 'badem:' && this.util.account.isValidAccount(url.pathname)) {\n        // Got address, routing to send...\n        const amount = url.searchParams.get('amount');\n        this.router.navigate(['send'], { queryParams: {\n          to: url.pathname,\n          amount: amount ? this.util.badem.rawToMbadem(amount) : null\n        }});\n\n      } else if (url.protocol === 'bademrep:' && this.util.account.isValidAccount(url.pathname)) {\n        // Representative change\n        this.router.navigate(['representatives'], { queryParams: {\n          hideOverview: true,\n          accounts: 'all',\n          representative: url.pathname\n        }});\n\n      } else if (url.protocol === 'bademseed:' && this.util.badem.isValidSeed(url.pathname)) {\n        // Seed\n        this.handleSeed(url.pathname);\n      } else if (url.protocol === 'bademkey:' && this.util.badem.isValidHash(url.pathname)) {\n        // Private key\n        this.handlePrivateKey(url.pathname);\n      } else if (url.protocol === 'bademsign:') {\n          this.remoteSignService.navigateSignBlock(url);\n\n      } else if (url.protocol === 'bademprocess:') {\n          this.remoteSignService.navigateProcessBlock(url);\n      }\n\n    } else {\n      this.notifcationService.sendWarning('This QR code is not recognized.', { length: 5000, identifier: 'qr-not-recognized' });\n    }\n  }\n\n  handleSeed(seed) {\n    if (this.hasAccounts) {\n      // Wallet already set up, sweeping...\n      this.router.navigate(['sweeper'], { state: { seed: seed } });\n    } else {\n      // No wallet set up, new wallet...\n      this.router.navigate(['configure-wallet'], { state: { seed: seed }});\n    }\n  }\n\n  handlePrivateKey(key) {\n    if (this.hasAccounts) {\n      // Wallet already set up, sweeping...\n      this.router.navigate(['sweeper'], { state: { seed: key } });\n    } else {\n      // No wallet set up, new wallet...\n      this.router.navigate(['configure-wallet'], { state: { key: key }});\n    }\n  }\n\n  onDeviceSelectChange(selected: string) {\n    const device = this.availableDevices.find(x => x.deviceId === selected);\n    this.currentDevice = device || null;\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  toggleTorch(): void {\n    this.torchEnabled = !this.torchEnabled;\n  }\n\n  toggleTryHarder(): void {\n    this.tryHarder = !this.tryHarder;\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Scan QR Code</h2>\n\n    <div uk-grid class=\"uk-margin-top\">\n\n      <div class=\"uk-width-1-1@m\" [hidden]=\"!hasDevices\">\n\n        <div class=\"uk-width-1-1\">\n          <div class=\"uk-form-horizontal\">\n\n            <div class=\"uk-margin\">\n              <label class=\"uk-form-label\">Device</label>\n              <div class=\"uk-form-controls\">\n                <select class=\"uk-select\" (change)=\"onDeviceSelectChange($event.target.value)\">\n                  <option value=\"\" [selected]=\"!currentDevice\">No Device Selected</option>\n                  <option *ngFor=\"let device of availableDevices\" [value]=\"device.deviceId\"\n                    [selected]=\"currentDevice && device.deviceId === currentDevice.deviceId\">{{device.label}}</option>\n                </select>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div class=\"uk-card uk-card-default uk-card-small\">\n          <div class=\"uk-card-body uk-center\">\n            <zxing-scanner [torch]=\"torchEnabled\" [(device)]=\"currentDevice\" (scanSuccess)=\"onCodeResult($event)\"\n              [formats]=\"formatsEnabled\" [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\"\n              (camerasFound)=\"onCamerasFound($event)\" (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n</div>\n\n<div *ngIf=\"hasPermission === undefined && hasDevices === undefined\" class=\"uk-alert uk-alert-info\">\n  <b>Waiting for permissions.</b><br>\n  If your device does not has cameras, no permissions will be asked.\n</div>\n\n<div *ngIf=\"hasPermission === false\" class=\"uk-alert uk-alert-danger\">\n  <b>You denied the camera permission.</b><br>\n  We can't scan anything without it. 😪\n</div>\n\n<div *ngIf=\"hasDevices === null || hasPermission === null\" class=\"uk-alert uk-alert-danger\">\n  <b>Couldn't check for devices.</b><br>\n  This may be caused by some security error.\n</div>\n\n<div *ngIf=\"hasDevices === false\" class=\"uk-alert uk-alert-danger\">\n  <b>No devices were found.</b><br>\n  I believe your device has no media devices attached to.\n</div>","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n      <h2 class=\"uk-heading-divider\">Receive Badem</h2>\n\n      <div class=\"uk-width-1-1 nlt-page-intro\">\n        <p>\n          Select an account to show the deposit QR.\n        </p>\n        <p>\n          Funds should be received automatically if the wallet is unlocked. If not, you can try find them and receive manually.\n        </p>\n        <p>\n          You can also find full transaction history under <a routerLink=\"/accounts\" routerLinkActive=\"active\">Accounts</a>.\n        </p>\n      </div>\n\n    <div uk-grid>\n      <div class=\"uk-width-3-4@s\">\n        <select class=\"uk-select\" [(ngModel)]=\"pendingAccountModel\" (change)=\"changeQRAccount(pendingAccountModel)\">\n          <option [value]=\"0\">All Accounts</option>\n          <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | badem: settings.settings.displayDenomination }})</option>\n        </select>\n      </div>\n      <div class=\"uk-width-auto@s\">\n        <button class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"getPending()\"> Find Incoming</button>\n      </div>\n      <div *ngIf=\"qrCodeImage\" class=\"uk-width-3-4@s narrow-div\">\n        <input [(ngModel)]=\"receiveAmount\" class=\"uk-input uk-margin-small-bottom\" type=\"text\" (ngModelChange)=\"changeQRAmount(receiveAmount)\" title=\"Amount to be included in the QR and read by the sending wallet.\" placeholder=\"Optional Badem amount\">\n      </div>\n      <div *ngIf=\"qrCodeImage\" class=\"uk-width-1-1@s narrow-div\">\n        <img [src]=\"qrCodeImage\" alt=\"QR code\"><br>\n        <div class=\"uk-flex\">\n          <app-nano-account-id [accountID]=\"pendingAccountModel\" class=\"uk-width-auto\" style=\"max-width: 90%;\"></app-nano-account-id>\n          <a class=\"span-icon\" ngxClipboard [cbContent]=\"pendingAccountModel\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a>\n        </div>\n      </div>\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <table class=\"uk-table uk-table-striped uk-table-small\">\n            <thead>\n            <tr>\n              <th scope=\"col\">Account</th>\n              <th scope=\"col\">Sender</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\">Options</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let block of pendingBlocks\">\n              <td *ngIf=\"block.account == pendingAccountModel || pendingAccountModel === '0'\" class=\"uk-visible-toggle\">\n                <div uk-grid>\n                  <div class=\"uk-width-auto uk-text-truncate\">\n                    <a [routerLink]=\"'/account/' + block.account\" class=\"uk-link-text\" title=\"View Account Details\" uk-tooltip>\n                      <app-nano-account-id [accountID]=\"block.account\" middle=\"off\"></app-nano-account-id>\n                    </a>\n                  </div>\n                  <div class=\"uk-width-auto\" style=\"padding-left: 10px;\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"block.account\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n              <td *ngIf=\"block.account == pendingAccountModel || pendingAccountModel === '0'\" class=\"uk-visible-toggle\">\n                <div uk-grid>\n                  <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px);\">\n                    <a [routerLink]=\"'/account/' + block.source\" class=\"uk-link-text\" title=\"View Account Details\" uk-tooltip>\n                      <app-nano-account-id [accountID]=\"block.source\" middle=\"off\"></app-nano-account-id>\n                    </a>\n                  </div>\n                  <div class=\"uk-width-auto\" style=\"padding-left: 10px;\">\n                    <ul class=\"uk-iconnav\">\n                      <li><a ngxClipboard [cbContent]=\"block.source\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                    </ul>\n                  </div>\n                </div>\n              </td>\n              <td *ngIf=\"block.account == pendingAccountModel || pendingAccountModel === '0'\">\n                {{ block.amount | badem: settings.settings.displayDenomination }}\n                <div *ngIf=\"toBigNumber(block.amount).mod(nano).gt(0)\">\n                  <span *ngIf=\"toBigNumber(block.amount); let rawAmount\" style=\"display: block; font-size: 12px;\" class=\"uk-text-muted\">+{{ rawAmount.mod(nano).toString(10) }} raw</span>\n                </div>\n              </td>\n              <td *ngIf=\"block.account == pendingAccountModel || pendingAccountModel === '0'\" class=\"uk-text-nowrap\">\n                <button *ngIf=\"!block.loading\" (click)=\"receivePending(block)\" class=\"uk-button uk-button-secondary uk-button-small\">Receive</button>\n                <button *ngIf=\"block.loading\" class=\"uk-button uk-button-secondary uk-disabled uk-button-small\"><span class=\"uk-margin-right\" uk-spinner></span> Loading</button>\n              </td>\n            </tr>\n            <tr *ngIf=\"!loadingIncomingTxList && !pendingBlocks.length && ((pendingAccountModel === '0' && pendingBelowThreshold.length > 0 && !pendingBelowThreshold[0].gt(0)) || (pendingAccountModel !== '0' && walletAccount && walletAccount.pendingBelowThreshold.length > 0 && !walletAccount.pendingBelowThreshold[0].gt(0)))\">\n              <td colspan=\"4\" style=\"text-align: center;\">No incoming transactions</td>\n            </tr>\n            <tr *ngIf=\"pendingAccountModel === '0' && pendingBelowThreshold.length > 0 && pendingBelowThreshold[0].gt(0)\">\n              <td colspan=\"4\" style=\"text-align: center;\">Some transactions ({{pendingBelowThreshold[0] | badem: settings.settings.displayDenomination}} total) were hidden due to a Minimum Receive Amount of {{minAmount | badem: settings.settings.displayDenomination}} <a routerLink=\"/configure-app\" routerLinkActive=\"active\">(configure)</a></td>\n            </tr>\n            <tr *ngIf=\"pendingAccountModel !== '0' && walletAccount && walletAccount.pendingBelowThreshold.length > 0 && walletAccount.pendingBelowThreshold[0].gt(0)\">\n              <td colspan=\"4\" style=\"text-align: center;\">Some transactions ({{walletAccount.pendingBelowThreshold[0] | badem: settings.settings.displayDenomination}} total) were hidden due to a Minimum Receive Amount of {{minAmount | badem: settings.settings.displayDenomination}} <a routerLink=\"/configure-app\" routerLinkActive=\"active\">(configure)</a></td>\n            </tr>\n            <tr *ngIf=\"loadingIncomingTxList\">\n              <td colspan=\"4\" style=\"text-align: center;\"><span class=\"uk-margin-right\" uk-spinner></span> Loading incoming transactions...</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService, WalletAccount} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {BademBlockService} from '../../services/nano-block.service';\nimport * as QRCode from 'qrcode';\nimport BigNumber from 'bignumber.js';\n\n@Component({\n  selector: 'app-receive',\n  templateUrl: './receive.component.html',\n  styleUrls: ['./receive.component.css']\n})\n\n\n\nexport class ReceiveComponent implements OnInit {\n  badem = 100;\n  accounts = this.walletService.wallet.accounts;\n  pendingBelowThreshold = [];\n\n  pendingAccountModel = '0';\n  pendingBlocks = [];\n  qrCodeImage = null;\n  qrAccount = '';\n  qrAmount: BigNumber = null;\n  minAmount: BigNumber = this.settings.settings.minimumReceive ? this.util.badem.mbademToRaw(this.settings.settings.minimumReceive) : null;\n  walletAccount: WalletAccount = null;\n  selAccountInit = false;\n  loadingIncomingTxList = false;\n\n  constructor(\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    public modal: ModalService,\n    private api: ApiService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private bademBlock: BademBlockService,\n    private util: UtilService) { }\n\n  async ngOnInit() {\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.selAccountInit) {\n        this.pendingAccountModel = acc ? acc.id : '0';\n        this.changeQRAccount(this.pendingAccountModel);\n      }\n      this.selAccountInit = true;\n    });\n\n    await this.loadPendingForAll();\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.pendingAccountModel = this.walletService.wallet.selectedAccount.id;\n      this.changeQRAccount(this.pendingAccountModel);\n    }\n  }\n\n  async loadPendingForAll() {\n    const walletPendingBlocks = this.walletService.wallet.pendingBlocks;\n    const walletPendingBlocksBelowThreshold = this.walletService.wallet.pendingBelowThreshold;\n\n    this.pendingBlocks = [];\n    this.pendingBelowThreshold = [];\n\n    // Now, only if we have results, do a unique on the account names, and run account info on all of them?\n    if (walletPendingBlocks.length) {\n      this.loadingIncomingTxList = true;\n      const frontiers = await this.api.accountsFrontiers(walletPendingBlocks.map(p => p.account));\n      if (frontiers && frontiers.frontiers) {\n        for (const account in frontiers.frontiers) {\n          if (!frontiers.frontiers.hasOwnProperty(account)) {\n            continue;\n          }\n          this.workPool.addWorkToCache(frontiers.frontiers[account]);\n        }\n      }\n    }\n\n    this.loadingIncomingTxList = false;\n    this.pendingBlocks = walletPendingBlocks;\n    this.pendingBelowThreshold = walletPendingBlocksBelowThreshold;\n  }\n\n  async getPending() {\n    // clear the list of pending blocks. Updated again with reloadBalances()\n    this.pendingBlocks = [];\n    this.loadingIncomingTxList = true;\n    await this.walletService.reloadBalances(true);\n    await this.loadPendingForAll();\n  }\n\n  async changeQRAccount(account) {\n    this.walletAccount = this.walletService.wallet.accounts.find(a => a.id === account) || null;\n    this.qrAccount = '';\n    let qrCode = null;\n    if (account.length > 1) {\n      this.qrAccount = account;\n      qrCode = await QRCode.toDataURL('badem:' + account + (this.qrAmount ? '?amount=' + this.qrAmount.toString(10) : ''));\n    }\n    this.qrCodeImage = qrCode;\n  }\n\n  async changeQRAmount(amount) {\n    this.qrAmount = null;\n    let qrCode = null;\n    if (amount !== '') {\n      if (this.util.account.isValidBademAmount(amount)) {\n        this.qrAmount = this.util.badem.mbademToRaw(amount);\n      }\n    }\n    if (this.qrAccount.length > 1) {\n      qrCode = await QRCode.toDataURL('badem:' + this.qrAccount + (this.qrAmount ? '?amount=' + this.qrAmount.toString(10) : ''));\n      this.qrCodeImage = qrCode;\n    }\n  }\n\n  async receivePending(pendingBlock) {\n    const sourceBlock = pendingBlock.hash;\n\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === pendingBlock.account);\n    if (!walletAccount) {\n      throw new Error(`unable to find receiving account in wallet`);\n    }\n\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning(`Wallet must be unlocked`);\n    }\n    pendingBlock.loading = true;\n\n    const newBlock = await this.bademBlock.generateReceive(walletAccount, sourceBlock, this.walletService.isLedgerWallet());\n\n    if (newBlock) {\n      this.notificationService.sendSuccess(`Successfully received Badem!`);\n      // clear the list of pending blocks. Updated again with reloadBalances()\n      this.walletService.clearPendingBlocks();\n    } else {\n      if (!this.walletService.isLedgerWallet()) {\n        this.notificationService.sendError(`There was an error receiving the transaction`);\n      }\n    }\n\n    pendingBlock.loading = false;\n\n    await this.walletService.reloadBalances();\n  }\n\n  copied() {\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`);\n  }\n\n  toBigNumber(value) {\n    return new BigNumber(value);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {UtilService} from '../../services/util.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from '../../services/notification.service';\nimport { RemoteSignService } from '../../services/remote-sign.service';\nimport { QrModalService } from '../../services/qr-modal.service';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './remote-signing.component.html',\n  styleUrls: ['./remote-signing.component.css']\n})\nexport class RemoteSigningComponent implements OnInit {\n  toAccountID = '';\n  toAccountStatus: number = null;\n  unsignedBlock = '';\n  signedBlock = '';\n  unsignedStatus: number = null;\n  signedStatus: number = null;\n\n  constructor(\n    private util: UtilService,\n    private router: Router,\n    private notifcationService: NotificationService,\n    private remoteSignService: RemoteSignService,\n    private qrModalService: QrModalService,\n  ) { }\n\n  async ngOnInit() {\n\n  }\n\n  validateDestination() {\n    if (this.util.account.isValidAccount(this.toAccountID)) {\n      this.toAccountStatus = 1;\n      return true;\n    } else {\n      this.toAccountStatus = 0;\n      return false;\n    }\n  }\n\n  validateUnsigned(string) {\n    let url = null;\n    if (string.startsWith('bademsign:')) {\n      url = new URL(string);\n    }\n    if (url && this.remoteSignService.checkSignBlock(url.pathname)) {\n      this.unsignedStatus = 1;\n    } else {\n      this.unsignedStatus = 0;\n    }\n  }\n\n  validateSigned(string) {\n    let url = null;\n    if (string.startsWith('bademprocess:')) {\n      url = new URL(string);\n    }\n    if (url && this.remoteSignService.checkSignBlock(url.pathname) && this.remoteSignService.checkProcessBlock(url.pathname)) {\n      this.signedStatus = 1;\n    } else {\n      this.signedStatus = 0;\n    }\n  }\n\n  start() {\n    if (this.validateDestination()) {\n      this.router.navigate(['account', this.toAccountID], { queryParams: {sign: 1}});\n    } else {\n      this.notifcationService.sendWarning('Not a valid account format!');\n    }\n  }\n\n  navigateBlock(block) {\n    let badScheme = false;\n\n    if (block.startsWith('bademsign:') || block.startsWith('bademprocess:')) {\n      const url = new URL(block);\n      if (url.protocol === 'bademsign:') {\n        this.remoteSignService.navigateSignBlock(url);\n      } else if (url.protocol === 'bademprocess:') {\n        this.remoteSignService.navigateProcessBlock(url);\n      } else {\n        badScheme = true;\n      }\n    } else {\n      badScheme = true;\n    }\n    if (badScheme) {\n      this.notifcationService.sendWarning('Not a recognized block format!', { length: 5000 });\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.toAccountID = data.content;\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2>Remote Signing</h2>\n\n    <div uk-grid class=\"uk-animation-slide-left-small\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-body\">\n            <p><strong>An extremely secure way of transacting on the Badem network without exposing your private keys to the Internet, ensuring only non-sensitive data is transferred between devices.</strong>\n            <br>\n            A full security and user guide is found <a href=\"https://docs.nault.cc/2020/08/05/security-of-nano.html#transact-using-a-remote-signing-procedure\">here</a>.\n            </p>\n\n            <h4>STEP 1 - Create Block (Online Device)</h4>\n            <p>Create a SEND, RECEIVE or CHANGE block from a \"watch-only\" account. No login is needed.</p>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Account to create a block for</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input (keyup)=\"validateDestination()\" (keyup.enter)=\"start()\" [(ngModel)]=\"toAccountID\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': toAccountStatus === 1, 'uk-form-danger': toAccountStatus === 0 }\" type=\"text\" placeholder=\"badem_abc..123\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <button class=\"uk-button uk-button-primary uk-width-1-6@m uk-width-1-1\" (click)=\"start()\">CREATE</button>\n            </div>\n\n            <h4>STEP 2 - Sign Block (Offline Device)</h4>\n            <p><a routerLink=\"/qr-scan\" routerLinkActive=\"active\">Scan the unsigned QR code</a> from Step 1 <strong>OR</strong> paste the block below. Sign it using a key owning the account from step 1.<br>\n            BademVault can optionally be set in Offline Mode from the <a routerLink=\"/configure-app\" routerLinkActive=\"active\">Server Configuration</a> to avoid network notifications.</p>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Unsigned block from step 1</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input (keyup)=\"validateUnsigned(unsignedBlock)\" (keyup.enter)=\"navigateBlock(unsignedBlock)\" [(ngModel)]=\"unsignedBlock\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': unsignedStatus === 1, 'uk-form-danger': unsignedStatus === 0 }\" type=\"text\" placeholder=\"bademsign:{abc..}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <button class=\"uk-button uk-button-primary uk-width-1-6@m uk-width-1-1\" (click)=\"navigateBlock(unsignedBlock)\">SIGN</button>\n            </div>\n\n            <h4>STEP 3 - Process Block (Online Device)</h4>\n            <p><a routerLink=\"/qr-scan\" routerLinkActive=\"active\">Scan the signed QR code</a> from Step 2 <strong>OR</strong> paste the block below. Confirm and send it to the live network!</p>\n\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">Signed block from step 2</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input (keyup)=\"validateSigned(signedBlock)\" (keyup.enter)=\"navigateBlock(signedBlock)\" [(ngModel)]=\"signedBlock\" class=\"uk-input\" [ngClass]=\"{ 'uk-form-success': signedStatus === 1, 'uk-form-danger': signedStatus === 0 }\" type=\"text\" placeholder=\"bademprocess:{abc..}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"uk-inline uk-width-1-1\">\n              <button class=\"uk-button uk-button-primary uk-width-1-6@m uk-width-1-1\" (click)=\"navigateBlock(signedBlock)\">PROCESS</button>\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <div class=\"uk-margin-bottom\" uk-grid>\n      <div class=\"uk-width-expand@s uk-width-1-1\">\n        <h2 class=\"uk-heading-divider\">Representatives Overview</h2>\n      </div>\n      <div class=\"uk-width-auto@s uk-width-1-1 uk-text-right\">\n        <a routerLink=\"/manage-representatives\" class=\"uk-button uk-button-secondary uk-align-right uk-width-auto@s\">Manage Known Reps</a>\n      </div>\n    </div>\n\n    <!-- Send Panel -->\n    <div uk-grid class=\"uk-animation-slide-left-small uk-margin-remove-top\">\n      <div class=\"uk-width-1-1\">\n\n        <div class=\"uk-card uk-card-default\" *ngIf=\"!hideOverview\">\n          <div class=\"uk-card-body uk-padding-remove-bottom\">\n            <p class=\"uk-text-lead uk-text-center\">You have delegated voting weight to the following representatives</p>\n\n\n            <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n              <li style=\"background: #fff; border-bottom: 0;\">\n                <div uk-grid style=\"color: #999; text-transform: uppercase; font-size: .875rem; font-weight: 400;\">\n                  <div class=\"uk-width-1-5\">Status</div>\n                  <div class=\"uk-width-expand\">Representative</div>\n                  <div class=\"uk-width-1-4\">Weight</div>\n                </div>\n              </li>\n            </ul>\n            <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n              <li *ngFor=\"let rep of representativeOverview\">\n                <div uk-grid class=\"\">\n\n                  <div class=\"uk-width-1-5\" [ngClass]=\"{ 'uk-text-danger': rep.statusText === 'alert', 'uk-text-warning': rep.statusText === 'warn', 'uk-text-success': rep.statusText === 'trusted', 'uk-text-primary': rep.statusText === 'ok' }\">\n                    <span *ngIf=\"rep.statusText === 'alert'\" uk-tooltip title=\"This is an unknown or official representative, or it's marked because of bad uptime or high (3%+ of online) voting weight.  It is recommended to change to a new representative!\"><span uk-icon=\"icon: warning\"></span> Change</span>\n                    <span *ngIf=\"rep.statusText === 'warn'\" uk-tooltip title=\"This representative has a bad uptime or a high (2%+ of online) voting weight.  Consider changing to a new representative.\"><span uk-icon=\"icon: warning\"></span> Change</span>\n                    <span *ngIf=\"rep.statusText === 'trusted'\" uk-tooltip title=\"This representative is marked as trusted.  No change is needed.\"><span uk-icon=\"icon: star\"></span> Trusted</span>\n                    <span *ngIf=\"rep.statusText === 'ok'\" uk-tooltip title=\"This representative is saved in your list, as long as it is online, no change is needed.\"><span uk-icon=\"icon: check\"></span> Okay</span>\n                    <span *ngIf=\"rep.statusText === 'none'\" uk-tooltip title=\"This representative is not known, consider switching to a known one or add this one to your list\"><span uk-icon=\"icon: question\"></span> Unknown</span>\n                  </div>\n                  <div class=\"uk-width-expand uk-text-truncate\" (click)=\"addSelectedAccounts(rep.accounts)\" style=\"cursor: pointer;\" uk-tooltip title=\"Select the accounts which are using this representative\">\n                    <span class=\"circle circle-online\" *ngIf=\"rep.status.online\" uk-tooltip title=\"Representative is online\"></span>\n                    <span class=\"circle circle-offline\" *ngIf=\"!rep.status.online\" uk-tooltip title=\"Representative is offline\"></span>\n                    <span *ngIf=\"rep.label\">{{ rep.label }}</span> <span *ngIf=\"!rep.label\"><app-nano-account-id [accountID]=\"rep.id\" middle=\"on\"></app-nano-account-id></span>\n                  </div>\n                  <div class=\"uk-width-1-4\">\n                    {{ rep.delegatedWeight | badem: 'mbadem' }}\n                  </div>\n\n                </div>\n              </li>\n              <li *ngIf=\"!representativeOverview || !representativeOverview.length\" class=\"uk-text-center\">\n                None of your accounts have delegated any voting weight yet, you must receive a transaction to change your representative!\n              </li>\n            </ul>\n            <p class=\"uk-text-center uk-margin-small-bottom\">\n              <small>Click on a representative to select all of the accounts delegated to it</small>\n            </p>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"uk-width-1-1\" *ngIf=\"representativeOverview.length\">\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-body\" style=\"padding-bottom: 0;\">\n\n            <p class=\"uk-text-lead uk-text-center\">Change your representatives</p>\n\n\n            <div class=\"uk-form-horizontal\">\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">Accounts to Change</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"changeAccountID\" (change)=\"newAccountID()\" id=\"form-horizontal-select\">\n                    <option [value]=\"null\">Select Accounts to Change</option>\n                    <option [value]=\"'all'\">All Current Accounts</option>\n                    <option *ngFor=\"let account of wallet.wallet.accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | badem: settings.settings.displayDenomination }})</option>\n                  </select>\n                  <ul class=\"uk-list uk-list-striped\">\n                    <li *ngFor=\"let account of selectedAccounts\">\n                      <div uk-grid>\n                        <div class=\"uk-width-5-6 uk-text-truncate\">\n                          <span *ngIf=\"account.addressBookName\" class=\"uk-margin-small-right uk-label uk-label-default\">{{ account.addressBookName }}</span>\n                          <span *ngIf=\"account.id !== 'All Current Accounts'\"><app-nano-account-id [accountID]=\"account.id\" middle=\"on\"></app-nano-account-id></span>\n                          <span *ngIf=\"account.id === 'All Current Accounts'\">{{ account.id }}</span>\n                        </div>\n                        <div class=\"uk-width-1-6 uk-text-center\" style=\"padding-left: 0;\">\n                          <a (click)=\"removeSelectedAccount(account)\" class=\"uk-text-danger\" title=\"Remove From List\" uk-tooltip><span uk-icon=\"icon: close;\"></span></a>\n                        </div>\n                      </div>\n\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">New Representative</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('rep1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input (blur)=\"validateRepresentative()\" (keyup)=\"searchRepresentatives()\" (focus)=\"searchRepresentatives()\" [(ngModel)]=\"toRepresentativeID\" class=\"uk-input\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"Representative Account\" #repInput>\n\n                    <div *ngIf=\"(representativeResults$ | async).length\" [hidden]=\"!showRepresentatives\" class=\"uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">Representative List Results</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let rep of representativeResults$ | async\">\n                          <a (click)=\"selectRepresentative(rep.id)\">\n                            {{ rep.name }}\n                            <span *ngIf=\"rep.trusted\" uk-icon=\"icon: star;\" class=\"uk-text-success\"></span>\n                            <span *ngIf=\"rep.warn\" uk-icon=\"icon: warning;\" class=\"uk-text-warning\"></span>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\" *ngIf=\"representativeListMatch\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <span class=\"uk-label uk-label-danger\">{{ representativeListMatch }}</span>\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1 uk-margin-top\">\n                    <button class=\"uk-button uk-button-default uk-button-small\" *ngIf=\"showRecommendedReps\" (click)=\"showRecommendedReps = !showRecommendedReps\"><span uk-icon=\"icon: minus; ratio: 0.8\" style=\"margin-right: 5px;\"></span> Hide Recommended Representatives</button>\n                    <button class=\"uk-button uk-button-primary uk-button-small\" *ngIf=\"!showRecommendedReps\" (click)=\"showRecommendedReps = !showRecommendedReps\"><span uk-icon=\"icon: plus; ratio: 0.8\" style=\"margin-right: 5px;\"></span> View Recommended Representatives</button>\n                  </div>\n                </div>\n              </div>\n\n              <div *ngIf=\"showRecommendedReps\">\n                <hr>\n\n                <div class=\"uk-margin\">\n                  <!--<h4>Or, Select a recommended representative</h4>-->\n                  <ul class=\"uk-list uk-list-striped\" style=\"margin-bottom: 0;\">\n                    <li style=\"background: #fff; border-bottom: 0;\">\n                      <div uk-grid style=\"color: #999; text-transform: uppercase; font-size: .875rem; font-weight: 400;\">\n                        <div class=\"uk-width-expand\">Representative</div>\n                        <div class=\"uk-width-1-2\">Weight / Uptime / Accounts</div>\n                        <!--<div class=\"uk-width-1-5\">Uptime / Delegators</div>-->\n                      </div>\n                    </li>\n                  </ul>\n                  <ul class=\"uk-list uk-list-striped\" style=\"margin-top: 0;\">\n                    <li *ngIf=\"recommendedRepsLoading\" class=\"uk-text-center\">\n                      <span uk-icon=\"load\"></span> Loading reps...\n                    </li>\n                    <li *ngFor=\"let rep of recommendedRepsPaginated\">\n                      <div uk-grid >\n                        <div class=\"uk-width-expand\" (click)=\"selectRecommendedRep(rep)\" style=\"cursor: pointer;\">\n                          <span uk-tooltip title=\"Select this representative\">{{ rep.alias }}</span>\n                        </div>\n                        <div class=\"uk-width-1-2\">\n                          <span style=\"display: inline-block; margin-right: 15px;\" uk-tooltip title=\"Percentage of network voting weight delegated\" class=\"uk-text-primary\"><span uk-icon=\"users\"></span> {{ rep.percent }}%</span>\n                          <span style=\"display: inline-block; margin-right: 15px; color: #13ab60;\" uk-tooltip title=\"Uptime since creation\" class=\"\"><span uk-icon=\"bolt\"></span> {{ rep.uptime.toFixed(2) }}%</span>\n\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                  <ul class=\"uk-pagination uk-flex-center\">\n                    <li><a (click)=\"previousReps()\" uk-tooltip title=\"Previous Page\"><span uk-pagination-previous></span></a></li>\n                    <li>Showing {{ (currentRepPage * repsPerPage)+ 1 }} - {{ (currentRepPage * repsPerPage)+ repsPerPage }} of {{ recommendedReps.length }} reps</li>\n                    <li><a (click)=\"nextReps()\" uk-tooltip title=\"Next Page\"><span uk-pagination-next></span></a></li>\n                  </ul>\n                </div>\n\n              </div>\n\n\n            </div>\n          </div>\n          <div class=\"uk-card-footer\">\n            <button class=\"uk-button uk-button-primary uk-width-1-1\" type=\"button\" (click)=\"changeRepresentatives()\" *ngIf=\"!changingRepresentatives\">Update Representatives</button>\n            <button class=\"uk-button uk-button-primary uk-width-1-1 uk-disabled\" type=\"button\" *ngIf=\"changingRepresentatives\"><span uk-spinner></span> Updating Representatives...</button>\n          </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport BigNumber from 'bignumber.js';\nimport {BehaviorSubject} from 'rxjs';\nimport { QrModalService } from '../../services/qr-modal.service';\n\nimport {\n  ApiService,\n  AppSettingsService,\n  FullRepresentativeOverview,\n  BademBlockService,\n  NotificationService,\n  RepresentativeService,\n  UtilService,\n  WalletService\n} from '../../services';\n\n@Component({\n  selector: 'app-representatives',\n  templateUrl: './representatives.component.html',\n  styleUrls: ['./representatives.component.css']\n})\nexport class RepresentativesComponent implements OnInit {\n  @ViewChild('repInput') repInput;\n\n  changeAccountID: any = null;\n  toRepresentativeID = '';\n\n  representativeResults$ = new BehaviorSubject([]);\n  showRepresentatives = false;\n  representativeListMatch = '';\n\n  representativeOverview = [];\n  changingRepresentatives = false;\n\n  selectedAccounts = [];\n  fullAccounts = [];\n\n  recommendedReps = [];\n  recommendedRepsPaginated = [];\n  recommendedRepsLoading = false;\n  selectedRecommendedRep = null;\n  showRecommendedReps = false;\n\n  repsPerPage = 5;\n  currentRepPage = 0;\n\n  hideOverview = false;\n\n  representativeList = [];\n\n  constructor(\n    private router: ActivatedRoute,\n    public wallet: WalletService,\n    private api: ApiService,\n    private notifications: NotificationService,\n    private bademBlock: BademBlockService,\n    private util: UtilService,\n    private representativeService: RepresentativeService,\n    public settings: AppSettingsService,\n    private qrModalService: QrModalService) { }\n\n  async ngOnInit() {\n    this.representativeService.loadRepresentativeList();\n\n    // Listen for query parameters that set defaults\n    this.router.queryParams.subscribe(params => {\n      this.hideOverview = params && params.hideOverview;\n      this.showRecommendedReps = params && params.showRecommended;\n\n      if (params && params.accounts) {\n        this.selectedAccounts = []; // Reset the preselected accounts\n        const accounts = params.accounts.split(',');\n        for (const account of accounts) {\n          this.newAccountID(account);\n        }\n      }\n      if (params && params.representative) {\n        this.selectRepresentative(params.representative);\n      }\n    });\n\n    let repOverview = await this.representativeService.getRepresentativesOverview();\n    // Sort by weight delegated\n    repOverview = repOverview.sort(\n      (a: FullRepresentativeOverview, b: FullRepresentativeOverview) => b.delegatedWeight.toNumber() - a.delegatedWeight.toNumber()\n    );\n    this.representativeOverview = repOverview;\n    repOverview.forEach(o => this.fullAccounts.push(...o.accounts));\n\n    // add the localReps to the list\n    const localReps = this.representativeService.getSortedRepresentatives();\n    this.representativeList.push(...localReps);\n\n    await this.loadRecommendedReps();\n  }\n\n  addSelectedAccounts(accounts) {\n    for (const account of accounts) {\n      this.newAccountID(account.id);\n    }\n\n    // Scroll to the representative input\n    setTimeout(() => this.repInput.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'start' }), 50);\n  }\n\n  newAccountID(accountID) {\n    const newAccount = accountID || this.changeAccountID;\n    if (!newAccount) {\n      return; // Didn't select anything\n    }\n\n    const existingAccount = this.selectedAccounts.find(a => a.id === newAccount);\n    if (existingAccount) {\n      return; // Already selected\n    }\n\n    const allExists = this.selectedAccounts.find(a => a.id === 'All Current Accounts');\n    if (newAccount === 'all' && !allExists) {\n      this.selectedAccounts = []; // Reset the list before adding all\n    }\n    if (newAccount !== 'all' && allExists) {\n      this.selectedAccounts.splice(this.selectedAccounts.indexOf(allExists), 1); // Remove all from the list\n    }\n\n    if (newAccount === 'all') {\n      if (this.selectedAccounts.length === 0) {\n        this.selectedAccounts.push({ id: 'All Current Accounts' });\n      }\n    } else {\n      const walletAccount = this.wallet.getWalletAccount(newAccount);\n      this.selectedAccounts.push(walletAccount);\n    }\n\n    setTimeout(() => this.changeAccountID = null, 10);\n  }\n\n  removeSelectedAccount(account) {\n    this.selectedAccounts.splice(this.selectedAccounts.indexOf(account), 1); // Remove all from the list\n  }\n\n  searchRepresentatives() {\n    this.showRepresentatives = true;\n    const search = this.toRepresentativeID || '';\n\n    const matches = this.representativeList\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.representativeResults$.next(matches);\n  }\n\n  selectRepresentative(rep) {\n    this.showRepresentatives = false;\n    this.toRepresentativeID = rep;\n    this.searchRepresentatives();\n    this.validateRepresentative();\n  }\n\n  async validateRepresentative() {\n    setTimeout(() => this.showRepresentatives = false, 400);\n    this.toRepresentativeID = this.toRepresentativeID.replace(/ /g, '');\n\n    if (this.toRepresentativeID === '') {\n      this.representativeListMatch = '';\n      return;\n    }\n\n    const rep = this.representativeService.getRepresentative(this.toRepresentativeID);\n\n    if (rep) {\n      this.representativeListMatch = rep.name;\n\t} else {\n      this.representativeListMatch = '';\n    }\n  }\n\n  async loadRecommendedReps() {\n    this.recommendedRepsLoading = true;\n    try {\n      const totalSupply = new BigNumber(133248289);\n\n      this.calculatePage();\n      this.recommendedRepsLoading = false;\n    } catch (err) {\n      this.recommendedRepsLoading = null;\n    }\n\n  }\n\n  previousReps() {\n    if (this.currentRepPage > 0) {\n      this.currentRepPage--;\n      this.calculatePage();\n    }\n  }\n  nextReps() {\n    if (this.currentRepPage < (this.recommendedReps.length / this.repsPerPage) - 1) {\n      this.currentRepPage++;\n    } else {\n      this.currentRepPage = 0;\n    }\n    this.calculatePage();\n  }\n\n  calculatePage() {\n    this.recommendedRepsPaginated = this.recommendedReps.slice(\n      (this.currentRepPage * this.repsPerPage),\n      (this.currentRepPage * this.repsPerPage) + this.repsPerPage\n    );\n  }\n\n  selectRecommendedRep(rep) {\n    this.selectedRecommendedRep = rep;\n    this.toRepresentativeID = rep.account;\n    this.showRecommendedReps = false;\n    this.representativeListMatch = rep.alias; // We will save if they use this, so this is a nice little helper\n  }\n\n  async changeRepresentatives() {\n    const accounts = this.selectedAccounts;\n    const newRep = this.toRepresentativeID;\n\n    if (this.changingRepresentatives) {\n      return; // Already running\n    }\n    if (this.wallet.walletIsLocked()) {\n      return this.notifications.sendWarning(`Wallet must be unlocked`);\n    }\n    if (!accounts || !accounts.length) {\n      return this.notifications.sendWarning(`You must select at least one account to change`);\n    }\n\n    this.changingRepresentatives = true;\n\n    const valid = this.util.account.isValidAccount(newRep);\n    if (!valid) {\n      this.changingRepresentatives = false;\n      return this.notifications.sendWarning(`Representative is not a valid account`);\n    }\n\n    const allAccounts = accounts.find(a => a.id === 'All Current Accounts');\n    const accountsToChange = allAccounts ? this.wallet.wallet.accounts : accounts;\n\n    // Remove any that don't need their represetatives to be changed\n    const accountsNeedingChange = accountsToChange.filter(account => {\n      const accountInfo = this.fullAccounts.find(a => a.id === account.id);\n      if (!accountInfo || accountInfo.error) {\n        return false; // Cant find info, update the account\n      }\n\n      if (accountInfo.representative.toLowerCase() === newRep.toLowerCase()) {\n        return false; // This account already has this representative, reject it\n      }\n\n      return true;\n    });\n\n    if (!accountsNeedingChange.length) {\n      this.changingRepresentatives = false;\n      return this.notifications.sendInfo(`None of the accounts selected need to be updated`);\n    }\n\n    // Now loop and change them\n    for (const account of accountsNeedingChange) {\n      const walletAccount = this.wallet.getWalletAccount(account.id);\n      if (!walletAccount) {\n        continue; // Unable to find account in the wallet? wat?\n      }\n\n      try {\n        const changed = await this.bademBlock.generateChange(walletAccount, newRep, this.wallet.isLedgerWallet());\n        if (!changed) {\n          this.notifications.sendError(`Error changing representative for ${account.id}, please try again`);\n        }\n      } catch (err) {\n        this.notifications.sendError(err.message);\n      }\n    }\n\n    // Determine if a recommended rep was selected, if so we save an entry in the rep list\n    if (this.selectedRecommendedRep && this.selectedRecommendedRep.account && this.selectedRecommendedRep.account === newRep) {\n      this.representativeService.saveRepresentative(newRep, this.selectedRecommendedRep.alias, false, false);\n    }\n\n    // Good to go!\n    this.selectedAccounts = [];\n    this.toRepresentativeID = '';\n    this.representativeListMatch = '';\n    this.changingRepresentatives = false;\n    this.selectedRecommendedRep = null;\n\n    this.notifications.sendSuccess(`Successfully updated representatives!`);\n\n    let useCachedReps = false;\n\n    // If the overview panel is displayed, reload its data now\n    if (!this.hideOverview) {\n      this.representativeOverview = await this.representativeService.getRepresentativesOverview();\n      useCachedReps = true;\n    }\n\n    // Detect if any new reps should be changed\n    await this.representativeService.detectChangeableReps(useCachedReps ? this.representativeOverview : null);\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'rep1':\n          this.toRepresentativeID = data.content;\n          this.validateRepresentative();\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Send Badem</h2>\n\n    <!-- Send Panel -->\n    <div uk-grid *ngIf=\"activePanel == 'send'\" class=\"uk-animation-slide-left-small\">\n      <div class=\"uk-width-1-1\">\n\n        <div class=\"uk-card uk-card-default\">\n          <div class=\"uk-card-body\">\n            <div class=\"uk-form-horizontal\">\n\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-select\">From Account</label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" [(ngModel)]=\"fromAccountID\" (change)=\"resetRaw()\" id=\"form-horizontal-select\">\n                    <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | badem: settings.settings.displayDenomination }})</option>\n                  </select>\n                </div>\n              </div>\n\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"form-horizontal-text2\">To Account</label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('account1','account')\" uk-tooltip title=\"Scan from QR code\"></a>\n                    <input (blur)=\"validateDestination()\" (keyup)=\"searchAddressBook()\" (focus)=\"searchAddressBook()\" [(ngModel)]=\"toAccountID\" [ngClass]=\"{ 'uk-form-success': toAccountStatus === 2, 'uk-form-danger': toAccountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text2\" type=\"text\" placeholder=\"Account to send to\" autocomplete=\"off\">\n\n                    <div *ngIf=\"(addressBookResults$ | async).length\" [hidden]=\"!showAddressBook\" class=\"dropdown-nav-container uk-animation-slide-down-small uk-width-1-1 uk-card uk-card-default uk-card-body uk-position-absolute\" style=\"z-index: 15000\">\n                      <ul class=\"uk-nav uk-nav-default\">\n                        <li class=\"uk-nav-header\">Address Book Results</li>\n                        <li class=\"uk-nav-divider\"></li>\n                        <li *ngFor=\"let book of addressBookResults$ | async\">\n                          <a (click)=\"selectBookEntry(book.account)\">{{ book.name }}</a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"uk-form-controls\" *ngIf=\"addressBookMatch\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <span class=\"uk-label uk-label-primary\">{{ addressBookMatch }}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div uk-grid>\n                <div class=\"uk-width-1-1\">\n                  <label class=\"uk-form-label\" for=\"form-horizontal-text\">Amount</label>\n                  <div class=\"uk-form-controls\">\n                    <div uk-grid>\n                      <div class=\"uk-width-1-1\">\n                        <div class=\"uk-inline uk-width-1-1\">\n                          <a class=\"uk-form-icon uk-form-icon-flip form-icon-btn\" (click)=\"setMaxAmount()\" style=\"padding-right: 7px;\" uk-tooltip title=\"Set Maximum Amount\">Max</a>\n                          <input [(ngModel)]=\"amount\" [ngClass]=\"{ 'uk-form-danger': amountStatus === 0 }\" class=\"uk-input\" id=\"form-horizontal-text\" (keyup)=\"syncFiatPrice()\" (change)=\"syncFiatPrice()\" type=\"text\" placeholder=\"Amount of {{ selectedAmount.name }} to send\" maxlength=\"40\">\n                        </div>\n\n                      </div>\n\n                      <div *ngIf=\"amountRaw.gt(0)\" class=\"uk-width-1-1 uk-width-3-5@m uk-text-small uk-text-muted uk-margin-remove\">\n                        <span uk-tooltip title=\"Additional raw to send\">+{{ amountRaw.toString(10) }} raw</span> &nbsp; <a class=\"uk-text-danger\" (click)=\"resetRaw()\" uk-tooltip title=\"Remove the additional raw amount from the total amount\" uk-icon=\"icon: close\"></a>\n                      </div>\n\n                      <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\" *ngIf=\"settings.settings.displayCurrency\">\n                        <div class=\"uk-width-1-1 uk-inline\">\n                          <a class=\"uk-form-icon uk-link-reset uk-link-muted\" style=\"padding-left: 7px;\" uk-tooltip title=\"Last Price: {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / BADEM\">{{ settings.settings.displayCurrency | currencySymbol }}</a>\n                          <input [(ngModel)]=\"amountFiat\" (keyup)=\"syncBademPrice()\" (change)=\"syncBademPrice()\" style=\"padding-left: 50px !important;\" class=\"uk-input\" id=\"form-horizontal-text-fiat\" type=\"text\" placeholder=\"Amount of {{ settings.settings.displayCurrency }} to send\">\n                        </div>\n                      </div>\n\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"uk-card-footer\">\n            <button class=\"uk-button uk-button-primary uk-width-1-1\" type=\"button\" (click)=\"sendTransaction()\">Send Badem</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- End Send Panel -->\n\n    <!-- Confirmation Panel -->\n    <div uk-grid *ngIf=\"activePanel == 'confirm'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\">\n          <span style=\"display: block; padding-top: 8px;\">You are about to send</span>\n          <span style=\"display:block; font-size: 32px;\">{{ rawAmount | badem: 'mbadem' }}</span>\n          <span style=\"display:block; font-size: 12px;\" *ngIf=\"amountRaw.gt(0)\">+{{ amountRaw.toString(10) }} raw</span>\n          <span style=\"display:block; font-size: 16px; padding-bottom: 5px;\" *ngIf=\"settings.settings.displayCurrency\">{{ amountFiat | fiat: settings.settings.displayCurrency }} @ {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / BADEM</span>\n        </div>\n        <br>\n        <div uk-grid *ngIf=\"fromAccount && toAccount\">\n          <div class=\"uk-width-1-2@m\">\n            <div class=\"uk-card uk-card-default\">\n              <div class=\"uk-card-header uk-text-left\" style=\"padding: 20px 20px;\">\n\n                <span class=\"confirm-title uk-text-truncate\">\n                  <div *ngIf=\"fromAddressBook\">\n                    <span class=\"confirm-title\">{{ fromAddressBook }}</span>\n                    <span class=\"confirm-subtitle\">From Account</span>\n                    <span class=\"uk-text-small uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></span>\n                  </div>\n                  <div *ngIf=\"!fromAddressBook\">\n                    <span class=\"confirm-title uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></span>\n                    <span class=\"confirm-subtitle\">From Account</span>\n                    <br class=\"br-spacer\" />\n                  </div>\n                </span>\n              </div>\n              <div class=\"uk-card-body\" style=\"padding: 20px 20px;\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <span class=\"confirm-currency\">{{ fromAccount.balance || 0 | badem: 'mbadem'}}</span>\n                    <span class=\"confirm-subtitle\">Current Balance</span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <span class=\"confirm-currency uk-text-danger\">-{{ rawAmount | badem: 'mbadem' }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-2@m\">\n            <div class=\"uk-card uk-card-default\">\n              <div class=\"uk-card-header uk-text-right\" style=\"padding: 20px 20px;\">\n\n                <span class=\"confirm-title uk-text-truncate\">\n                  <div *ngIf=\"toAddressBook\">\n                    <span class=\"confirm-title\">{{ toAddressBook }}</span>\n                    <span class=\"confirm-subtitle\">To Account</span>\n                    <span class=\"uk-text-small uk-text-truncate\"><app-nano-account-id [accountID]=\"toAccountID\" class=\"uk-flex-right\"></app-nano-account-id></span>\n                  </div>\n                  <div *ngIf=\"!toAddressBook\">\n                    <span class=\"confirm-title uk-text-truncate\"><app-nano-account-id [accountID]=\"toAccountID\" class=\"uk-flex-right\"></app-nano-account-id></span>\n                    <span class=\"confirm-subtitle\">To Account</span>\n                    <br class=\"br-spacer\" />\n                  </div>\n                </span>\n              </div>\n              <div class=\"uk-card-body\" style=\"padding: 20px 20px;\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <span class=\"confirm-currency\">{{ toAccount.balance || 0 | badem: 'mbadem'}}</span>\n                    <span class=\"confirm-subtitle\">Current Balance</span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <span class=\"confirm-currency uk-text-success\">+{{ rawAmount | badem: 'mbadem' }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div uk-grid>\n          <div class=\"uk-width-1-2@s\">\n            <button (click)=\"activePanel = 'send'\" class=\"uk-button uk-button-danger uk-width-1-1\">Cancel</button>\n          </div>\n          <div class=\"uk-width-1-2@s\">\n            <button *ngIf=\"!confirmingTransaction\" class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"confirmTransaction()\">Confirm & Send</button>\n            <button *ngIf=\"confirmingTransaction\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\"><span class=\"uk-margin-right\" uk-spinner></span> Loading</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- End Confirmation Panel -->\n\n\n    <div uk-grid *ngIf=\"activePanel == 'status'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\">\n          <span style=\"display: block; padding-top: 8px;\">You are sending</span>\n          <span style=\"display:block; font-size: 32px;\">{{ rawAmount | badem: 'mbadem' }}</span>\n          <span style=\"display:block; font-size: 12px;\" *ngIf=\"amountRaw.gt(0)\">+{{ amountRaw.toString(10) }} raw</span>\n          <span style=\"display:block; font-size: 16px; padding-bottom: 5px;\" *ngIf=\"settings.settings.displayCurrency\">{{ amountFiat | fiat: settings.settings.displayCurrency }} @ {{ price.price.lastPrice | fiat: settings.settings.displayCurrency }} / BADEM</span>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport BigNumber from 'bignumber.js';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {PriceService} from '../../services/price.service';\nimport {BademBlockService} from '../../services/nano-block.service';\nimport { QrModalService } from '../../services/qr-modal.service';\n\nconst nacl = window['nacl'];\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html',\n  styleUrls: ['./send.component.css']\n})\nexport class SendComponent implements OnInit {\n  badem = 100;\n\n  activePanel = 'send';\n\n  accounts = this.walletService.wallet.accounts;\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n\n  amounts = [\n    { name: 'BADEM', shortName: 'BADEM', value: 'mbadem' },\n    { name: 'kbadem', shortName: 'kbadem', value: 'kbadem' },\n    { name: 'badem', shortName: 'badem', value: 'badem' },\n  ];\n  selectedAmount = this.amounts[0];\n\n  amount = null;\n  amountRaw = new BigNumber(0);\n  amountFiat: number|null = null;\n  rawAmount: BigNumber = new BigNumber(0);\n  fromAccount: any = {};\n  fromAccountID: any = '';\n  fromAddressBook = '';\n  toAccount: any = false;\n  toAccountID = '';\n  toAddressBook = '';\n  toAccountStatus = null;\n  amountStatus = null;\n  confirmingTransaction = false;\n  selAccountInit = false;\n\n  constructor(\n    private router: ActivatedRoute,\n    private walletService: WalletService,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private nodeApi: ApiService,\n    private bademBlock: BademBlockService,\n    public price: PriceService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private util: UtilService,\n    private qrModalService: QrModalService, ) { }\n\n  async ngOnInit() {\n    const params = this.router.snapshot.queryParams;\n\n    if (params && params.amount) {\n      this.amount = params.amount;\n    }\n    if (params && params.to) {\n      this.toAccountID = params.to;\n      this.validateDestination();\n    }\n\n    this.addressBookService.loadAddressBook();\n\n    // Set default From account\n    this.fromAccountID = this.accounts.length ? this.accounts[0].id : '';\n\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.selAccountInit) {\n        if (acc) {\n          this.fromAccountID = acc.id;\n        } else {\n          this.findFirstAccount();\n        }\n      }\n      this.selAccountInit = true;\n    });\n\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.fromAccountID = this.walletService.wallet.selectedAccount.id;\n    } else {\n      // If \"total balance\" is selected in the sidebar, use the first account in the wallet that has a balance\n      this.findFirstAccount();\n    }\n  }\n\n  async findFirstAccount() {\n    // Load balances before we try to find the right account\n    if (this.walletService.wallet.balance.isZero()) {\n      await this.walletService.reloadBalances();\n    }\n\n    // Look for the first account that has a balance\n    const accountIDWithBalance = this.accounts.reduce((previous, current) => {\n      if (previous) return previous;\n      if (current.balance.gt(0)) return current.id;\n      return null;\n    }, null);\n\n    if (accountIDWithBalance) {\n      this.fromAccountID = accountIDWithBalance;\n    }\n  }\n\n  // An update to the Badem amount, sync the fiat value\n  syncFiatPrice() {\n    if (!this.validateAmount()) return;\n    const rawAmount = this.getAmountBaseValue(this.amount || 0).plus(this.amountRaw);\n    if (rawAmount.lte(0)) {\n      this.amountFiat = 0;\n      return;\n    }\n\n    // This is getting hacky, but if their currency is bitcoin, use 6 decimals, if it is not, use 2\n    const precision = this.settings.settings.displayCurrency === 'BTC' ? 1000000 : 100;\n\n    // Determine fiat value of the amount\n    const fiatAmount = this.util.badem.rawToMbadem(rawAmount).times(this.price.price.lastPrice)\n      .times(precision).floor().div(precision).toNumber();\n\n    this.amountFiat = fiatAmount;\n  }\n\n  // An update to the fiat amount, sync the nano value based on currently selected denomination\n  syncBademPrice() {\n    if (!this.amountFiat) {\n      this.amount = '';\n      return;\n    }\n    if (!this.util.string.isNumeric(this.amountFiat)) return;\n    const rawAmount = this.util.badem.mbademToRaw(new BigNumber(this.amountFiat).div(this.price.price.lastPrice));\n    const bademVal = this.util.badem.rawToBadem(rawAmount).floor();\n    const bademAmount = this.getAmountValueFromBase(this.util.badem.bademToRaw(bademVal));\n\n    this.amount = bademAmount.toNumber();\n  }\n\n  searchAddressBook() {\n    this.showAddressBook = true;\n    const search = this.toAccountID || '';\n    const addressBook = this.addressBookService.addressBook;\n\n    const matches = addressBook\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.addressBookResults$.next(matches);\n  }\n\n  selectBookEntry(account) {\n    this.showAddressBook = false;\n    this.toAccountID = account;\n    this.searchAddressBook();\n    this.validateDestination();\n  }\n\n  async validateDestination() {\n    // The timeout is used to solve a bug where the results get hidden too fast and the click is never registered\n    setTimeout(() => this.showAddressBook = false, 400);\n\n    // Remove spaces from the account id\n    this.toAccountID = this.toAccountID.replace(/ /g, '');\n\n    this.addressBookMatch = this.addressBookService.getAccountName(this.toAccountID);\n\n    // const accountInfo = await this.walletService.walletApi.accountInfo(this.toAccountID);\n    this.toAccountStatus = null;\n    if (this.util.account.isValidAccount(this.toAccountID)) {\n      const accountInfo = await this.nodeApi.accountInfo(this.toAccountID);\n      if (accountInfo.error) {\n        if (accountInfo.error === 'Account not found') {\n          this.toAccountStatus = 1;\n        }\n      }\n      if (accountInfo && accountInfo.frontier) {\n        this.toAccountStatus = 2;\n      }\n    } else {\n      this.toAccountStatus = 0;\n    }\n  }\n\n  validateAmount() {\n    if (this.util.account.isValidBademAmount(this.amount)) {\n      this.amountStatus = 1;\n      return true;\n    } else {\n      this.amountStatus = 0;\n      return false;\n    }\n  }\n\n  async sendTransaction() {\n    const isValid = this.util.account.isValidAccount(this.toAccountID);\n    if (!isValid) {\n      return this.notificationService.sendWarning(`To account address is not valid`);\n    }\n    if (!this.fromAccountID || !this.toAccountID) {\n      return this.notificationService.sendWarning(`From and to account are required`);\n    }\n    if (!this.validateAmount()) {\n      return this.notificationService.sendWarning(`Invalid BADEM Amount`);\n    }\n\n    const from = await this.nodeApi.accountInfo(this.fromAccountID);\n    const to = await this.nodeApi.accountInfo(this.toAccountID);\n    if (!from) {\n      return this.notificationService.sendError(`From account not found`);\n    }\n\n    from.balanceBN = new BigNumber(from.balance || 0);\n    to.balanceBN = new BigNumber(to.balance || 0);\n\n    this.fromAccount = from;\n    this.toAccount = to;\n\n    const rawAmount = this.getAmountBaseValue(this.amount || 0);\n    this.rawAmount = rawAmount.plus(this.amountRaw);\n\n    const bademAmount = this.rawAmount.div(this.badem);\n\n    if (this.amount < 0 || rawAmount.lessThan(0)) {\n      return this.notificationService.sendWarning(`Amount is invalid`);\n    }\n    if (from.balanceBN.minus(rawAmount).lessThan(0)) {\n      return this.notificationService.sendError(`From account does not have enough BADEM`);\n    }\n\n    // Determine a proper raw amount to show in the UI, if a decimal was entered\n    this.amountRaw = this.rawAmount.mod(this.badem);\n\n    // Determine fiat value of the amount\n    this.amountFiat = this.util.badem.rawToMbadem(rawAmount).times(this.price.price.lastPrice).toNumber();\n\n    // Start precopmuting the work...\n    this.fromAddressBook = this.addressBookService.getAccountName(this.fromAccountID);\n    this.toAddressBook = this.addressBookService.getAccountName(this.toAccountID);\n    this.workPool.addWorkToCache(this.fromAccount.frontier);\n\n    this.activePanel = 'confirm';\n  }\n\n  async confirmTransaction() {\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.fromAccountID);\n    if (!walletAccount) {\n      throw new Error(`Unable to find sending account in wallet`);\n    }\n    if (this.walletService.walletIsLocked()) {\n      return this.notificationService.sendWarning(`Wallet must be unlocked`);\n    }\n\n    this.confirmingTransaction = true;\n\n    try {\n      const newHash = await this.bademBlock.generateSend(walletAccount, this.toAccountID,\n        this.rawAmount, this.walletService.isLedgerWallet());\n      if (newHash) {\n        this.notificationService.sendSuccess(`Successfully sent ${this.amount} ${this.selectedAmount.shortName}!`);\n        this.activePanel = 'send';\n        this.amount = null;\n        this.amountFiat = null;\n        this.resetRaw();\n        this.toAccountID = '';\n        this.toAccountStatus = null;\n        this.fromAddressBook = '';\n        this.toAddressBook = '';\n        this.addressBookMatch = '';\n      } else {\n        if (!this.walletService.isLedgerWallet()) {\n          this.notificationService.sendError(`There was an error sending your transaction, please try again.`);\n        }\n      }\n    } catch (err) {\n      this.notificationService.sendError(`There was an error sending your transaction: ${err.message}`);\n    }\n\n\n    this.confirmingTransaction = false;\n\n    await this.walletService.reloadBalances();\n  }\n\n  setMaxAmount() {\n    const walletAccount = this.walletService.wallet.accounts.find(a => a.id === this.fromAccountID);\n    if (!walletAccount) {\n      return;\n    }\n\n    this.amountRaw = walletAccount.balanceRaw;\n\n    const bademVal = this.util.badem.rawToBadem(walletAccount.balance).floor();\n    const maxAmount = this.getAmountValueFromBase(this.util.badem.bademToRaw(bademVal));\n    this.amount = maxAmount.toNumber();\n    this.syncFiatPrice();\n  }\n\n  resetRaw() {\n    this.amountRaw = new BigNumber(0);\n  }\n\n  getAmountBaseValue(value) {\n\n    switch (this.selectedAmount.value) {\n      default:\n      case 'badem': return this.util.badem.bademToRaw(value);\n      case 'kbadem': return this.util.badem.kbademToRaw(value);\n      case 'mbadem': return this.util.badem.mbademToRaw(value);\n    }\n  }\n\n  getAmountValueFromBase(value) {\n    switch (this.selectedAmount.value) {\n      default:\n      case 'badem': return this.util.badem.rawToBadem(value);\n      case 'kbadem': return this.util.badem.rawToKbadem(value);\n      case 'mbadem': return this.util.badem.rawToMbadem(value);\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'account1':\n          this.toAccountID = data.content;\n          this.validateDestination();\n          break;\n      }\n    }, () => {}\n    );\n  }\n\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 *ngIf=\"shouldSign\">Sign Badem Block</h2>\n    <h2 *ngIf=\"!shouldSign\">Process Badem Block</h2>\n\n    <!-- Confirmation Panel -->\n    <div uk-grid *ngIf=\"activePanel == 'confirm'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\">\n          <span *ngIf=\"!qrCodeImageBlock && shouldSign\" style=\"display: block; padding-top: 8px;\">You are about to sign a block to {{txTypeMessage}}</span>\n          <span *ngIf=\"qrCodeImageBlock && shouldSign\" style=\"display: block; padding-top: 8px;\">You have signed a block to {{txTypeMessage}}</span>\n          <span *ngIf=\"!blockProcessed && !shouldSign\" style=\"display: block; padding-top: 8px;\">You are about to {{txTypeMessage}}</span>\n          <span *ngIf=\"blockProcessed && !shouldSign\" style=\"display: block; padding-top: 8px;\">You have processed a block to {{txTypeMessage}}</span>\n          <span *ngIf=\"txType != txTypes.change\" style=\"display:block; font-size: 32px;\">{{ rawAmount | badem: 'mbadem' }}</span>\n          <span *ngIf=\"txType == txTypes.change\" style=\"display:block; font-size: 20px;\">{{ currentBlock.representative }}</span>\n        </div>\n        <br>\n        <div uk-grid>\n          <div class=\"uk-width-1-2@m\">\n            <div class=\"uk-card uk-card-default\">\n              <div class=\"uk-card-header uk-text-left\" style=\"padding: 20px 20px; line-height: 22px;\">\n                <span class=\"confirm-title uk-text-truncate\">\n                  <div *ngIf=\"fromAddressBook\">\n                    <span class=\"confirm-title\">{{ fromAddressBook }}</span>\n                    <span class=\"confirm-subtitle\">From Account</span>\n                    <span class=\"uk-text-small uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></span>\n                  </div>\n                  <div *ngIf=\"!fromAddressBook\">\n                    <span class=\"confirm-title uk-text-truncate\"><app-nano-account-id [accountID]=\"fromAccountID\"></app-nano-account-id></span>\n                    <span class=\"confirm-subtitle\">From Account</span>\n                    <br class=\"br-spacer\" />\n                  </div>\n                </span>\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"fromAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                </ul>\n              </div>\n              <div class=\"uk-card-body\" style=\"padding: 20px 20px;\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <span class=\"confirm-currency\">{{ fromAccountBalance ? (fromAccountBalance | badem: 'mbadem'): 'N/A'}}</span>\n                    <span class=\"confirm-subtitle\">Balance when block was created</span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <span class=\"confirm-currency uk-text-danger\">-{{ rawAmount | badem: 'mbadem' }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-2@m\">\n            <div class=\"uk-card uk-card-default\">\n              <div class=\"uk-card-header uk-text-right\" style=\"padding: 20px 20px; line-height: 22px;\">\n\n                <span class=\"confirm-title uk-text-truncate\">\n                  <div *ngIf=\"toAddressBook\">\n                    <span class=\"confirm-title\">{{ toAddressBook }}</span>\n                    <span class=\"confirm-subtitle\">To Account</span>\n                    <span class=\"uk-text-small uk-text-truncate\"><app-nano-account-id [accountID]=\"toAccountID\" class=\"uk-flex-right\"></app-nano-account-id></span>\n                  </div>\n                  <div *ngIf=\"!toAddressBook\">\n                    <span class=\"confirm-title uk-text-truncate\"><app-nano-account-id [accountID]=\"toAccountID\" class=\"uk-flex-right\"></app-nano-account-id></span>\n                    <span class=\"confirm-subtitle\">To Account</span>\n                    <br class=\"br-spacer\" />\n                  </div>\n                </span>\n                <ul class=\"uk-iconnav\">\n                <li><a ngxClipboard [cbContent]=\"toAccountID\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Account Address\" uk-tooltip></a></li>\n                </ul>\n              </div>\n              <div class=\"uk-card-body\" style=\"padding: 20px 20px;\">\n                <div uk-grid>\n                  <div class=\"uk-width-1-2 uk-text-muted\">\n                    <span class=\"confirm-currency\">{{ toAccountBalance ? (toAccountBalance | badem: 'mbadem'): 'N/A' }}</span>\n                    <span class=\"confirm-subtitle\">Balance when block was created</span>\n                  </div>\n                  <div class=\"uk-width-1-2 uk-text-right\">\n                    <span class=\"confirm-currency uk-text-success\">+{{ rawAmount | badem: 'mbadem' }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <br>\n\n        <div *ngIf=\"shouldSign\" class=\"uk-card uk-card-default uk-width-1-1\" style=\"padding: 20px 20px;\">\n          <span><strong>Signing Method</strong></span><span uk-icon=\"icon: info;\" uk-tooltip title=\"The block is signed with a private key. If using the build-in wallet, it first needs to be created using any of the available methods.\"></span><br>\n          <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[0]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[0]}}</label>\n          <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[1]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[1]}}</label>\n          <label class=\"uk-margin-medium-right\"><input class=\"uk-radio\" type=\"radio\" name=\"signtype\" value={{signTypes[2]}} [(ngModel)]=\"signTypeSelected\" (change)=\"signTypeChange()\"> {{signTypes[2]}}</label>\n          <br><br>\n          <span><strong>Proof of Work</strong></span><span uk-icon=\"icon: info;\" uk-tooltip title=\"Proof of Work (PoW) can be optionally generated now and included in the block, or it will be added for you before the block is published. The threshold of 1x is normally ok but you may need higher if the network is saturated with transactions and you want it prioritized. Custom multiplier only works for local PoW source CPU/GPU.\"></span><br>\n          <div class=\"uk-inline uk-width-auto\">\n            <select class=\"uk-select\" [(ngModel)]=\"selectedThreshold\" (change)=\"changeThreshold()\">\n              <option *ngFor=\"let option of thresholds\" [value]=\"option.value\">{{ option.name }}</option>\n            </select>\n          </div>\n          <label class=\"uk-margin-small-left\"><input class=\"uk-checkbox\" type=\"checkbox\" name=\"pow\" value='pow' [(ngModel)]=\"shouldGenWork\" (change)=\"powChange()\"> Include</label>\n          <br><br>\n\n          <!-- Seed and index-->\n          <div *ngIf=\"signTypeSelected === signTypes[1]\">\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"source-wallet\">Signing Wallet <span uk-icon=\"icon: info;\" uk-tooltip title=\"The seed or mnemonic that contains the account you are signing for.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-inline uk-width-1-1\" style=\"height: 40px;\">\n                      <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('seed1','generic')\" uk-tooltip title=\"Scan from QR code\"></a>\n                      <input [(ngModel)]=\"sourceSecret\" class=\"uk-input uk-margin-small-bottom {{validSeed ? '':'uk-form-danger'}}\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"seedChange(sourceSecret)\" placeholder=\"Badem seed, BIP39 seed or 24-word mnemonic\" autocomplete=\"off\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"start-index\">Account Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The index at where the account you are signing for is located in the seed. Maximum 4,294,967,295.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-inline uk-width-1-1\">\n                      <input [(ngModel)]=\"index\" class=\"uk-input uk-margin-small-bottom {{validIndex ? '':'uk-form-danger'}}\" id=\"start-index\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"indexChange(index)\" placeholder=\"0 to 4294967295\" autocomplete=\"off\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- END Seed and index-->\n\n          <!-- Private key-->\n          <div *ngIf=\"signTypeSelected === signTypes[2]\">\n            <div class=\"uk-width-1-1 narrow-div\">\n              <div class=\"uk-form-horizontal\">\n                <div class=\"uk-margin\">\n                  <label class=\"uk-form-label\" for=\"source-wallet\">Private Key <span uk-icon=\"icon: info;\" uk-tooltip title=\"The private key that derive the account you are signing for.\"></span></label>\n                  <div class=\"uk-form-controls\">\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\" style=\"height: 40px; margin-bottom: 10px;\">\n                        <a class=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: camera\" (click)=\"openQR('priv1','hash')\" uk-tooltip title=\"Scan from QR code\"></a>\n                        <input [(ngModel)]=\"sourcePriv\" class=\"uk-input uk-margin-small-bottom {{validPrivkey ? '':'uk-form-danger'}}\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"privkeyChange(sourcePriv)\" placeholder=\"Private key or Expanded private key\" autocomplete=\"off\">\n                      </div>\n                      <label><input class=\"uk-checkbox\" type=\"checkbox\" name=\"expanded\" value='expanded' [(ngModel)]=\"privateKeyExpanded\" (change)=\"privkeyChange(sourcePriv)\"> Expanded private key</label><span uk-icon=\"icon: info;\" uk-tooltip title=\"If using a 64 or 128 char expanded key.\"></span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- END Private key-->\n\n          <span class=\"uk-text-danger\">{{signatureMessage}}</span>\n          <span class=\"uk-text-success\">{{signatureMessageSuccess}}</span>\n\n        </div>\n        <br>\n\n        <div *ngIf=\"processedHash\" class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" style=\"padding: 20px 20px;\">\n          <div class=\"uk-visible-toggle\">\n            <div uk-grid class=\"uk-width-auto\">\n              <div class=\"uk-width-auto uk-text-truncate\" style=\"max-width: calc(100% - 35px); flex: auto;\">\n                <span class=\"uk-text-success\">Successfully processed block: </span><a [routerLink]=\"'/transaction/' + processedHash\" class=\"uk-link-text\" title=\"View Block Details\" uk-tooltip>{{ processedHash }}</a>\n              </div>\n              <div class=\"uk-width-auto\" style=\"padding-left: 10px; flex: auto;\">\n                <ul class=\"uk-iconnav\">\n                  <li><a ngxClipboard [cbContent]=\"processedHash\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy Block Hash\" uk-tooltip></a></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <br>\n          <a *ngIf=\"processedHash\" [routerLink]=\"'/account/' + signatureAccount\" [queryParams]=\"{ sign: 1 }\" class=\"uk-button uk-button-primary uk-width-auto\" title=\"Account detail view\" uk-tooltip>Account Detail View</a>\n        </div>\n\n        <div *ngIf=\"!processedHash\" uk-grid>\n          <div class=\"uk-width-1-2@s\">\n            <a class=\"uk-button uk-button-danger uk-width-1-1\" routerLink=\"/qr-scan\" routerLinkActive=\"active\">Cancel</a>\n          </div>\n          <div class=\"uk-width-1-2@s\">\n            <button *ngIf=\"!confirmingTransaction && shouldSign\" class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"confirmTransaction()\">Confirm & Sign</button>\n            <button *ngIf=\"confirmingTransaction && shouldSign\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\"><span class=\"uk-margin-right\" uk-spinner></span> Loading</button>\n            <button *ngIf=\"!confirmingTransaction && !shouldSign\" class=\"uk-button uk-button-primary uk-width-1-1\" (click)=\"confirmBlock()\">Confirm & Process</button>\n            <button *ngIf=\"confirmingTransaction && !shouldSign\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\"><span class=\"uk-margin-right\" uk-spinner></span> Loading</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- End Confirmation Panel -->\n\n    <div uk-grid *ngIf=\"activePanel == 'error'\" class=\"uk-animation-slide-left\">\n      <div class=\"uk-width-1-1\">\n        <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\">\n          <span style=\"display: block; padding-top: 8px;\">The provided block info is not valid.<br/>Please refer to any error message below.<br/></span>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<!-- Modal for result QR -->\n<div id=\"signed-modal\" uk-modal>\n  <div class=\"uk-modal-dialog uk-modal-body modal-qr\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n        <h2 class=\"uk-modal-title\">Signed Block</h2>\n    </div>\n    <div class=\"uk-modal-body modal-qr-body\">\n      <p><a routerLink=\"/qr-scan\" routerLinkActive=\"active\" class=\"uk-modal-close\">Scan</a> the signed QR with an online BademVault, or copy the \"Signed Block\" to <a routerLink=\"/remote-signing\" routerLinkActive=\"active\" class=\"uk-modal-close\">Step 3</a>.</p>\n\n      <div *ngIf=\"finalSignature\" class=\"uk-width-1-1 uk-text-center\" style=\"display: flex; justify-content: center;\">\n        <span class=\"uk-text-small\" uk-tooltip title=\"Signed block string to be copied to remote device\" style=\"overflow-wrap: anywhere;\"><strong>Signed Block</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"qrString\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n        <span class=\"uk-text-small\" uk-tooltip title=\"Signature to be embedded into the final block\" style=\"overflow-wrap: anywhere; margin-left: 50px;\"><strong>Signature</strong></span>\n        <ul class=\"uk-iconnav\" style=\"padding-left: 0;\">\n          <li><a ngxClipboard [cbContent]=\"finalSignature\" (cbOnSuccess)=\"copied()\" uk-icon=\"icon: copy\" title=\"Copy\" uk-tooltip></a></li>\n        </ul>\n      </div>\n\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <img *ngIf=\"qrCodeImageBlock\" [src]=\"qrCodeImageBlock\" alt=\"QR code\"><br />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport BigNumber from 'bignumber.js';\nimport {AddressBookService} from '../../services/address-book.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {UtilService, StateBlock, TxType} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {BademBlockService} from '../../services/nano-block.service';\nimport {ApiService} from '../../services/api.service';\nimport * as QRCode from 'qrcode';\nimport * as bip39 from 'bip39';\nimport * as bip39Wallet from 'nanocurrency-web';\nimport { QrModalService } from '../../services/qr-modal.service';\n\nconst INDEX_MAX = 4294967295;\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\n\nexport class SignComponent implements OnInit {\n  activePanel = 'error';\n  shouldSign: boolean = null; // if a block has been scanned for signing (or if it is a block to process)\n  accounts = this.walletService.wallet.accounts;\n  addressBookResults$ = new BehaviorSubject([]);\n  showAddressBook = false;\n  addressBookMatch = '';\n  amount = null;\n  rawAmount: BigNumber = new BigNumber(0);\n  fromAccountID: any = '';\n  fromAccountBalance: BigNumber = null;\n  fromAddressBook = '';\n  toAccountID = '';\n  toAccountBalance: BigNumber = null;\n  toAddressBook = '';\n  toAccountStatus = null;\n  currentBlock: StateBlock = null;\n  previousBlock: StateBlock = null;\n  txType: TxType = null;\n  txTypes = TxType; // to access enum in html\n  txTypeMessage = '';\n  confirmingTransaction = false;\n  shouldGenWork = false;\n  signTypes: string[] = ['Internal Wallet or Ledger', 'Seed or Mnemonic+Index', 'Private Key'];\n  signTypeSelected: string = this.signTypes[0];\n  signatureAccount = '';\n  signatureMessage = '';\n  signatureMessageSuccess = '';\n  walletAccount = null;\n  nullBlock = '0000000000000000000000000000000000000000000000000000000000000000';\n  qrString = null;\n  qrCodeImage = null;\n  qrCodeImageBlock = null;\n  validSeed = false;\n  validIndex = true;\n  validPrivkey = false;\n  sourceSecret = '';\n  sourcePriv = '';\n  index = '0';\n  privateKey = null; // the final private key to sign with if using manual entry\n  privateKeyExpanded = false; // if a private key is provided manually and it's expanded 128 char\n  processedHash: string = null;\n  finalSignature: string = null;\n  // With v21 the 1x is the old 8x and max will be 8x due to the webgl threshold is max ffffffff00000000\n  thresholds = [\n    { name: '1x', value: 1 },\n    { name: '2x', value: 2 },\n    { name: '4x', value: 4 },\n    { name: '8x', value: 8 }\n  ];\n  selectedThreshold = this.thresholds[0].value;\n  selectedThresholdOld = this.selectedThreshold;\n\n  constructor(\n    private router: ActivatedRoute,\n    private walletService: WalletService,\n    private addressBookService: AddressBookService,\n    private notificationService: NotificationService,\n    private bademBlock: BademBlockService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private api: ApiService,\n    private util: UtilService,\n    private qrModalService: QrModalService) { }\n\n  async ngOnInit() {\n    const params = this.router.snapshot.queryParams;\n    console.log(params);\n    this.signTypeSelected = this.walletService.isConfigured() ? this.signTypes[0] : this.signTypes[1];\n\n    if ('sign' in params && 'n_account' in params && 'n_previous' in params && 'n_representative' in params &&\n      'n_balance' in params && 'n_link' in params) {\n      this.currentBlock = {'account': params.n_account, 'previous': params.n_previous, 'representative': params.n_representative,\n      'balance': params.n_balance, 'link': params.n_link, signature: 'n_signature' in params ? params.n_signature : null,\n      work: 'n_work' in params ? params.n_work : null};\n\n      // previous block won't be included with open block (or maybe if another wallet implement this feature)\n      if ('p_account' in params && 'p_previous' in params && 'p_representative' in params && 'p_balance' in params && 'p_link' in params) {\n        this.previousBlock = {'account': params.p_account, 'previous': params.p_previous, 'representative': params.p_representative,\n        'balance': params.p_balance, 'link': params.p_link, signature: 'p_signature' in params ? params.p_signature : null, work: null};\n      }\n\n      this.shouldSign = params.sign === '1' ? true : false;\n      this.shouldGenWork = this.currentBlock.work === null && !this.shouldSign;\n\n      // check if both new block and previous block hashes matches (balances has not been tampered with) and have valid parameters\n      if (this.previousBlock && this.verifyBlock(this.currentBlock) && this.verifyBlock(this.previousBlock)) {\n        // it's a send block\n        if (new BigNumber(this.previousBlock.balance).gt(new BigNumber(this.currentBlock.balance))) {\n          this.txType = TxType.send;\n          this.txTypeMessage = 'send';\n          this.rawAmount = new BigNumber(this.previousBlock.balance).minus(new BigNumber(this.currentBlock.balance));\n          this.fromAccountID = this.currentBlock.account;\n          this.toAccountID = this.util.account.getPublicAccountID(this.util.hex.toUint8(this.currentBlock.link));\n          this.fromAccountBalance = new BigNumber(this.previousBlock.balance);\n          // sending to itself\n          if (this.fromAccountID === this.toAccountID) {\n            this.toAccountBalance = this.fromAccountBalance;\n          }\n        } else if (new BigNumber(this.previousBlock.balance).eq(new BigNumber(this.currentBlock.balance)) &&\n            this.previousBlock.representative !== this.currentBlock.representative && this.currentBlock.link === this.nullBlock) {\n          // it's a change block\n          this.txType = TxType.change;\n          this.txTypeMessage = 'change representative to';\n          this.rawAmount = new BigNumber(0);\n          this.fromAccountID = this.currentBlock.account;\n          this.toAccountID = this.currentBlock.account;\n          this.fromAccountBalance = new BigNumber(this.currentBlock.balance);\n          this.toAccountBalance = new BigNumber(this.currentBlock.balance);\n        } else if (new BigNumber(this.previousBlock.balance).lt(\n            new BigNumber(this.currentBlock.balance)) && this.currentBlock.previous !== this.nullBlock) {\n          // it's a receive block\n          this.txType = TxType.receive;\n          this.txTypeMessage = 'receive';\n          this.rawAmount = new BigNumber(this.currentBlock.balance).minus(new BigNumber(this.previousBlock.balance));\n\n          // get from-account info if online\n          let recipientInfo = null;\n          try {\n            recipientInfo = await this.api.blockInfo(this.currentBlock.link);\n          } catch {}\n          if (recipientInfo && 'block_account' in recipientInfo) {\n            this.fromAccountID = recipientInfo.block_account;\n          } else {\n            this.fromAccountID = null;\n          }\n\n          this.toAccountID = this.currentBlock.account;\n          this.toAccountBalance = new BigNumber(this.previousBlock.balance);\n        } else {\n          return this.notificationService.sendError(`Meaningless block. The balance and representative are unchanged!`, {length: 0});\n        }\n\n        this.amount = this.util.badem.rawToMbadem(this.rawAmount).toString(10);\n        this.prepareTransaction();\n      } else if (!this.previousBlock && this.verifyBlock(this.currentBlock)) {\n        // No previous block present (open block)\n        // TODO: Make all block subtypes also possible to sign even if previous block is missing, but with less displayed data\n        if (this.currentBlock.previous === this.nullBlock) {\n          this.txType = TxType.open;\n          this.txTypeMessage = 'receive';\n          this.rawAmount = new BigNumber(this.currentBlock.balance);\n\n          // get from-account info if online\n          let recipientInfo = null;\n          try {\n            recipientInfo = await this.api.blockInfo(this.currentBlock.link);\n          } catch {}\n\n          if (recipientInfo && 'block_account' in recipientInfo) {\n            this.fromAccountID = recipientInfo.block_account;\n          } else {\n            this.fromAccountID = null;\n          }\n\n          this.toAccountID = this.currentBlock.account;\n          this.toAccountBalance = new BigNumber(0);\n        } else {\n          return this.notificationService.sendError(`Only OPEN block is currently supported when previous block is missing`, {length: 0});\n        }\n\n        this.amount = this.util.badem.rawToMbadem(this.rawAmount).toString(10);\n        this.prepareTransaction();\n      } else {\n        return;\n      }\n    } else {\n      this.notificationService.sendError(`Incorrect parameters provided for signing!`, {length: 0});\n      return;\n    }\n\n    this.addressBookService.loadAddressBook();\n  }\n\n  verifyBlock(block: StateBlock) {\n    if (this.util.account.isValidAccount(block.account) &&\n      this.util.account.isValidAccount(block.representative) &&\n      this.util.account.isValidAmount(block.balance) &&\n      this.util.badem.isValidHash(block.previous) &&\n      this.util.badem.isValidHash(block.link)) {\n      return true;\n    } else {\n      this.notificationService.sendError(`The provided blocks contain invalid values!`, {length: 0});\n      return false;\n    }\n  }\n\n  verifyBlockHash(currentBlock: StateBlock, previousBlock: StateBlock) {\n    const block: StateBlock = {account: previousBlock.account, link: previousBlock.link, previous: previousBlock.previous,\n      representative: previousBlock.representative, balance: previousBlock.balance, signature: null, work: null};\n    const previousHash = this.util.hex.fromUint8(this.util.badem.hashStateBlock(block));\n    if (!currentBlock.previous || previousHash !== currentBlock.previous) {\n      this.notificationService.sendError(`The hash of the previous block does not match the frontier in the new block!`, {length: 0});\n    }\n    return currentBlock.previous && previousHash === currentBlock.previous;\n  }\n\n  searchAddressBook() {\n    this.showAddressBook = true;\n    const search = this.toAccountID || '';\n    const addressBook = this.addressBookService.addressBook;\n\n    const matches = addressBook\n      .filter(a => a.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\n      .slice(0, 5);\n\n    this.addressBookResults$.next(matches);\n  }\n\n  signTypeChange() {\n    this.signatureMessage = '';\n    this.signatureMessageSuccess = '';\n\n    switch (this.signTypeSelected) {\n      // wallet\n      case this.signTypes[0]:\n        this.walletAccount = this.accounts.find(a => a.id.replace('badem_', 'badem_') === this.signatureAccount);\n        if (!this.walletAccount) {\n          return this.signatureMessage = 'Could not find a matching wallet account to sign with. Make sure it\\'s added under your accounts';\n        } else {\n          this.signatureMessageSuccess = 'A matching account found!';\n        }\n        break;\n\n      case this.signTypes[1]:\n        this.seedChange(this.sourceSecret);\n        break;\n\n      case this.signTypes[2]:\n        this.privkeyChange(this.sourcePriv);\n        break;\n    }\n  }\n\n  powChange() {\n    if (this.shouldGenWork) {\n      this.prepareWork();\n    }\n  }\n\n  changeThreshold() {\n    // multiplier has changed, clear the cache and recalculate\n    if (this.selectedThreshold !== this.selectedThresholdOld) {\n      const workBlock = this.txType === TxType.open ? this.util.account.getAccountPublicKey(this.toAccountID) : this.currentBlock.previous;\n      this.workPool.removeFromCache(workBlock);\n      console.log('PoW multiplier changed: Clearing cache');\n      this.powChange();\n    }\n  }\n\n  prepareWork() {\n    // The block has been verified\n    if (this.toAccountID) {\n      console.log('Precomputing work...');\n      const workBlock = this.txType === TxType.open ? this.util.account.getAccountPublicKey(this.toAccountID) : this.currentBlock.previous;\n      this.workPool.addWorkToCache(workBlock, this.selectedThreshold);\n    }\n  }\n\n  async prepareTransaction() {\n    this.fromAddressBook = this.addressBookService.getAccountName(this.fromAccountID);\n    this.toAddressBook = this.addressBookService.getAccountName(this.toAccountID);\n\n    this.activePanel = 'confirm';\n    // Start precopmuting the work...\n    if (this.shouldGenWork) {\n      this.prepareWork();\n    }\n\n    if (this.txType === TxType.send || this.txType === TxType.change) {\n      this.signatureAccount = this.fromAccountID.replace('badem_', 'badem_').toLowerCase();\n    } else if (this.txType === TxType.receive || this.txType === TxType.open) {\n      this.signatureAccount = this.toAccountID.replace('badem_', 'badem_').toLowerCase();\n    }\n\n    if (this.shouldSign) {\n      this.signTypeChange();\n    }\n  }\n\n  // Create signature for the block\n  async confirmTransaction() {\n    let walletAccount = this.walletAccount;\n    let isLedger = this.walletService.isLedgerWallet();\n\n    // using internal wallet\n    if (this.signTypeSelected === this.signTypes[0] && walletAccount) {\n      if (this.walletService.walletIsLocked()) {\n        return this.notificationService.sendWarning('Wallet must be unlocked for signing with it');\n      }\n    } else if (this.signTypeSelected === this.signTypes[0]) {\n      return this.notificationService.sendWarning('Could not find a matching wallet account to sign with. Make sure it\\'s added under your accounts');\n    }\n\n    // using seed or private key\n    if (((this.signTypeSelected === this.signTypes[1] && !this.validSeed) || (this.signTypeSelected === this.signTypes[2])\n      && !this.validPrivkey)) {\n        return this.notificationService.sendWarning('Could not find a matching private key to sign with.');\n      }\n    if (this.signTypeSelected === this.signTypes[1] || this.signTypeSelected === this.signTypes[2]) {\n      isLedger = false;\n      // create dummy wallet that only contains needed elements for signature\n      walletAccount = {keyPair: {secretKey: this.util.hex.toUint8(this.privateKey), expanded: this.privateKeyExpanded}};\n    }\n\n    this.confirmingTransaction = true;\n\n    // sign the block\n    const block = await this.bademBlock.signOfflineBlock(walletAccount, this.currentBlock,\n      this.previousBlock, this.txType, this.shouldGenWork, this.selectedThreshold, isLedger);\n    console.log('Signature: ' + block.signature || 'Error');\n    console.log('Work: ' + block.work || 'Not applied');\n\n    if (!block.signature) {\n      this.confirmingTransaction = false;\n      return this.notificationService.sendError('The block could not be signed!', {lenth: 0});\n    }\n\n    this.qrString = null;\n    this.qrCodeImageBlock = null;\n    this.finalSignature = null;\n\n    const UIkit = window['UIkit'];\n    const modal = UIkit.modal('#signed-modal');\n    modal.show();\n\n    this.finalSignature = block.signature;\n\n    try {\n      this.clean(block);\n      if (this.previousBlock) {\n        this.clean(this.previousBlock);\n      }\n      if (this.previousBlock) {\n        this.qrString = 'bademprocess:{\"block\":' + JSON.stringify(block) +\n        ',\"previous\":' + JSON.stringify(this.previousBlock) + '}';\n      } else {\n        this.qrString = 'bademprocess:{\"block\":' + JSON.stringify(block) + '}';\n      }\n\n      const qrCode = await QRCode.toDataURL(this.qrString, { errorCorrectionLevel: 'L', scale: 16 });\n      this.qrCodeImageBlock = qrCode;\n    } catch (error) {\n      this.confirmingTransaction = false;\n      console.log(error);\n      return this.notificationService.sendError('The block could not be signed!', {lenth: 0});\n    }\n\n    this.confirmingTransaction = false;\n    this.notificationService.sendSuccess('The block has been signed and can be sent to the network!');\n  }\n\n  // Send signed block to the network\n  async confirmBlock() {\n    this.confirmingTransaction = true;\n    const workBlock = this.txType === TxType.open ? this.util.account.getAccountPublicKey(this.toAccountID) : this.currentBlock.previous;\n    if (this.shouldGenWork) {\n      // For open blocks which don't have a frontier, use the public key of the account\n      if (!this.workPool.workExists(workBlock)) {\n        this.notificationService.sendInfo(`Generating Proof of Work...`);\n      }\n\n      this.currentBlock.work = await this.workPool.getWork(workBlock);\n      this.workPool.removeFromCache(workBlock);\n    }\n\n    // Validate that frontier is still the same and the previous balance is correct\n    if (this.txType !== TxType.open) {\n      const accountInfo = await this.api.accountInfo(this.signatureAccount);\n      if ('frontier' in accountInfo && accountInfo.frontier !== this.currentBlock.previous) {\n        this.confirmingTransaction = false;\n        return this.notificationService.sendError('The block can\\'t be processed because the account frontier has changed!', {lenth: 0});\n      }\n      if ('balance' in accountInfo && accountInfo.balance !== this.previousBlock.balance) {\n        this.confirmingTransaction = false;\n        return this.notificationService.sendError('The block can\\'t be processed because the current account balance does not match the previous block!', {lenth: 0});\n      }\n    }\n\n    if (!this.currentBlock.signature) {\n      this.confirmingTransaction = false;\n      return this.notificationService.sendError('The block can\\'t be processed because the signature is missing!', {lenth: 0});\n    }\n\n    if (!this.currentBlock.work) {\n      this.confirmingTransaction = false;\n      return this.notificationService.sendError('The block can\\'t be processed because work is missing!', {lenth: 0});\n    }\n\n    // Process block\n    const blockData: any = this.currentBlock;\n    blockData.type = 'state';\n    const processResponse = await this.api.process(blockData, this.txType);\n    if (processResponse && processResponse.hash) {\n      // Add new hash into the work pool but does not make much sense for this case\n      // this.workPool.addWorkToCache(processResponse.hash);\n      this.workPool.removeFromCache(workBlock);\n      this.processedHash = processResponse.hash;\n      this.notificationService.sendSuccess('Successfully processed the block!');\n    } else {\n      console.log(processResponse);\n      this.notificationService.sendError('There was an error while processing the block! Please see the console.', {lenth: 0});\n    }\n    this.confirmingTransaction = false;\n  }\n\n  copied() {\n    this.notificationService.sendSuccess(`Successfully copied to clipboard!`);\n  }\n\n  clean(obj) {\n    for (const propName in obj) {\n      if (obj[propName] === null || obj[propName] === undefined) {\n        delete obj[propName];\n      }\n    }\n  }\n\n  seedChange(input) {\n    const keyType = this.checkMasterKey(input);\n    this.validSeed = keyType !== null;\n    if (this.validSeed && this.validIndex) {\n      this.verifyKey(keyType, input, Number(this.index));\n    } else {\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  privkeyChange(input) {\n    const privKey = this.convertPrivateKey(input);\n    if (privKey !== null) {\n      // Match given block account with with private key\n      const pubKey = this.util.account.generateAccountKeyPair(this.util.hex.toUint8(privKey), this.privateKeyExpanded).publicKey;\n      const address = this.util.account.getPublicAccountID(pubKey);\n      if (address === this.signatureAccount ) {\n        this.validPrivkey = true;\n        this.privateKey = privKey;\n        this.signatureMessage = '';\n        this.signatureMessageSuccess = 'The private key match the account!';\n        return;\n      } else {\n        this.signatureMessage = 'The account for this private key does not match!';\n      }\n    } else {\n      this.signatureMessage = '';\n    }\n    this.signatureMessageSuccess = '';\n    this.validPrivkey = false;\n    this.privateKey = '';\n  }\n\n  indexChange(index) {\n    this.validIndex = true;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!this.util.badem.isValidIndex(index)) {\n        this.validIndex = false;\n      }\n      if (index > INDEX_MAX) {\n        this.validIndex = false;\n      }\n    } else {\n      this.validIndex = false;\n    }\n\n    if (this.validSeed && this.validIndex) {\n      const keyType = this.checkMasterKey(this.sourceSecret);\n      this.verifyKey(keyType, this.sourceSecret, Number(this.index));\n    } else {\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  verifyKey(keyType: string, input: string, index: number) {\n    let seed = '';\n    let privKey1 = '';\n    let privKey2 = '';\n\n    // input is mnemonic\n    if (keyType === 'mnemonic') {\n      seed = bip39.mnemonicToEntropy(input).toUpperCase();\n      // seed must be 64 or the nano wallet can't be created.\n      // This is the reason 12-words can't be used because the seed would be 32 in length\n      if (seed.length !== 64) {\n        this.notificationService.sendError(`Mnemonic not 24 words`);\n        return;\n      }\n    }\n\n    // nano seed\n    if (keyType === 'badem_seed' || seed !== '' || keyType === 'bip39_seed') {\n      if (seed === '') { // seed from input, no mnemonic\n        seed = input;\n      }\n      // start with blake2b derivation\n      if (keyType !== 'bip39_seed') {\n          privKey1 = this.util.hex.fromUint8(this.util.account.generateAccountSecretKeyBytes(this.util.hex.toUint8(seed), index));\n      }\n      // also check using bip39/44 derivation\n      let bip39Seed;\n      // take 128 char bip39 seed directly from input or convert it from a 64 char nano seed (entropy)\n      if (keyType === 'bip39_seed') {\n        bip39Seed = input;\n      } else {\n        bip39Seed = bip39Wallet.wallet.generate(seed).seed;\n      }\n      privKey2 = bip39Wallet.wallet.accounts(bip39Seed, index, index)[0].privateKey;\n    }\n\n    // Match given block account with any of the private keys extracted\n    const pubKey1 = this.util.account.generateAccountKeyPair(this.util.hex.toUint8(privKey1), this.privateKeyExpanded).publicKey;\n    const pubKey2 = this.util.account.generateAccountKeyPair(this.util.hex.toUint8(privKey2), this.privateKeyExpanded).publicKey;\n    const address1 = this.util.account.getPublicAccountID(pubKey1);\n    const address2 = this.util.account.getPublicAccountID(pubKey2);\n\n    if (address1 === this.signatureAccount || address2 === this.signatureAccount ) {\n      if (address1 === this.signatureAccount) {\n        this.privateKey = privKey1;\n      } else {\n        this.privateKey = privKey2;\n      }\n      this.signatureMessage = '';\n      this.signatureMessageSuccess = 'A matching private key found!';\n    } else {\n      this.signatureMessage = 'Could not find a matching private key!';\n      this.signatureMessageSuccess = '';\n    }\n  }\n\n  // Validate type of master key\n  checkMasterKey(key) {\n    // validate nano seed\n    if (key.length === 64) {\n      if (this.util.badem.isValidSeed(key)) {\n        return 'badem_seed';\n      }\n    }\n    // validate bip39 seed\n    if (key.length === 128) {\n      if (this.util.hex.isHex(key)) {\n        return 'bip39_seed';\n      }\n    }\n    // validate mnemonic\n    if (bip39.validateMnemonic(key)) {\n      return 'mnemonic';\n    }\n    return null;\n  }\n\n  convertPrivateKey(key) {\n    if (key.length === 128) {\n      this.privateKeyExpanded = true;\n      // expanded key includes deterministic R value material which we ignore\n      return key.substring(0, 64);\n    } else if (key.length === 64) {\n      return key;\n    } else {\n      return null;\n    }\n  }\n\n  // open qr reader modal\n  openQR(reference, type) {\n    const qrResult = this.qrModalService.openQR(reference, type);\n    qrResult.then((data) => {\n      switch (data.reference) {\n        case 'seed1':\n          this.sourceSecret = data.content;\n          this.seedChange(data.content);\n          break;\n        case 'priv1':\n          this.sourcePriv = data.content;\n          this.privkeyChange(data.content);\n          break;\n      }\n    }, () => {}\n    );\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n\n    <h2 class=\"uk-heading-divider\">Wallet Sweeper</h2>\n\n    <div class=\"uk-width-1-1 nlt-page-intro\">\n      <p>\n        This lets you collect all funds from all accounts in a given wallet and transfer them to any destination.\n      </p>\n      <p>\n        Could be used to load a paper wallet into some of your existing accounts, transfer a wallet or even empty your existing BademVault wallet and transfer it somewhere else.\n      </p>\n      <p>\n        Even a mnemonic from a Ledger hardware wallet or other multicurrency wallets using BIP39/44 can be recovered using this tool.\n      </p>\n      <p>\n        <strong>Please use with caution if you are using an external destination. Make sure you have access to the seed on the receiving side!</strong>\n      </p>\n    </div>\n\n    <div class=\"uk-card uk-card-default\">\n      <div class=\"uk-card-body\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"source-wallet\">Source Wallet <span uk-icon=\"icon: info;\" uk-tooltip title=\"The wallet to empty/sweep into the destination. WARNING: This wallet and all coresponding accounts will be emptied.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <input [(ngModel)]=\"sourceWallet\" class=\"uk-input uk-margin-small-bottom {{validSeed ? '':'uk-form-danger'}}\" id=\"source-wallet\" type=\"text\" (ngModelChange)=\"seedChange(sourceWallet)\" placeholder=\"Badem seed, BIP39 seed, private key or 12,15,18,21,24-word mnemonic\" autocomplete=\"off\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"destination-account\">Local Destination<span uk-icon=\"icon: info;\" uk-tooltip title=\"Local accounts that can be used as destination for the swept funds. Make sure you are able to unlock your BademVault wallet.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <select class=\"uk-select\" id=\"destination-account\" [(ngModel)]=\"myAccountModel\" (change)=\"setDestination(myAccountModel)\">\n                    <option *ngFor=\"let account of accounts\" [value]=\"account.id\">{{account.addressBookName ? account.addressBookName + ' - ' : '#' + account.index + ' - ' }} {{ account.id | squeeze }} ({{ account.balance | badem: settings.settings.displayDenomination }})</option>\n                    <option [value]=\"0\">Custom Destination</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div *ngIf=\"customAccountSelected\" class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"custom-destination\">Custom Destination<span uk-icon=\"icon: info;\" uk-tooltip title=\"The deposit account for the sweps funds. Can be any remote account.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div uk-grid>\n                    <div class=\"uk-width-1-1\">\n                      <div class=\"uk-inline uk-width-1-1\">\n                        <input [(ngModel)]=\"destinationAccount\" class=\"uk-input uk-margin-small-bottom {{validDestination ? '':'uk-form-danger'}}\" id=\"custom-destination\" type=\"text\" (ngModelChange)=\"destinationChange(destinationAccount)\" placeholder=\"badem_abc..123\">\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"start-index\">Start Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The account index to start looking for funds. The first account in any wallet is usually 0. Ignored if using private key as source. The maximum number of indexes to check in each run is 100.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"startIndex\" class=\"uk-input uk-margin-small-bottom {{validStartIndex ? '':'uk-form-danger'}}\" id=\"start-index\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"startIndexChange(startIndex)\" placeholder=\"0 to {{indexMax}}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"end-index\">End Index <span uk-icon=\"icon: info;\" uk-tooltip title=\"The account index to stop looking for funds. The first account in any wallet is usually 0. Ignored if using private key as source. The maximum number of indexes to check in each run is 100.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"endIndex\" class=\"uk-input uk-margin-small-bottom {{validEndIndex ? '':'uk-form-danger'}}\" id=\"end-index\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"endIndexChange(endIndex)\" placeholder=\"0 to {{indexMax}}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <div class=\"uk-form-horizontal\">\n              <div class=\"uk-margin\">\n                <label class=\"uk-form-label\" for=\"max-incoming\">Max Incoming Tx's <span uk-icon=\"icon: info;\" uk-tooltip title=\"Maximum number of incoming transactions to receive on each source account before sweeping. 0 is allowed. You can also use the 'Min Receive' in the app settings to get rid of spam. If not enough, you can just run the process multiple times.\"></span></label>\n                <div class=\"uk-form-controls\">\n                  <div class=\"uk-inline uk-width-1-1\">\n                    <input [(ngModel)]=\"maxIncoming\" class=\"uk-input uk-margin-small-bottom {{validMaxIncoming ? '':'uk-form-danger'}}\" id=\"max-incoming\" type=\"text\" maxLength=\"10\" (ngModelChange)=\"maxIncomingChange(maxIncoming)\" placeholder=\"0 to {{incomingMax}}\" autocomplete=\"off\">\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"uk-width-1-1 narrow-div\">\n            <button *ngIf=\"!sweeping\" class=\"uk-button uk-button-primary uk-width-1-1\" type=\"button\" (click)=\"sweep()\">START SWEEPING</button>\n            <button *ngIf=\"sweeping\" class=\"uk-button uk-button-primary uk-disabled uk-width-1-1\" type=\"button\"><span class=\"uk-margin-right\" uk-spinner></span> PROCESSING...</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-width-1-1\">\n      <textarea [(ngModel)]=\"output\" rows=\"4\" readOnly #outputarea class=\"uk-input uk-margin-small-bottom\" placeholder=\"The output log will be visible here\"></textarea>   \n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {ModalService} from '../../services/modal.service';\nimport {ApiService} from '../../services/api.service';\nimport {UtilService, TxType} from '../../services/util.service';\nimport {WorkPoolService} from '../../services/work-pool.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport {BademBlockService} from '../../services/nano-block.service';\nimport * as nanocurrency from 'nanocurrency';\nimport { wallet } from 'nanocurrency-web';\nimport * as bip39 from 'bip39';\nimport {Router} from '@angular/router';\n\nconst INDEX_MAX = 4294967295; // seed index\nconst SWEEP_MAX_INDEX = 100; // max index keys to sweep\nconst SWEEP_MAX_PENDING = 100; // max pending blocks to process per run\n\n@Component({\n  selector: 'app-sweeper',\n  templateUrl: './sweeper.component.html',\n  styleUrls: ['./sweeper.component.css'],\n})\n\nexport class SweeperComponent implements OnInit {\n  accounts = this.walletService.wallet.accounts;\n  indexMax = INDEX_MAX;\n  incomingMax = SWEEP_MAX_PENDING;\n\n  myAccountModel = this.accounts.length > 0 ? this.accounts[0].id : '0';\n  sourceWallet = '';\n  destinationAccount = this.accounts.length > 0 ? this.accounts[0].id : '';\n  startIndex = '0';\n  endIndex = '5';\n  maxIncoming = SWEEP_MAX_PENDING.toString();\n\n  output = '';\n  sweeping = false;\n  pubKey = '';\n  adjustedBalance = '0';\n  representative = '';\n  privKey = '';\n  previous = '';\n  subType = '';\n  blocks = [];\n  keys = [];\n  keyCount = 0;\n  pendingCallback = null;\n  totalSwept = '0';\n  customAccountSelected = this.accounts.length === 0;\n\n  validSeed = false;\n  validDestination = this.myAccountModel !== '0' ? true : false;\n  validStartIndex = true;\n  validEndIndex = true;\n  validMaxIncoming = true;\n  selAccountInit = false;\n\n  @ViewChild('outputarea') logArea: ElementRef;\n\n  constructor(\n    private walletService: WalletService,\n    private notificationService: NotificationService,\n    private appSettings: AppSettingsService,\n    public modal: ModalService,\n    private api: ApiService,\n    private workPool: WorkPoolService,\n    public settings: AppSettingsService,\n    private bademBlock: BademBlockService,\n    private util: UtilService,\n    private route: Router) {\n      if (this.route.getCurrentNavigation().extras.state && this.route.getCurrentNavigation().extras.state.seed) {\n        this.sourceWallet = this.route.getCurrentNavigation().extras.state.seed;\n        this.validSeed = true;\n      }\n    }\n\n  async ngOnInit() {\n    // Update selected account if changed in the sidebar\n    this.walletService.wallet.selectedAccount$.subscribe(async acc => {\n      if (this.selAccountInit) {\n        this.myAccountModel = acc ? acc.id : (this.accounts.length > 0 ? this.accounts[0].id : '0');\n      }\n      this.selAccountInit = true;\n    });\n\n    // Set the account selected in the sidebar as default\n    if (this.walletService.wallet.selectedAccount !== null) {\n      this.myAccountModel = this.walletService.wallet.selectedAccount.id;\n    }\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  setDestination(account) {\n    if (account !== '0') {\n      this.destinationAccount = account;\n      this.customAccountSelected = false;\n    } else {\n      this.destinationAccount = '';\n      this.customAccountSelected = true;\n    }\n    this.destinationChange(account);\n  }\n\n  // set min value for start index\n  setMin() {\n  this.startIndex = '0';\n  // check end index\n  if (this.validEndIndex) {\n    if (parseInt(this.endIndex, 10) > 0 + SWEEP_MAX_INDEX) {\n      this.endIndex = (0 + SWEEP_MAX_INDEX).toString(); }\n    }\n  }\n\n  // set max value for end index\n  setMax() {\n    this.endIndex = INDEX_MAX.toString();\n    // check start index\n    if (this.validStartIndex) {\n      if (parseInt(this.startIndex, 10) < INDEX_MAX - SWEEP_MAX_INDEX) {\n        this.startIndex = (INDEX_MAX - SWEEP_MAX_INDEX).toString();\n      }\n    }\n  }\n\n  // set max value for pending limit\n  setMaxIncoming() {\n    this.maxIncoming = SWEEP_MAX_PENDING.toString();\n  }\n\n  seedChange(seed) {\n    if (this.checkMasterKey(seed)) {\n      this.validSeed = true;\n    } else {\n      this.validSeed = false;\n    }\n  }\n\n  destinationChange(address) {\n    if (nanocurrency.checkAddress(address)) {\n      this.validDestination = true;\n    } else {\n      this.validDestination = false;\n    }\n  }\n\n  startIndexChange(index) {\n    let invalid = false;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!nanocurrency.checkIndex(index)) {\n        invalid = true;\n      }\n      if (index > INDEX_MAX) {\n        invalid = true;\n      }\n    } else {\n      invalid = true;\n    }\n    if (invalid) {\n      this.validStartIndex = false;\n      return;\n    }\n    // check end index\n    if (this.validEndIndex) {\n      if (parseInt(this.endIndex, 10) > index + SWEEP_MAX_INDEX) {\n        this.endIndex = (index + SWEEP_MAX_INDEX).toString();\n      }\n    }\n    this.validStartIndex = true;\n  }\n\n  endIndexChange(index) {\n    let invalid = false;\n    if (this.util.string.isNumeric(index) && index % 1 === 0) {\n      index = parseInt(index, 10);\n      if (!nanocurrency.checkIndex(index)) {\n        invalid = true;\n      }\n      if (index > INDEX_MAX) {\n        invalid = true;\n      }\n    } else {\n      invalid = true;\n    }\n    if (invalid) {\n      this.validEndIndex = false;\n      return;\n    }\n    // check end index\n    if (this.validStartIndex) {\n      if (parseInt(this.startIndex, 10) < index - SWEEP_MAX_INDEX) {\n        this.startIndex = (index - SWEEP_MAX_INDEX).toString();\n      }\n    }\n    this.validEndIndex = true;\n  }\n\n  maxIncomingChange(value) {\n    if (!this.util.string.isNumeric(value) || value % 1 !== 0) {\n      this.validMaxIncoming = false;\n      return;\n    } else {\n      value = parseInt(value, 10);\n      if (value > SWEEP_MAX_PENDING) {\n        this.validMaxIncoming = false;\n        return;\n      }\n    }\n\n    this.validMaxIncoming = true;\n  }\n\n  // Validate type of master key. Seed and private key can't be differentiated\n  checkMasterKey(key) {\n    // validate nano seed or private key\n    if (key.length === 64) {\n      if (nanocurrency.checkSeed(key)) {\n        return 'badem_seed';\n      }\n    }\n    // validate bip39 seed\n    if (key.length === 128) {\n      if (this.util.hex.isHex(key)) {\n        return 'bip39_seed';\n      }\n    }\n    // validate mnemonic\n    if (bip39.validateMnemonic(key)) {\n      return 'mnemonic';\n    }\n    return false;\n  }\n\n  // Append row to log output\n  appendLog(row) {\n    let linebreak = '\\n';\n    if (this.output === '') {\n      linebreak = '';\n    }\n    this.output = this.output + linebreak + row;\n    // scroll to bottom\n    this.logArea.nativeElement.scrollTop = this.logArea.nativeElement.scrollHeight;\n  }\n\n  // Process final send block\n  async processSend(privKey, previous, sendCallback) {\n    const pubKey = nanocurrency.derivePublicKey(privKey);\n    const address = nanocurrency.deriveAddress(pubKey, {useNanoPrefix: false});\n\n    // make an extra check on valid destination\n    if (this.validDestination && nanocurrency.checkAddress(this.destinationAccount)) {\n      this.appendLog('Transfer started: ' + address);\n      const work = await this.workPool.getWork(previous);\n      // create the block with the work found\n      const block = nanocurrency.createBlock(privKey, {balance: '0', representative: this.representative,\n      work: work, link: this.destinationAccount, previous: previous});\n      // replace badem with nano (old library)\n      block.block.account = block.block.account.replace('badem', 'badem');\n      block.block.link_as_account = block.block.link_as_account.replace('badem', 'badem');\n\n      // publish block for each iteration\n      const data = await this.api.process(block.block, TxType.send);\n      if (data.hash) {\n        const blockInfo = await this.api.blockInfo(data.hash);\n        let bademAmountSent = null;\n        if (blockInfo.amount) {\n          bademAmountSent = this.util.badem.rawToMbadem(blockInfo.amount);\n          this.totalSwept = this.util.big.add(this.totalSwept, bademAmountSent);\n        }\n        this.notificationService.sendInfo('Account ' + address + ' was swept and ' +\n        (bademAmountSent ? (bademAmountSent.toString(10) + ' Badem') : '') + ' transferred to ' + this.destinationAccount, {length: 15000});\n        this.appendLog('Funds transferred ' + (bademAmountSent ? ('(' + bademAmountSent.toString(10) + ' Badem)') : '') + ': ' + data.hash);\n        console.log(this.adjustedBalance + ' raw transferred to ' + this.destinationAccount);\n      } else {\n        this.notificationService.sendWarning(`Failed processing block.`);\n        this.appendLog('Failed processing block: ' + data.error);\n      }\n      sendCallback();\n    } else {\n      this.notificationService.sendError(`The destination address is not valid.`);\n      sendCallback();\n    }\n  }\n\n  // For each pending block\n  async processPending(blocks, keys, keyCount) {\n    const key = keys[keyCount];\n    this.blocks = blocks;\n    this.keys = keys;\n    this.keyCount = keyCount;\n    this.adjustedBalance = this.util.big.add(this.adjustedBalance, blocks[key].amount);\n\n    // generate local work\n    try {\n      this.appendLog('Started generating PoW...');\n\n      // determine input work hash depending if open block or receive block\n      let workInputHash = this.previous;\n      if (this.subType === 'open') {\n        // input hash is the opening address public key\n        workInputHash = this.pubKey;\n      }\n      const work = await this.workPool.getWork(workInputHash);\n      // create the block with the work found\n      const block = nanocurrency.createBlock(this.privKey, {balance: this.adjustedBalance, representative: this.representative,\n      work: work, link: key, previous: this.previous});\n      // replace badem with nano (old library)\n      block.block.account = block.block.account.replace('badem', 'badem');\n      block.block.link_as_account = block.block.link_as_account.replace('badem', 'badem');\n      // new previous\n      this.previous = block.hash;\n\n      // publish block for each iteration\n      const data = await this.api.process(block.block, this.subType === 'open' ? TxType.open : TxType.receive);\n      if (data.hash) {\n        this.appendLog('Processed pending: ' + data.hash);\n\n        // continue with the next pending\n        this.keyCount += 1;\n        if (this.keyCount < this.keys.length) {\n          // if last block was open, the next one will be a receive\n          if (this.subType === 'open') {\n            this.subType = 'receive';\n          }\n          this.processPending(this.blocks, this.keys, this.keyCount);\n        } else { // all pending done, now we process the final send block\n          this.appendLog('All pending processed!');\n          this.pendingCallback(this.previous);\n        }\n      } else {\n        this.notificationService.sendWarning(`Failed processing block`);\n        this.appendLog('Failed processing block: ' + data.error);\n      }\n    } catch (error) {\n      if (error.message === 'invalid_hash') {\n        this.notificationService.sendError(`Block hash must be 64 character hex string`);\n      } else {\n        this.notificationService.sendError(`An unknown error occurred while generating PoW`);\n        console.log('An unknown error occurred while generating PoW' + error);\n      }\n      this.sweeping = false;\n      return;\n    }\n  }\n\n  // Create pending blocks based on current balance and previous block (or start with an open block)\n  async createPendingBlocks(privKey, address, balance, previous, subType, callback, accountCallback) {\n    this.privKey = privKey;\n    this.previous = previous;\n    this.subType = subType;\n    this.pendingCallback = callback;\n    // check for pending first\n    let data = null;\n    if (this.appSettings.settings.minimumReceive) {\n      const minAmount = this.util.badem.mbademToRaw(this.appSettings.settings.minimumReceive).toString(10);\n      if (this.appSettings.settings.pendingOption === 'amount') {\n        data = await this.api.pendingLimitSorted(address, this.maxIncoming, minAmount);\n      } else {\n        data = await this.api.pendingLimit(address, this.maxIncoming, minAmount);\n      }\n\n    } else {\n      if (this.appSettings.settings.pendingOption === 'amount') {\n        data = await this.api.pendingSorted(address, this.maxIncoming);\n      } else {\n        data = await this.api.pending(address, this.maxIncoming);\n      }\n    }\n\n    // if there are any pending, process them\n    if (data.blocks) {\n      // sum all raw amounts\n      let raw = '0';\n      Object.keys(data.blocks).forEach(function(key) {\n        raw = this.util.big.add(raw, data.blocks[key].amount);\n      }.bind(this));\n      const bademAmount = this.util.badem.rawToMbadem(raw);\n      const pending = {count: Object.keys(data.blocks).length, raw: raw, BADEM: bademAmount, blocks: data.blocks};\n      const row = 'Found ' + pending.count + ' pending containing total ' + pending.BADEM + ' BADEM';\n      this.appendLog(row);\n\n      // create receive blocks for all pending\n      const keys = [];\n      // create an array with all keys to be used recurively\n      Object.keys(pending.blocks).forEach(function(key) {\n        keys.push(key);\n      });\n\n      this.processPending(pending.blocks, keys, 0);\n    } else { // no pending, create final block directly\n      if (parseInt(this.adjustedBalance, 10) > 0) {\n        this.processSend(this.privKey, this.previous, () => {\n          accountCallback(); // tell that we are ok to continue with next step\n        });\n      } else {\n        accountCallback(); // tell that we are ok to continue with next step\n      }\n    }\n  }\n\n  // Process an account\n  async processAccount(privKey, accountCallback) {\n    if (privKey.length !== 64) {\n      accountCallback();\n      return;\n    }\n\n    this.pubKey = nanocurrency.derivePublicKey(privKey);\n    const address = nanocurrency.deriveAddress(this.pubKey, {useNanoPrefix: false});\n\n    // get account info required to build the block\n    let balance = 0; // balance will be 0 if open block\n    this.adjustedBalance = balance.toString();\n    let previous = null; // previous is null if we create open block\n    this.representative = this.settings.settings.defaultRepresentative || this.bademBlock.getRandomRepresentative();\n    let subType = 'open';\n\n    // retrive from RPC\n    const accountInfo = await this.api.accountInfo(address);\n    let validResponse = false;\n    // if frontier is returned it means the account has been opened and we create a receive block\n    if (accountInfo.frontier) {\n      validResponse = true;\n      balance = accountInfo.balance;\n      this.adjustedBalance = balance.toString();\n      previous = accountInfo.frontier;\n      this.representative = accountInfo.representative;\n      subType = 'receive';\n      validResponse = true;\n    } else if (accountInfo.error === 'Account not found') {\n      validResponse = true;\n      this.adjustedBalance = '0';\n    }\n    if (validResponse) {\n      // create and publish all pending\n      this.createPendingBlocks(privKey, address, balance, previous, subType, function(previous_) {\n        // the previous is the last received block and will be used to create the final send block\n        if (parseInt(this.adjustedBalance, 10) > 0) {\n          this.processSend(privKey, previous_, () => {\n            accountCallback();\n          });\n        } else {\n          accountCallback();\n        }\n      }.bind(this), () => {\n        accountCallback();\n      });\n    } else {\n      this.notificationService.sendError(`Bad RPC response. Please try again.`);\n      accountCallback();\n    }\n  }\n\n  // Recursively process private keys from index range\n  async processIndexRecursive(privKeys, keyCount) {\n    // delay each process to not hit backend rate limiters\n    await this.sleep(300);\n    const privKey = privKeys[keyCount][0];\n    this.appendLog('Checking index ' + privKeys[keyCount][2] + ' using ' + privKeys[keyCount][1]);\n    this.processAccount(privKey, function() {\n      // continue with the next pending\n      keyCount += 1;\n      if (keyCount < privKeys.length) {\n        this.processIndexRecursive(privKeys, keyCount);\n      } else {\n        // all private keys have been processed\n        this.appendLog('Finished processing all accounts');\n        this.appendLog(this.totalSwept + ' Badem transferred');\n        this.notificationService.sendInfo('Finished processing all accounts. ' + this.totalSwept + ' Badem transferred', {length: 0});\n        this.sweeping = false;\n      }\n    }.bind(this));\n  }\n\n  async sweepContinue () {\n    this.sweeping = true;\n    this.totalSwept = '0';\n\n    const keyType = this.checkMasterKey(this.sourceWallet);\n    if (this.validEndIndex && this.validStartIndex && this.validMaxIncoming) {\n      let seed = '', privKey;\n      let bip39Seed = '';\n      // input is mnemonic\n      if (keyType === 'mnemonic') {\n        seed = bip39.mnemonicToEntropy(this.sourceWallet).toUpperCase();\n        bip39Seed = bip39.mnemonicToSeedSync(this.sourceWallet).toString('hex');\n        // Seed must be 64 for regular nano blake derivation to happen\n        // For other lengths, only bip39/44 derivation is possible\n        if (seed.length !== 32 && seed.length !== 40 && seed.length !== 48 && seed.length !== 56 && seed.length !== 64) {\n          this.notificationService.sendError(`Mnemonic not 12,15,18,21 or 24 words`);\n          return;\n        }\n      }\n\n      // nano seed or private key\n      if (keyType === 'badem_seed' || seed !== '' || keyType === 'bip39_seed') {\n        // check if a private key first (no index)\n        this.appendLog('Checking if input is a private key');\n        if (seed === '') { // seed from input, no mnemonic\n          seed = this.sourceWallet;\n        }\n        this.processAccount(seed, function() {\n          // done checking if private key, continue interpret as seed\n          const privKeys = [];\n          // start with blake2b derivation (but not if the mnemonic is anything other than 24 words)\n          if (keyType !== 'bip39_seed' && seed.length === 64) {\n            for (let i = parseInt(this.startIndex, 10); i <= parseInt(this.endIndex, 10); i++) {\n              privKey = nanocurrency.deriveSecretKey(seed, i);\n              privKeys.push([privKey, 'blake2b', i]);\n            }\n          }\n          // also check all indexes using bip39/44 derivation\n          // take 128 char bip39 seed directly from input or convert it from a 64 char nano seed (entropy)\n          if (keyType === 'bip39_seed') {\n            bip39Seed = this.sourceWallet;\n          } else if (seed.length === 64) {\n            bip39Seed = wallet.generate(seed).seed;\n          }\n\n          if (bip39Seed.length !== 128) return this.notificationService.sendError(`Invalid input format! Please check.`);\n          const accounts = wallet.accounts(bip39Seed, this.startIndex, this.endIndex);\n          let k = 0;\n          for (let i = parseInt(this.startIndex, 10); i <= parseInt(this.endIndex, 10); i++) {\n            privKey = accounts[k].privateKey;\n            k += 1;\n            privKeys.push([privKey, 'bip39/44', i]);\n          }\n          this.processIndexRecursive(privKeys, 0);\n        }.bind(this));\n      }\n\n    } else {\n      this.notificationService.sendError(`Invalid input format! Please check.`);\n    }\n  }\n\n  /* Start the sweeping */\n  async sweep() {\n    if (!this.validSeed) {\n      this.notificationService.sendError(`No valid source wallet provided!`);\n      return;\n    }\n    if (!this.validDestination) {\n      this.notificationService.sendError(`No valid destination account provided!`);\n      return;\n    }\n\n    if (this.validStartIndex && this.validEndIndex) {\n      if (parseInt(this.startIndex, 10) > parseInt(this.endIndex, 10)) {\n        this.notificationService.sendError(`End Index must be equal or larger than Start Index`);\n        return;\n      }\n    } else {\n      this.notificationService.sendError(`Not valid start and end indexes`);\n      return;\n    }\n\n    if (!this.validMaxIncoming) {\n      this.notificationService.sendError(`Not a valid number for Max Incoming`);\n      return;\n    }\n\n    // let user confirm account\n    const UIkit = window['UIkit'];\n    try {\n      await UIkit.modal.confirm('<p style=\"text-align: center;\">You are about to <b>empty the source wallet</b>.<br> \\\n      Be sure to have access to the destination account, as in having the corresponding seed.<br><br> \\\n      <b>Without the destination seed - ALL FUNDS MAY BE UNRECOVERABLE</b></p>');\n      this.sweepContinue();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","<div class=\"uk-animation-slide-left-small\" uk-grid>\n  <div class=\"uk-width-1-1\">\n    <h2 class=\"uk-heading-divider\">Transaction Details</h2>\n\n    <div class=\"uk-alert uk-alert-primary\" *ngIf=\"!transaction\">\n      Unable to load the transaction, double check that the hash is correct and try again!\n    </div>\n\n    <div class=\"uk-width-1-1\" *ngIf=\"transaction\">\n      <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" *ngIf=\"blockType !== 'change'\">\n        <span style=\"display: block; padding-top: 8px;\">\n          <span *ngIf=\"blockType == 'send'\">Send</span>\n          <span *ngIf=\"blockType == 'open'\">Receive</span>\n          <span *ngIf=\"blockType == 'receive'\">Receive</span>\n        </span>\n        <span style=\"display:block; font-size: 32px;\">{{ transaction?.amount | badem: settings.settings.displayDenomination }}</span>\n        <span *ngIf=\"amountRaw.gt(0)\" style=\"display:block; font-size: 12px;\">+{{ amountRaw.toString(10) }} raw</span>\n      </div>\n      <div class=\"uk-card uk-card-default uk-width-1-1 uk-text-center\" *ngIf=\"blockType == 'change'\">\n        <span style=\"display:block; font-size: 32px;\">Change Representative</span>\n      </div>\n      <br>\n      <div uk-grid>\n        <div class=\"uk-width-1-2@s\">\n          <div class=\"uk-card uk-card-default\">\n\n            <div class=\"uk-text-truncate\" style=\"padding: 20px 20px;\">\n\n              <span class=\"confirm-title\">\n                <a [routerLink]=\"'/account/' + fromAccountID\" class=\"uk-link-reset\" uk-tooltip title=\"View Account Details\">\n                  <span class=\"uk-label\" *ngIf=\"fromAddressBook\">{{ fromAddressBook }}</span> {{ fromAccountID }}\n                </a>\n              </span>\n              <span class=\"confirm-subtitle\" *ngIf=\"blockType != 'change'\">From Account</span>\n              <span class=\"confirm-subtitle\" *ngIf=\"blockType == 'change'\">Account</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"uk-width-1-2@s\">\n          <div class=\"uk-card uk-card-default\">\n            <div class=\"uk-text-truncate\" style=\"padding: 20px 20px;\">\n              <span class=\"confirm-title\">\n                <a [routerLink]=\"'/account/' + toAccountID\" class=\"uk-link-reset\" uk-tooltip title=\"View Account Details\">\n                  <span class=\"uk-label\" *ngIf=\"toAddressBook\">{{ toAddressBook }}</span> {{ toAccountID }}\n                </a>\n              </span>\n              <span class=\"confirm-subtitle\" *ngIf=\"blockType != 'change'\">To Account</span>\n              <span class=\"confirm-subtitle\" *ngIf=\"blockType == 'change'\">New Representative</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"transaction\">\n      <div class=\"uk-card-body uk-padding-small uk-form-horizontal\">\n\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\">Block:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            {{ hashID }}\n          </div>\n        </div>\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\">Type:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            {{ transaction?.contents?.type }}\n          </div>\n        </div>\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\">Date:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <span *ngIf=\"transaction.local_timestamp\">{{ transaction?.local_timestamp * 1000 | date: 'yyyy-MM-dd HH:mm' }}</span>\n            <span *ngIf=\"!transaction.local_timestamp\" class=\"uk-text-muted\">N/A</span>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.balance\">\n          <label class=\"uk-form-label\">Balance:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            {{ (isStateBlock ? getBalanceFromDec(transaction?.contents?.balance) : getBalanceFromHex(transaction?.contents?.balance)) | badem: settings.settings.displayDenomination }}<br>\n            <span class=\"uk-text-small\">{{ transaction?.contents?.balance }}</span>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.representative\">\n          <label class=\"uk-form-label\">Representative:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/account/' + transaction?.contents?.representative\" class=\"uk-link-text\" uk-tooltip title=\"View Account Details\">{{ transaction?.contents?.representative }}</a>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.previous\">\n          <label class=\"uk-form-label\">Previous:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/transaction/' + transaction?.contents?.previous\" class=\"uk-link-text\" uk-tooltip title=\"View Block Details\">{{ transaction?.contents?.previous }}</a>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.source\">\n          <label class=\"uk-form-label\">Source:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/transaction/' + transaction?.contents?.source\" class=\"uk-link-text\" uk-tooltip title=\"View Block Details\">{{ transaction?.contents?.source }}</a>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.link && blockType == 'receive'\">\n          <label class=\"uk-form-label\">Link (Source):</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/transaction/' + transaction?.contents?.link\" class=\"uk-link-text\" uk-tooltip title=\"View Block Details\">{{ transaction?.contents?.link }}</a>\n          </div>\n        </div>\n        <div class=\"uk-margin\" *ngIf=\"transaction?.contents?.link_as_account && blockType == 'send'\">\n          <label class=\"uk-form-label\">Link (Destination):</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            <a [routerLink]=\"'/account/' + transaction?.contents?.link_as_account\" class=\"uk-link-text\" uk-tooltip title=\"View Account Details\">{{ transaction?.contents?.link_as_account }}</a>\n          </div>\n        </div>\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\">Work:</label>\n          <div class=\"uk-form-controls uk-text-truncate\">\n            {{ transaction?.contents?.work }}\n          </div>\n        </div>\n        <div class=\"uk-margin\">\n          <label class=\"uk-form-label\">Signature:</label>\n          <div class=\"uk-form-controls uk-text-small uk-text-truncate\">\n            {{ transaction?.contents?.signature }}\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n    <div uk-grid>\n      <div class=\"uk-width-1-1 uk-text-center\">\n        <a (click)=\"showBlockData = !showBlockData\" class=\"uk-link-text\">{{ showBlockData ? 'Hide' : 'Show' }} Block Data</a>\n      </div>\n    </div>\n\n    <div class=\"uk-card uk-card-default uk-margin\" *ngIf=\"transaction && transactionJSON && showBlockData\">\n      <div class=\"uk-card-header\">\n        Raw Block Data\n      </div>\n      <div class=\"uk-card-body uk-padding-small uk-form-horizontal\">\n        <pre><code>{{ transactionJSON }}</code></pre>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, ChildActivationEnd, Router} from '@angular/router';\nimport {ApiService} from '../../services/api.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\nimport BigNumber from 'bignumber.js';\nimport {AddressBookService} from '../../services/address-book.service';\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.css']\n})\nexport class TransactionDetailsComponent implements OnInit {\n  badem = 100;\n\n  routerSub = null;\n  transaction: any = {};\n  hashID = '';\n  blockType = 'send';\n  isStateBlock = true;\n\n  toAccountID = '';\n  fromAccountID = '';\n  toAddressBook = '';\n  fromAddressBook = '';\n\n  transactionJSON = '';\n  showBlockData = false;\n\n  amountRaw = new BigNumber(0);\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private addressBook: AddressBookService,\n              private api: ApiService,\n              public settings: AppSettingsService\n  ) { }\n\n  async ngOnInit() {\n    this.routerSub = this.router.events.subscribe(event => {\n      if (event instanceof ChildActivationEnd) {\n        this.loadTransaction(); // Reload the state when navigating to itself from the transactions page\n      }\n    });\n\n    await this.loadTransaction();\n  }\n\n  async loadTransaction() {\n    this.toAccountID = '';\n    this.fromAccountID = '';\n    this.toAddressBook = '';\n    this.fromAddressBook = '';\n    this.transactionJSON = '';\n    this.showBlockData = false;\n    let legacyFromAccount = '';\n    this.amountRaw = new BigNumber(0);\n    const hash = this.route.snapshot.params.transaction;\n    this.hashID = hash;\n    const blockData = await this.api.blocksInfo([hash]);\n    if (!blockData || blockData.error || !blockData.blocks[hash]) {\n      this.transaction = null;\n      return;\n    }\n    const hashData = blockData.blocks[hash];\n    const hashContents = JSON.parse(hashData.contents);\n    hashData.contents = hashContents;\n\n    this.transactionJSON = JSON.stringify(hashData.contents, null , 4);\n\n    this.blockType = hashData.contents.type;\n    if (this.blockType === 'state') {\n      const isOpen = hashData.contents.previous === '0000000000000000000000000000000000000000000000000000000000000000';\n      if (isOpen) {\n        this.blockType = 'open';\n      } else {\n        const prevRes = await this.api.blocksInfo([hashData.contents.previous]);\n        const prevData = prevRes.blocks[hashData.contents.previous];\n        prevData.contents = JSON.parse(prevData.contents);\n        if (!prevData.contents.balance) {\n          // Previous block is not a state block.\n          this.blockType = prevData.contents.type;\n          legacyFromAccount = prevData.source_account;\n        } else {\n          const prevBalance = new BigNumber(prevData.contents.balance);\n          const curBalance = new BigNumber(hashData.contents.balance);\n          const balDifference = curBalance.minus(prevBalance);\n          if (balDifference.isNegative()) {\n            this.blockType = 'send';\n          } else if (balDifference.isZero()) {\n            this.blockType = 'change';\n          } else {\n            this.blockType = 'receive';\n          }\n        }\n      }\n    } else {\n      this.isStateBlock = false;\n    }\n    if (hashData.amount) {\n      this.amountRaw = new BigNumber(hashData.amount).mod(this.badem);\n    }\n\n    this.transaction = hashData;\n\n    let fromAccount = '';\n    let toAccount = '';\n    switch (this.blockType) {\n      case 'send':\n        fromAccount = this.transaction.block_account;\n        toAccount = this.transaction.contents.destination || this.transaction.contents.link_as_account;\n        break;\n      case 'open':\n      case 'receive':\n        fromAccount = this.transaction.source_account;\n        toAccount = this.transaction.block_account;\n        break;\n      case 'change':\n        fromAccount = this.transaction.block_account;\n        toAccount = this.transaction.contents.representative;\n        break;\n    }\n\n    if (legacyFromAccount) {\n      fromAccount = legacyFromAccount;\n    }\n\n    this.toAccountID = toAccount;\n    this.fromAccountID = fromAccount;\n\n    this.fromAddressBook = this.addressBook.getAccountName(fromAccount);\n    this.toAddressBook = this.addressBook.getAccountName(toAccount);\n\n  }\n\n  getBalanceFromHex(balance) {\n    return new BigNumber(balance, 16);\n  }\n\n  getBalanceFromDec(balance) {\n    return new BigNumber(balance, 10);\n  }\n\n}\n","<div *ngIf=\"walletService.isLedgerWallet()\">\n  <div class=\"nav-status-row\" *ngIf=\"ledgerStatus === 'not-connected' || !ledgerStatus\">\n    <div class=\"status-icon\">\n      <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary uk-text-warning\">Ledger disconnected</div>\n      <div class=\"label secondary\"><a (click)=\"reloadLedger()\">Click here</a> to reconnect</div>\n    </div>\n  </div>\n  <div class=\"nav-status-row\" *ngIf=\"( ledgerStatus === 'locked' )\">\n    <div class=\"status-icon\">\n      <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary uk-text-warning\">Ledger app was closed</div>\n      <div class=\"label secondary\"><a (click)=\"reloadLedger()\">Click here</a> to reconnect</div>\n    </div>\n  </div>\n  <div class=\"nav-status-row interactable\" (click)=\"reloadLedger()\" *ngIf=\"( ledgerStatus === 'ready' )\">\n    <div class=\"status-icon\">\n      <span class=\"uk-text-success\" uk-icon=\"icon: bolt; ratio: 1.2;\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary uk-text-success\">Ledger Ready</div>\n    </div>\n  </div>\n</div>\n\n<ng-container *ngIf=\"walletService.isConfigured() && !walletService.isLedgerWallet()\">\n  <div class=\"nav-status-row half-muted interactable\" (click)=\"modal.show()\" *ngIf=\"walletService.isLocked()\">\n    <div class=\"status-icon\">\n      <span uk-icon=\"icon: lock; ratio: 1.2;\" class=\"uk-text-top\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary half-muted\">Wallet Locked</div>\n    </div>\n  </div>\n  <div class=\"nav-status-row half-muted interactable\" (click)=\"lockWallet()\" *ngIf=\"!walletService.isLocked()\">\n    <div class=\"status-icon\">\n      <span uk-icon=\"icon: unlock; ratio: 1.2;\" class=\"uk-text-top\"></span>\n    </div>\n    <div class=\"status-labels\">\n      <div class=\"label primary half-muted\">Wallet Unlocked</div>\n    </div>\n  </div>\n</ng-container>\n\n<a routerLink=\"/configure-wallet\" class=\"nav-status-row interactable\" *ngIf=\"!walletService.isConfigured()\">\n  <div class=\"status-icon\">\n    <span class=\"uk-text-warning\" uk-icon=\"icon: warning; ratio: 1.2;\"></span>\n  </div>\n  <div class=\"status-labels\">\n    <div class=\"label primary uk-text-warning\">Configure Wallet</div>\n  </div>\n</a>\n\n<div id=\"unlock-wallet-modal\" uk-modal>\n  <div class=\"uk-modal-dialog\">\n    <button class=\"uk-modal-close-default\" type=\"button\" uk-close></button>\n    <div class=\"uk-modal-header\">\n      <h2 class=\"uk-modal-title\">Unlock Wallet</h2>\n    </div>\n    <div class=\"uk-modal-body\">\n      <input autofocus type=\"password\" [(ngModel)]=\"unlockPassword\" (keyup.enter)=\"unlockWallet()\" class=\"uk-input\" placeholder=\"Enter wallet password\">\n    </div>\n    <div class=\"uk-modal-footer uk-text-right nlt-button-group\">\n      <button class=\"uk-button uk-button-default uk-modal-close\" type=\"button\">Cancel</button>\n      <button class=\"uk-button uk-button-primary\" type=\"button\" (click)=\"unlockWallet()\">Unlock</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService} from '../../services/wallet.service';\nimport {NotificationService} from '../../services/notification.service';\nimport {LedgerService} from '../../services/ledger.service';\nimport {AppSettingsService} from '../../services/app-settings.service';\n\n@Component({\n  selector: 'app-wallet-widget',\n  templateUrl: './wallet-widget.component.html',\n  styleUrls: ['./wallet-widget.component.css']\n})\nexport class WalletWidgetComponent implements OnInit {\n  wallet = this.walletService.wallet;\n\n  ledgerStatus = 'not-connected';\n\n  unlockPassword = '';\n\n  modal: any = null;\n\n  constructor(\n    public walletService: WalletService,\n    private notificationService: NotificationService,\n    public ledgerService: LedgerService,\n    public settings: AppSettingsService) { }\n\n  ngOnInit() {\n    const UIkit = (window as any).UIkit;\n    const modal = UIkit.modal(document.getElementById('unlock-wallet-modal'));\n    this.modal = modal;\n\n    this.ledgerService.ledgerStatus$.subscribe((ledgerStatus: any) => {\n      this.ledgerStatus = ledgerStatus.status;\n    });\n  }\n\n  async lockWallet() {\n    if (this.wallet.type === 'ledger') {\n      return; // No need to lock a ledger wallet, no password saved\n    }\n    if (!this.wallet.password) {\n      return this.notificationService.sendWarning(`You must set a password on your wallet - it is currently blank!`);\n    }\n    const locked = await this.walletService.lockWallet();\n    if (locked) {\n      this.notificationService.sendSuccess(`Wallet locked`);\n    } else {\n      this.notificationService.sendError(`Unable to lock wallet`);\n    }\n  }\n\n  async reloadLedger() {\n    this.notificationService.sendInfo(`Checking Ledger Status...`, { identifier: 'ledger-status', length: 0 });\n    try {\n      const loaded = await this.ledgerService.loadLedger();\n      this.notificationService.removeNotification('ledger-status');\n      if (loaded) {\n        this.notificationService.sendSuccess(`Successfully connected to Ledger device`);\n      } else if (loaded === false) {\n        this.notificationService.sendError(`Unable to connect to Ledger device`);\n      }\n    } catch (err) {\n      console.log(`Got error when loading ledger! `, err);\n      this.notificationService.removeNotification('ledger-status');\n      // this.notificationService.sendError(`Unable to load Ledger Device: ${err.message}`);\n    }\n  }\n\n  async unlockWallet() {\n    await new Promise(resolve => setTimeout(resolve, 500)); // brute force delay\n    const unlocked = await this.walletService.unlockWallet(this.unlockPassword);\n\n    if (unlocked) {\n      this.notificationService.sendSuccess(`Wallet unlocked`);\n      this.modal.hide();\n      if (this.unlockPassword.length < 6) {\n        // tslint:disable-next-line: max-line-length\n        this.notificationService.sendWarning(`You are using an insecure password and encouraged to change it from settings > manage wallet`);\n      }\n    } else {\n      this.notificationService.sendError(`Invalid password, please try again!`);\n    }\n\n    this.unlockPassword = '';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {UtilService} from '../services/util.service';\nimport {AppSettingsService} from '../services/app-settings.service';\n\n@Pipe({\n  name: 'account'\n})\nexport class AccountPipe implements PipeTransform {\n\n  constructor(private util: UtilService, private settings: AppSettingsService) {\n\n  }\n\n  transform(value: any, args?: any): any {\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'amountsplit'\n})\nexport class AmountSplitPipe implements PipeTransform {\n  transform(input: string, idx: number): string {\n    const splitAmount = input.split('.')[idx];\n\n    if (idx === 0) {\n      // Integer\n      return splitAmount.replace('BTC ', '');\n    }\n\n    // Fractional\n\n    if (splitAmount == null) {\n      return '';\n    }\n\n    return ( '.' + splitAmount );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {CurrencyPipe} from '@angular/common';\n\n@Pipe({\n  name: 'currencySymbol'\n})\nexport class CurrencySymbolPipe extends CurrencyPipe implements PipeTransform {\n\n  // This pipe simply shows the currency symbol ($, BTC, etc) and removes any numeric values\n  transform(value: any, args?: any): any {\n    const currency = super.transform(0, value, 'symbol', '1.0-2');\n    return currency.replace(/[0-9]/g, '');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {CurrencyPipe} from '@angular/common';\nimport {BigNumber} from 'bignumber.js';\n\n@Pipe({\n  name: 'fiat'\n})\nexport class FiatPipe extends CurrencyPipe implements PipeTransform {\n  transform(value: any, currencyCode?: string, display?:\n    'code' | 'symbol' | 'symbol-narrow' | string | boolean, digits?: string, locale?: string): any {\n    if (currencyCode === '') {\n      return ``;\n    }\n    if (currencyCode === 'BTC') {\n      return `BTC ${new BigNumber(Number(value).toFixed(4) || 0).toFixed(6)}`;\n    }\n    return super.transform(value, currencyCode, 'symbol-narrow', digits, locale);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'badem'\n})\nexport class RaiPipe implements PipeTransform {\n  precision = 6;\n\n  mbadem = 100;\n  kbadem = 100;\n  badem  = 1;\n\n  transform(value: any, args?: any): any {\n    const opts = args.split(',');\n    const denomination = opts[0] || 'mbadem';\n    const hideText = opts[1] || false;\n\n    switch (denomination.toLowerCase()) {\n      default:\n      case 'badem': return `${(value / this.mbadem).toFixed(6)}${!hideText ? ' BADEM' : ''}`;\n      case 'mbadem':\n        const hasRawValue = (value / this.badem) % 1;\n        if (hasRawValue) {\n          // New more precise toFixed function, but bugs on huge raw numbers\n          const newVal = value / this.mbadem < 0.000001 ? 0 : value / this.mbadem;\n          return `${this.toFixed(newVal, this.precision)}${!hideText ? ' BADEM' : ''}`;\n        } else {\n          return `${(value / this.mbadem).toFixed(6)}${!hideText ? ' BADEM' : ''}`;\n        }\n      case 'kbadem': return `${(value / this.kbadem).toFixed(3)}${!hideText ? ' kbadem' : ''}`;\n      case 'badem': return `${(value / this.badem).toFixed(0)}${!hideText ? ' badem' : ''}`;\n      case 'raw': return `${value}${!hideText ? ' raw' : ''}`;\n      case 'dynamic':\n        const badem = (value / this.badem);\n        if (badem >= 1000000) {\n          return `${(value / this.mbadem).toFixed(this.precision)}${!hideText ? ' mBadem' : ''}`;\n        } else if (badem >= 1000) {\n          return `${(value / this.kbadem).toFixed(this.precision)}${!hideText ? ' kBadem' : ''}`;\n        } else if (badem >= 0.00001) {\n          return `${(value / this.badem).toFixed(this.precision)}${!hideText ? ' Badem' : ''}`;\n        } else if (badem === 0) {\n          return `${value}${!hideText ? ' mBadem' : ''}`;\n        } else {\n          return `${value}${!hideText ? ' badem' : ''}`;\n        }\n    }\n  }\n\n  toFixed(num, fixed) {\n    if (isNaN(num)) {\n      return 0;\n    }\n    const re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n    return num.toString().match(re)[0];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'squeeze'\n})\nexport class SqueezePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const arg = args ? args.split(',') || [] : [];\n    const openingChars = arg[0] || 9;\n    const closingChars = arg[1] || 5;\n    const firstChars = value.split('').slice(0, openingChars).join('');\n    const lastChars = value.split('').slice(-closingChars).join('');\n    return `${firstChars}...${lastChars}`;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n\ninterface AddressBookEntry {\n  account: string;\n  name: string;\n}\n\n\n@Injectable()\nexport class AddressBookService {\n  storeKey = `nanovault-addressbook`;\n\n  addressBook: AddressBookEntry[] = [];\n\n  addressBook$ = new BehaviorSubject([]);\n\n  constructor() { }\n\n  loadAddressBook() {\n    let addressBook = [];\n    const addressBookStore = localStorage.getItem(this.storeKey);\n    if (addressBookStore) {\n      addressBook = JSON.parse(addressBookStore);\n    }\n    this.addressBook = addressBook;\n    this.addressBook$.next(this.addressBook);\n\n    return this.addressBook;\n  }\n\n  async saveAddress(account, name) {\n    const existingName = this.addressBook.find(a => a.name.toLowerCase() === name.toLowerCase());\n    if (existingName) throw new Error(`Name already exists in the address book`);\n\n    const existingAccount = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n    if (existingAccount) {\n      existingAccount.name = name;\n    } else {\n      this.addressBook.push({ account, name });\n    }\n    this.saveAddressBook();\n    this.addressBook$.next(this.addressBook);\n\n  }\n\n  deleteAddress(account) {\n    const existingAccountIndex = this.addressBook.findIndex(a => a.account.toLowerCase() === account.toLowerCase());\n    if (existingAccountIndex === -1) return;\n\n    this.addressBook.splice(existingAccountIndex, 1);\n\n    this.saveAddressBook();\n\n    this.addressBook$.next(this.addressBook);\n  }\n\n  saveAddressBook(): void {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.addressBook));\n  }\n\n  clearAddressBook(): void {\n    this.addressBook = [];\n    this.addressBook$.next(this.addressBook);\n    localStorage.removeItem(this.storeKey);\n  }\n\n  setAddressBookOrder(addressList) {\n    this.addressBook = addressList\n      .map(address => ({\n        account: address,\n        name: this.getAccountName(address)\n      }))\n      .filter(entry => entry.name !== null);\n\n    this.saveAddressBook();\n    this.addressBook$.next(this.addressBook);\n  }\n\n  getAccountName(account: string): string|null {\n    if (!account || !account.length) return null;\n    const match = this.addressBook.find(a => a.account.toLowerCase() === account.toLowerCase());\n    return match && match.name || null;\n  }\n\n  nameExists(name: string): boolean {\n    return this.addressBook.findIndex(a => a.name.toLowerCase() === name.toLowerCase()) !== -1;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {HttpHeaders} from '@angular/common/http';\nimport {NodeService} from './node.service';\nimport {AppSettingsService} from './app-settings.service';\nimport { TxType } from './util.service';\n\n@Injectable()\nexport class ApiService {\n  constructor(private http: HttpClient, private node: NodeService, private appSettings: AppSettingsService) { }\n\n  private async request(action, data, skipError= false): Promise<any> {\n    data.action = action;\n    const apiUrl = this.appSettings.settings.serverAPI;\n    if (!apiUrl) {\n      this.node.setOffline(null); // offline mode\n      return;\n    }\n    if (this.node.node.status === false) {\n      if (!skipError) {\n        this.node.setLoading();\n      }\n    }\n    let header;\n    if (this.appSettings.settings.serverAuth != null && this.appSettings.settings.serverAuth !== '') {\n      header = {\n        headers: new HttpHeaders()\n          .set('Authorization',  this.appSettings.settings.serverAuth)\n      };\n    }\n    return await this.http.post(apiUrl, data, header).toPromise()\n      .then(res => {\n        this.node.setOnline();\n        return res;\n      })\n      .catch(err => {\n        if (skipError) return;\n        if (err.status === 500 || err.status === 0) {\n          this.node.setOffline(); // Hard error, node is offline\n          throw err;\n        } else if (err.status === 429) {\n          if (this.appSettings.settings.serverName === 'random') {\n            console.log('Too many requests, new backend...');\n            this.appSettings.loadServerSettings();\n            return this.request(action, data);\n          } else {\n            this.node.setOffline('Too Many Requests to the node. Try again later or choose a different node.');\n          }\n        }\n      });\n  }\n\n  async accountsBalances(accounts: string[]): Promise<{balances: any }> {\n    return await this.request('accounts_balances', { accounts });\n  }\n  async accountsFrontiers(accounts: string[]): Promise<{frontiers: any }> {\n    return await this.request('accounts_frontiers', { accounts });\n  }\n  async accountsPending(accounts: string[], count: number = 50): Promise<{blocks: any }> {\n    return await this.request('accounts_pending', { accounts, count, source: true, include_only_confirmed: true });\n  }\n  async accountsPendingLimit(accounts: string[], threshold: string, count: number = 50): Promise<{blocks: any }> {\n    return await this.request('accounts_pending', { accounts, count, threshold, source: true, include_only_confirmed: true });\n  }\n  async delegatorsCount(account: string): Promise<{ count: string }> {\n    return await this.request('delegators_count', { account });\n  }\n  async representativesOnline(): Promise<{ representatives: any }> {\n    return await this.request('representatives_online', { });\n  }\n\n  async blocksInfo(blocks): Promise<{blocks: any, error?: string}> {\n    return await this.request('blocks_info', { hashes: blocks, pending: true, source: true });\n  }\n  async blockInfo(hash): Promise<any> {\n    return await this.request('block_info', { hash: hash });\n  }\n  async blockCount(): Promise<{count: number, unchecked: number, cemented: number }> {\n    return await this.request('block_count', { include_cemented: 'true'});\n  }\n  async workGenerate(hash): Promise<{ work: string }> {\n    return await this.request('work_generate', { hash });\n  }\n  async process(block, subtype: TxType): Promise<{ hash: string, error?: string }> {\n    return await this.request('process', { block: JSON.stringify(block), watch_work: 'false', subtype: TxType[subtype] });\n  }\n  async accountHistory(account, count = 25, raw = false): Promise<{history: any }> {\n    return await this.request('account_history', { account, count, raw });\n  }\n  async accountInfo(account): Promise<any> {\n    return await this.request('account_info', { account, pending: true, representative: true, weight: true });\n  }\n  async pending(account, count): Promise<any> {\n    return await this.request('pending', { account, count, source: true, include_only_confirmed: true });\n  }\n  async pendingLimit(account, count, threshold): Promise<any> {\n    return await this.request('pending', { account, count, threshold, source: true, include_only_confirmed: true });\n  }\n  async pendingSorted(account, count): Promise<any> {\n    return await this.request('pending', { account, count, source: true, include_only_confirmed: true, sorting: true });\n  }\n  async pendingLimitSorted(account, count, threshold): Promise<any> {\n    return await this.request('pending', { account, count, threshold, source: true, include_only_confirmed: true, sorting: true });\n  }\n  async version(): Promise<{rpc_version: number, store_version: number, protocol_version: number, node_vendor: string, network: string,\n    network_identifier: string, build_info: string }> {\n    return await this.request('version', { }, true);\n  }\n  async confirmationQuorum(): Promise<{quorum_delta: string, online_weight_quorum_percent: number, online_weight_minimum: string,\n    online_stake_total: string, peers_stake_total: string, peers_stake_required: string }> {\n    return await this.request('confirmation_quorum', { }, true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as url from 'url';\n\nexport type WalletStore = 'localStorage'|'none';\nexport type PoWSource = 'server'|'clientCPU'|'clientWebGL'|'best';\n\ninterface AppSettings {\n  displayDenomination: string;\n  // displayPrefix: string | null;\n  walletStore: string;\n  displayCurrency: string;\n  defaultRepresentative: string | null;\n  lockOnClose: number;\n  lockInactivityMinutes: number;\n  powSource: PoWSource;\n  pendingOption: string;\n  serverName: string;\n  serverAPI: string | null;\n  serverWS: string | null;\n  serverAuth: string | null;\n  minimumReceive: string | null;\n  walletVersion: number | null;\n}\n\n@Injectable()\nexport class AppSettingsService {\n  storeKey = `nanovault-appsettings`;\n\n  settings: AppSettings = {\n    displayDenomination: 'mbadem',\n    // displayPrefix: 'badem',\n    walletStore: 'localStorage',\n    displayCurrency: '',\n    defaultRepresentative: null,\n    lockOnClose: 1,\n    lockInactivityMinutes: 30,\n    powSource: 'best',\n    pendingOption: 'amount',\n    serverName: 'random',\n    serverAPI: null,\n    serverWS: null,\n    serverAuth: null,\n    minimumReceive: null,\n    walletVersion: 1\n  };\n\n  serverOptions = [\n    {\n      name: 'Random',\n      value: 'random',\n      api: null,\n      ws: null,\n      auth: null,\n      shouldRandom: false,\n    },\n    {\n      name: 'Badem API 1',\n      value: 'badem',\n      api: 'https://badem-api.badem.io/proxy',\n      ws: 'wss://badem-ws.badem.io',\n      auth: null,\n      shouldRandom: true,\n    },\n    {\n      name: 'Badem API 2',\n      value: 'badem',\n      api: 'https://badem-api-2.badem.io/proxy',\n      ws: 'wss://badem-ws-2.badem.io',\n      auth: null,\n      shouldRandom: true,\n    },\n    {\n      name: 'Badem API 3',\n      value: 'badem',\n      api: 'https://badem-api-3.badem.io/proxy',\n      ws: 'wss://badem-ws-3.badem.io',\n      auth: null,\n      shouldRandom: true,\n    },\n    {\n      name: 'Custom',\n      value: 'custom',\n      api: null,\n      ws: null,\n      auth: null,\n      shouldRandom: false,\n    },\n    {\n      name: 'Offline Mode',\n      value: 'offline',\n      api: null,\n      ws: null,\n      auth: null,\n      shouldRandom: false,\n    }\n  ];\n\n  constructor() { }\n\n  loadAppSettings() {\n    let settings: AppSettings = this.settings;\n    const settingsStore = localStorage.getItem(this.storeKey);\n    if (settingsStore) {\n      settings = JSON.parse(settingsStore);\n    }\n    this.settings = Object.assign(this.settings, settings);\n\n    this.loadServerSettings();\n\n    return this.settings;\n  }\n\n  loadServerSettings() {\n    const matchingServerOption = this.serverOptions.find(d => d.value === this.settings.serverName);\n\n    if (this.settings.serverName === 'random' || !matchingServerOption) {\n      const availableServers = this.serverOptions.filter(server => server.shouldRandom);\n      const randomServerOption = availableServers[Math.floor(Math.random() * availableServers.length)];\n      console.log('SETTINGS: Random', randomServerOption);\n\n      this.settings.serverAPI = randomServerOption.api;\n      this.settings.serverWS = randomServerOption.ws;\n    } else if (this.settings.serverName === 'custom') {\n      console.log('SETTINGS: Custom');\n    } else if (this.settings.serverName === 'offline') {\n      console.log('SETTINGS: Offline Mode');\n      this.settings.serverName = matchingServerOption.value;\n      this.settings.serverAPI = matchingServerOption.api;\n      this.settings.serverWS = matchingServerOption.ws;\n    } else {\n      console.log('SETTINGS: Found', matchingServerOption);\n      this.settings.serverName = matchingServerOption.value;\n      this.settings.serverAPI = matchingServerOption.api;\n      this.settings.serverWS = matchingServerOption.ws;\n    }\n  }\n\n  saveAppSettings() {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.settings));\n  }\n\n  getAppSetting(key) {\n    return this.settings[key] || null;\n  }\n\n  setAppSetting(key, value) {\n    this.settings[key] = value;\n    this.saveAppSettings();\n  }\n\n  setAppSettings(settingsObject) {\n    for (const key in settingsObject) {\n      if (!settingsObject.hasOwnProperty(key)) continue;\n      this.settings[key] = settingsObject[key];\n    }\n\n    this.saveAppSettings();\n  }\n\n  clearAppSettings() {\n    localStorage.removeItem(this.storeKey);\n    this.settings = {\n      displayDenomination: 'mbadem',\n      // displayPrefix: 'badem',\n      walletStore: 'localStorage',\n      displayCurrency: '',\n      defaultRepresentative: null,\n      lockOnClose: 1,\n      lockInactivityMinutes: 30,\n      powSource: 'best',\n      pendingOption: 'amount',\n      serverName: 'random',\n      serverAPI: null,\n      serverWS: null,\n      serverAuth: null,\n      minimumReceive: null,\n      walletVersion: 1,\n    };\n  }\n\n  // Get the base URL part of the serverAPI, e.g. https://nanovault.io from https://nanovault.io/api/node-api.\n  getServerApiBaseUrl(): string {\n    const u = url.parse(this.settings.serverAPI);\n    u.pathname = '/';\n    return url.format(u);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {NotificationService} from './notification.service';\nimport { IpcRenderer } from 'electron';\n\n@Injectable()\nexport class DesktopService {\n\n  private _ipc: IpcRenderer | undefined;\n\n  constructor(private notifications: NotificationService) {\n    if (window.require) {\n      try {\n        this._ipc = window.require('electron').ipcRenderer;\n        console.log('IPC loaded');\n      } catch (e) {\n        throw e;\n      }\n    }\n  }\n\n  connect() {\n  }\n\n  on(channel: string, listener) {\n    if (!this._ipc) return false;\n    this._ipc.on(channel, listener);\n    return true;\n  }\n\n  send(channel: string, ...args) {\n    if (!this._ipc) return false;\n    this._ipc.send(channel, ...args);\n    return true;\n  }\n\n}\n","export * from './address-book.service';\nexport * from './api.service';\nexport * from './app-settings.service';\nexport * from './desktop.service';\nexport * from './ledger.service';\nexport * from './modal.service';\nexport * from './nano-block.service';\nexport * from './node.service';\nexport * from './notification.service';\nexport * from './pow.service';\nexport * from './price.service';\nexport * from './representative.service';\nexport * from './util.service';\nexport * from './wallet.service';\nexport * from './websocket.service';\nexport * from './work-pool.service';\n","import { Injectable } from '@angular/core';\nimport Nano from 'hw-app-nano';\nimport TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport {Subject} from 'rxjs';\nimport {ApiService} from './api.service';\nimport {NotificationService} from './notification.service';\nimport { environment } from '../../environments/environment';\nimport {DesktopService} from './desktop.service';\n\nexport const STATUS_CODES = {\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  INVALID_SIGNATURE: 0x6a81,\n  CACHE_MISS: 0x6a82\n};\n\nexport const LedgerStatus = {\n  NOT_CONNECTED: 'not-connected',\n  LOCKED: 'locked',\n  READY: 'ready',\n};\n\n\nexport interface LedgerData {\n  status: string;\n  badem: any|null;\n  transport: any|null;\n}\n\nconst zeroBlock = '0000000000000000000000000000000000000000000000000000000000000000';\n\n@Injectable()\nexport class LedgerService {\n  walletPrefix = `44'/165'/`;\n\n  waitTimeout = 300000;\n  normalTimeout = 5000;\n  pollInterval = 15000;\n\n  pollingLedger = false;\n\n  ledger: LedgerData = {\n    status: LedgerStatus.NOT_CONNECTED,\n    badem: null,\n    transport: null,\n  };\n\n  // isDesktop = true;\n  isDesktop = environment.desktop;\n  queryingDesktopLedger = false;\n\n  ledgerStatus$: Subject<any> = new Subject();\n  desktopMessage$ = new Subject();\n\n  constructor(private api: ApiService,\n              private desktop: DesktopService,\n              private notifications: NotificationService) {\n    if (this.isDesktop) {\n      this.configureDesktop();\n    }\n  }\n\n  // Scraps binding to any existing transport/nano object\n  resetLedger() {\n    this.ledger.transport = null;\n    this.ledger.badem = null;\n  }\n\n  /**\n   * Prepare the main listener for events from the desktop client.\n   * Dispatches new messages via the main Observables\n   */\n  configureDesktop() {\n    this.desktop.connect();\n    this.desktop.on('ledger', (event, message) => {\n      if (!message || !message.event) return;\n      switch (message.event) {\n        case 'ledger-status':\n          this.ledger.status = message.data.status;\n          this.ledgerStatus$.next({ status: message.data.status, statusText: message.data.statusText });\n          break;\n\n        case 'account-details':\n        case 'cache-block':\n        case 'sign-block':\n          this.desktopMessage$.next(message);\n          break;\n      }\n    });\n  }\n\n  /**\n   * Get the next response coming from the desktop client for a specific event/filter\n   * @param eventType\n   * @param {any} filterFn\n   * @returns {Promise<any>}\n   */\n  async getDesktopResponse(eventType, filterFn?) {\n    return new Promise((resolve, reject) => {\n      const sub = this.desktopMessage$\n        .subscribe((response: any) => {\n          // Listen to all desktop messages until one passes our filters\n          if (response.event !== eventType) {\n            return; // Not the event we want.\n          }\n\n          if (filterFn) {\n            const shouldSkip = filterFn(response.data); // This function should return boolean\n            if (!shouldSkip) return; // This is not the message the subscriber wants\n          }\n\n          sub.unsubscribe(); // This is a message we want, safe to unsubscribe to further messages now.\n\n          if (response.data && response.data.error === true) {\n            return reject(new Error(response.data.errorMessage)); // Request failed!\n          }\n\n          resolve(response.data);\n        }, err => {\n          console.log(`Desktop message got error!`, err);\n          reject(err);\n        });\n    });\n\n  }\n\n\n\n  async getLedgerAccountDesktop(accountIndex, showOnScreen) {\n    if (this.queryingDesktopLedger) {\n      throw new Error(`Already querying desktop device, please wait`);\n    }\n    this.queryingDesktopLedger = true;\n\n    this.desktop.send('ledger', { event: 'account-details', data: { accountIndex, showOnScreen } });\n\n    try {\n      const details = await this.getDesktopResponse('account-details', a => a.accountIndex === accountIndex);\n      this.queryingDesktopLedger = false;\n\n      return details;\n    } catch (err) {\n      this.queryingDesktopLedger = false;\n      throw err;\n    }\n  }\n\n  async updateCacheDesktop(accountIndex, cacheData, signature) {\n    if (this.queryingDesktopLedger) {\n      throw new Error(`Already querying desktop device, please wait`);\n    }\n    this.queryingDesktopLedger = true;\n\n    this.desktop.send('ledger', { event: 'cache-block', data: { accountIndex, cacheData, signature } });\n\n    try {\n      const details = await this.getDesktopResponse('cache-block', a => a.accountIndex === accountIndex);\n      this.queryingDesktopLedger = false;\n\n      return details;\n    } catch (err) {\n      this.queryingDesktopLedger = false;\n      throw new Error(`Error caching block: ${err.message}`);\n    }\n  }\n\n  async signBlockDesktop(accountIndex, blockData) {\n    if (this.queryingDesktopLedger) {\n      throw new Error(`Already querying desktop device, please wait`);\n    }\n    this.queryingDesktopLedger = true;\n\n    this.desktop.send('ledger', { event: 'sign-block', data: { accountIndex, blockData } });\n\n    try {\n      const details = await this.getDesktopResponse('sign-block', a => a.accountIndex === accountIndex);\n      this.queryingDesktopLedger = false;\n\n      return details;\n    } catch (err) {\n      this.queryingDesktopLedger = false;\n      throw new Error(`Error signing block: ${err.message}`);\n    }\n  }\n\n  /**\n   * Determine if a broken browser is being used (Non-desktop Chrome)\n   */\n  isBrokenBrowser(): boolean {\n    if (this.isDesktop) {\n      return false;\n    }\n    // If we using Chromium and not on desktop - warn about Ledger issue\n    const isChromium = window['chrome'];\n    const winNav = window.navigator;\n    const vendorName = winNav.vendor;\n    const isOpera = typeof window['opr'] !== 'undefined';\n    const isIEedge = winNav.userAgent.indexOf('Edge') > -1;\n    const isIOSChrome = winNav.userAgent.match('CriOS');\n\n    if (isIOSChrome) {\n      // is Google Chrome on IOS - Shouldnt be using Ledger but meh\n      return true;\n    } else if (\n      isChromium !== null &&\n      typeof isChromium !== 'undefined' &&\n      vendorName === 'Google Inc.' &&\n      isOpera === false &&\n      isIEedge === false\n    ) {\n      // is Google Chrome\n      return true;\n    } else {\n      // not Google Chrome\n      return false;\n    }\n  }\n\n\n  /**\n   * Main ledger loading function.  Can be called multiple times to attempt a reconnect.\n   * @param {boolean} hideNotifications\n   * @returns {Promise<any>}\n   */\n  async loadLedger(hideNotifications = false) {\n    return new Promise(async (resolve, reject) => {\n\n      // Desktop is handled completely differently.  Send a message for status instead of setting anything up\n      if (this.isDesktop) {\n        if (!this.desktop.send('ledger', { event: 'get-ledger-status' })) {\n          reject(new Error(`Electron\\'s IPC was not loaded`));\n        }\n\n        // Any response will be handled by the configureDesktop() function, which pipes responses into this observable\n        const sub = this.ledgerStatus$.subscribe(newStatus => {\n          if (newStatus.status === LedgerStatus.READY) {\n            resolve(true);\n          } else {\n            reject(new Error(newStatus.statusText || `Unable to load desktop Ledger device`));\n          }\n          sub.unsubscribe();\n        }, reject);\n        return;\n      }\n\n      // Note:\n      // Everything else below is for loading the Ledger via the browser using Chrome U2F Bridge (Requires https)\n\n      // Load the transport object\n      if (!this.ledger.transport) {\n        try {\n          this.ledger.transport = await TransportU2F.open(null);\n          this.ledger.transport.setExchangeTimeout(this.waitTimeout); // 5 minutes\n        } catch (err) {\n          console.log(`Transport error: `, err);\n          if (err.statusText === 'UNKNOWN_ERROR') {\n            this.resetLedger();\n          }\n          this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Unable to load USB transport` });\n          return resolve(false);\n        }\n      }\n\n      // Load nano object\n      if (!this.ledger.badem) {\n        try {\n          this.ledger.badem = new Nano(this.ledger.transport);\n        } catch (err) {\n          console.log(`Badem error: `, err);\n          if (err.statusText === 'UNKNOWN_ERROR') {\n            this.resetLedger();\n          }\n          this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Error loading Badem USB transport` });\n          return resolve(false);\n        }\n      }\n\n      let resolved = false;\n      if (this.ledger.status === LedgerStatus.READY) {\n        return resolve(true); // Already ready?\n      }\n\n      // Set up a timeout when things are not ready\n      setTimeout(() => {\n        if (resolved) return;\n        console.log(`Timeout expired, sending not connected`);\n        this.ledger.status = LedgerStatus.NOT_CONNECTED;\n        this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Unable to detect Badem Ledger application (Timeout)` });\n        if (!hideNotifications) {\n          this.notifications.sendWarning(`Unable to connect to the Ledger device.  Make sure it is unlocked and the Badem application is open`);\n        }\n        resolved = true;\n        return resolve(false);\n      }, 2500);\n\n      // Try to load the app config\n      try {\n        const ledgerConfig = await this.ledger.badem.getAppConfiguration();\n        resolved = true;\n\n        if (!ledgerConfig) return resolve(false);\n        if (ledgerConfig && ledgerConfig.version) {\n          this.ledger.status = LedgerStatus.LOCKED;\n          this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Badem app detected, but ledger is locked` });\n        }\n      } catch (err) {\n        console.log(`App config error: `, err);\n        if (err.statusText === 'HALTED') {\n          this.resetLedger();\n        }\n        if (!hideNotifications && !resolved) {\n          this.notifications.sendWarning(`Ledger device locked.  Unlock and open the Badem application`);\n        }\n        return resolve(false);\n      }\n\n      // Attempt to load account 0 - which confirms the app is unlocked and ready\n      try {\n        const accountDetails = await this.getLedgerAccount(0);\n        this.ledger.status = LedgerStatus.READY;\n        this.ledgerStatus$.next({ status: this.ledger.status, statusText: `Badem Ledger application connected` });\n\n        if (!this.pollingLedger) {\n          this.pollingLedger = true;\n          this.pollLedgerStatus();\n        }\n      } catch (err) {\n        console.log(`Error on account details: `, err);\n        if (err.statusCode === STATUS_CODES.SECURITY_STATUS_NOT_SATISFIED) {\n          if (!hideNotifications) {\n            this.notifications.sendWarning(`Ledger device locked.  Unlock and open the Badem application`);\n          }\n        }\n      }\n\n      resolve(true);\n    }).catch(err => {\n      console.log(`error when loading ledger `, err);\n      if (!hideNotifications) {\n        this.notifications.sendWarning(`Error loading Ledger device: ${typeof err === 'string' ? err : err.message}`, { length: 6000 });\n      }\n\n      return null;\n    });\n\n  }\n\n  async updateCache(accountIndex, blockHash) {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      await this.loadLedger(); // Make sure ledger is ready\n    }\n    const blockResponse = await this.api.blocksInfo([blockHash]);\n    const blockData = blockResponse.blocks[blockHash];\n    if (!blockData) throw new Error(`Unable to load block data`);\n    blockData.contents = JSON.parse(blockData.contents);\n\n    const cacheData = {\n      representative: blockData.contents.representative,\n      balance: blockData.contents.balance,\n      previousBlock: blockData.contents.previous === zeroBlock ? null : blockData.contents.previous,\n      sourceBlock: blockData.contents.link,\n    };\n\n    if (this.isDesktop) {\n      return await this.updateCacheDesktop(accountIndex, cacheData, blockData.contents.signature);\n    } else {\n      return await this.ledger.badem.cacheBlock(this.ledgerPath(accountIndex), cacheData, blockData.contents.signature);\n    }\n  }\n\n  async updateCacheOffline(accountIndex, blockData) {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      await this.loadLedger(); // Make sure ledger is ready\n    }\n\n    const cacheData = {\n      representative: blockData.representative,\n      balance: blockData.balance,\n      previousBlock: blockData.previous === zeroBlock ? null : blockData.previous,\n      sourceBlock: blockData.link,\n    };\n\n    if (this.isDesktop) {\n      return await this.updateCacheDesktop(accountIndex, cacheData, blockData.signature);\n    } else {\n      return await this.ledger.badem.cacheBlock(this.ledgerPath(accountIndex), cacheData, blockData.signature);\n    }\n  }\n\n  async signBlock(accountIndex: number, blockData: any) {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      await this.loadLedger(); // Make sure ledger is ready\n    }\n    if (this.isDesktop) {\n      return this.signBlockDesktop(accountIndex, blockData);\n    } else {\n      this.ledger.transport.setExchangeTimeout(this.waitTimeout);\n      return await this.ledger.badem.signBlock(this.ledgerPath(accountIndex), blockData);\n    }\n  }\n\n  ledgerPath(accountIndex: number) {\n    return `${this.walletPrefix}${accountIndex}'`;\n  }\n\n  async getLedgerAccountWeb(accountIndex: number, showOnScreen = false) {\n    this.ledger.transport.setExchangeTimeout(showOnScreen ? this.waitTimeout : this.normalTimeout);\n    try {\n      return await this.ledger.badem.getAddress(this.ledgerPath(accountIndex), showOnScreen);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async getLedgerAccount(accountIndex: number, showOnScreen = false) {\n    if (this.isDesktop) {\n      return await this.getLedgerAccountDesktop(accountIndex, showOnScreen);\n    } else {\n      return await this.getLedgerAccountWeb(accountIndex, showOnScreen);\n    }\n  }\n\n  pollLedgerStatus() {\n    if (!this.pollingLedger) return;\n    setTimeout(async () => {\n      await this.checkLedgerStatus();\n      this.pollLedgerStatus();\n    }, this.pollInterval);\n  }\n\n  async checkLedgerStatus() {\n    if (this.ledger.status !== LedgerStatus.READY) {\n      return;\n    }\n\n    try {\n      const accountDetails = await this.getLedgerAccount(0);\n      this.ledger.status = LedgerStatus.READY;\n    } catch (err) {\n      this.ledger.status = LedgerStatus.NOT_CONNECTED;\n      this.pollingLedger = false;\n    }\n\n    this.ledgerStatus$.next({ status: this.ledger.status, statusText: `` });\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable()\nexport class ModalService {\n\n  showAccount$ = new BehaviorSubject(null);\n  constructor() { }\n\n  showAccount(account) {\n    this.showAccount$.next(account);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ApiService} from './api.service';\nimport {UtilService, StateBlock, TxType} from './util.service';\nimport {WorkPoolService} from './work-pool.service';\nimport BigNumber from 'bignumber.js';\nimport {NotificationService} from './notification.service';\nimport {AppSettingsService} from './app-settings.service';\nimport {LedgerService} from './ledger.service';\nimport { WalletAccount } from './wallet.service';\nimport {BehaviorSubject} from 'rxjs';\nconst nacl = window['nacl'];\n\n@Injectable()\nexport class BademBlockService {\n  representativeAccounts = [\n    'badem_33zto317ffjjqssnd4z186mrfrn6t6tuwxuxyqd4drpwx3ymzq9y1mt16h13', // Representative 1\n    'badem_39djjm4fmwko4yayxmsqsfzrsbxkri8ocwcp44m88y9ekzsw3q76zaooogie', // Representative 2\n    'badem_1777re9rpkmgxsgrj1qx47yt6rd1fx6sjb9xmqcq6kxkthc795tf9hj8c7yk', // Representative 3\n    'badem_3i1ytwxnb6it4knde5p6t9bwaaw4wurm6zrhqb1rqf3ig43yn3urkqtau6wc', // Representative 4\n  ];\n\n  zeroHash = '0000000000000000000000000000000000000000000000000000000000000000';\n\n  newOpenBlock$: BehaviorSubject<boolean|false> = new BehaviorSubject(false);\n\n  constructor(\n    private api: ApiService,\n    private util: UtilService,\n    private workPool: WorkPoolService,\n    private notifications: NotificationService,\n    private ledgerService: LedgerService,\n    public settings: AppSettingsService) { }\n\n  async generateChange(walletAccount, representativeAccount, ledger = false) {\n    const toAcct = await this.api.accountInfo(walletAccount.id);\n    if (!toAcct) throw new Error(`Account must have an open block first`);\n\n    const balance = new BigNumber(toAcct.balance);\n    const balanceDecimal = balance.toString(10);\n    const link = this.zeroHash;\n    const blockData = {\n      type: 'state',\n      account: walletAccount.id,\n      previous: toAcct.frontier,\n      representative: representativeAccount,\n      balance: balanceDecimal,\n      link: link,\n      signature: null,\n      work: null,\n    };\n\n    if (ledger) {\n      const ledgerBlock = {\n        previousBlock: toAcct.frontier,\n        representative: representativeAccount,\n        balance: balanceDecimal,\n      };\n      try {\n        this.sendLedgerNotification();\n        await this.ledgerService.updateCache(walletAccount.index, toAcct.frontier);\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.clearLedgerNotification();\n        blockData.signature = sig.signature;\n      } catch (err) {\n        this.clearLedgerNotification();\n        this.sendLedgerDeniedNotification();\n        return;\n      }\n    } else {\n      this.validateAccount(toAcct);\n      this.signStateBlock(walletAccount, blockData);\n    }\n\n    if (!this.workPool.workExists(toAcct.frontier)) {\n      this.notifications.sendInfo(`Generating Proof of Work...`);\n    }\n\n    blockData.work = await this.workPool.getWork(toAcct.frontier);\n\n    const processResponse = await this.api.process(blockData, TxType.change);\n    if (processResponse && processResponse.hash) {\n      walletAccount.frontier = processResponse.hash;\n      this.workPool.addWorkToCache(processResponse.hash); // Add new hash into the work pool\n      this.workPool.removeFromCache(toAcct.frontier);\n      return processResponse.hash;\n    } else {\n      return null;\n    }\n  }\n\n  // This might be used in the future to send state changes on the blocks instead of normal true/false\n  // subscribeSend(walletAccount, toAccountID, rawAmount, ledger = false): Observable {\n  //   const doSend = async (observable) => {\n  //     console.log(`OBS: Promise resolve, running main send logic.`);\n  //     const startTime = Date.now();\n  //\n  //     console.log(`Observable: Creation event run`);\n  //     observable.next({ step: 0, startTime: startTime });\n  //\n  //\n  //     const fromAccount = await this.api.accountInfo(walletAccount.id);\n  //     if (!fromAccount) throw new Error(`Unable to get account information for ${walletAccount.id}`);\n  //\n  //     const remaining = new BigNumber(fromAccount.balance).minus(rawAmount);\n  //     const remainingDecimal = remaining.toString(10);\n  //     let remainingPadded = remaining.toString(16);\n  //     while (remainingPadded.length < 32) remainingPadded = '0' + remainingPadded; // Left pad with 0's\n  //\n  //     let blockData;\n  //     const representative = fromAccount.representative || (this.settings.settings.defaultRepresentative || this.representativeAccount);\n  //\n  //     observable.next({ step: 1, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //\n  //     let signature = null;\n  //     if (ledger) {\n  //       const ledgerBlock = {\n  //         previousBlock: fromAccount.frontier,\n  //         representative: representative,\n  //         balance: remainingDecimal,\n  //         recipient: toAccountID,\n  //       };\n  //       try {\n  //         this.sendLedgerNotification();\n  //         await this.ledgerService.updateCache(walletAccount.index, fromAccount.frontier);\n  //         const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n  //         this.clearLedgerNotification();\n  //         signature = sig.signature;\n  //\n  //         observable.next({ step: 2, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //       } catch (err) {\n  //         this.clearLedgerNotification();\n  //         this.sendLedgerDeniedNotification(err);\n  //         return;\n  //       }\n  //     } else {\n  //       signature = this.signSendBlock(walletAccount, fromAccount, representative, remainingPadded, toAccountID);\n  //       observable.next({ step: 2, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //     }\n  //\n  //     if (!this.workPool.workExists(fromAccount.frontier)) {\n  //       this.notifications.sendInfo(`Generating Proof of Work...`);\n  //     }\n  //\n  //     blockData = {\n  //       type: 'state',\n  //       account: walletAccount.id,\n  //       previous: fromAccount.frontier,\n  //       representative: representative,\n  //       balance: remainingDecimal,\n  //       link: this.util.account.getAccountPublicKey(toAccountID),\n  //       work: await this.workPool.getWork(fromAccount.frontier),\n  //       signature: signature,\n  //     };\n  //\n  //     observable.next({ step: 3, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //\n  //     const processResponse = await this.api.process(blockData);\n  //     if (!processResponse || !processResponse.hash) throw new Error(processResponse.error || `Node returned an error`);\n  //\n  //     observable.next({ step: 4, startTime: startTime, eventTime: ((Date.now() - startTime) / 1000).toFixed(3) });\n  //\n  //     walletAccount.frontier = processResponse.hash;\n  //     this.workPool.addWorkToCache(processResponse.hash); // Add new hash into the work pool\n  //     this.workPool.removeFromCache(fromAccount.frontier);\n  //\n  //     observable.complete();\n  //   };\n  //\n  //\n  //   console.log(`Creating observable... on send...`);\n  //   // Create an observable that can be returned instantly.\n  //   return new Observable(observable => {\n  //\n  //     doSend(observable).then(val => console.log(val));\n  //   });\n  //\n  // }\n\n  async generateSend(walletAccount, toAccountID, rawAmount, ledger = false) {\n    const fromAccount = await this.api.accountInfo(walletAccount.id);\n    if (!fromAccount) throw new Error(`Unable to get account information for ${walletAccount.id}`);\n\n    const remaining = new BigNumber(fromAccount.balance).minus(rawAmount);\n    const remainingDecimal = remaining.toString(10);\n\n    const representative = fromAccount.representative || (this.settings.settings.defaultRepresentative || this.getRandomRepresentative());\n    const blockData = {\n      type: 'state',\n      account: walletAccount.id,\n      previous: fromAccount.frontier,\n      representative: representative,\n      balance: remainingDecimal,\n      link: this.util.account.getAccountPublicKey(toAccountID),\n      work: null,\n      signature: null,\n    };\n\n    if (ledger) {\n      const ledgerBlock = {\n        previousBlock: fromAccount.frontier,\n        representative: representative,\n        balance: remainingDecimal,\n        recipient: toAccountID,\n      };\n      try {\n        this.sendLedgerNotification();\n        await this.ledgerService.updateCache(walletAccount.index, fromAccount.frontier);\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.clearLedgerNotification();\n        blockData.signature = sig.signature;\n      } catch (err) {\n        this.clearLedgerNotification();\n        this.sendLedgerDeniedNotification(err);\n        return;\n      }\n    } else {\n      this.validateAccount(fromAccount);\n      this.signStateBlock(walletAccount, blockData);\n    }\n\n    if (!this.workPool.workExists(fromAccount.frontier)) {\n      this.notifications.sendInfo(`Generating Proof of Work...`);\n    }\n\n    blockData.work = await this.workPool.getWork(fromAccount.frontier);\n\n    const processResponse = await this.api.process(blockData, TxType.send);\n    if (!processResponse || !processResponse.hash) throw new Error(processResponse.error || `Node returned an error`);\n\n    walletAccount.frontier = processResponse.hash;\n    this.workPool.addWorkToCache(processResponse.hash); // Add new hash into the work pool\n    this.workPool.removeFromCache(fromAccount.frontier);\n\n    return processResponse.hash;\n  }\n\n  async generateReceive(walletAccount, sourceBlock, ledger = false) {\n    const toAcct = await this.api.accountInfo(walletAccount.id);\n    let workBlock = null;\n\n    const openEquiv = !toAcct || !toAcct.frontier;\n\n    const previousBlock = toAcct.frontier || this.zeroHash;\n    const representative = toAcct.representative || (this.settings.settings.defaultRepresentative || this.getRandomRepresentative());\n\n    const srcBlockInfo = await this.api.blocksInfo([sourceBlock]);\n    const srcAmount = new BigNumber(srcBlockInfo.blocks[sourceBlock].amount);\n    const newBalance = openEquiv ? srcAmount : new BigNumber(toAcct.balance).plus(srcAmount);\n    const newBalanceDecimal = newBalance.toString(10);\n    let newBalancePadded = newBalance.toString(16);\n    while (newBalancePadded.length < 32) newBalancePadded = '0' + newBalancePadded; // Left pad with 0's\n    const blockData = {\n      type: 'state',\n      account: walletAccount.id,\n      previous: previousBlock,\n      representative: representative,\n      balance: newBalanceDecimal,\n      link: sourceBlock,\n      signature: null,\n      work: null\n    };\n\n    // We have everything we need, we need to obtain a signature\n    if (ledger) {\n      const ledgerBlock: any = {\n        representative: representative,\n        balance: newBalanceDecimal,\n        sourceBlock: sourceBlock,\n      };\n      if (!openEquiv) {\n        ledgerBlock.previousBlock = toAcct.frontier;\n      }\n      try {\n        this.sendLedgerNotification();\n        // On new accounts, we do not need to cache anything\n        if (!openEquiv) {\n          await this.ledgerService.updateCache(walletAccount.index, toAcct.frontier);\n        }\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.notifications.removeNotification('ledger-sign');\n        blockData.signature = sig.signature.toUpperCase();\n      } catch (err) {\n        this.notifications.removeNotification('ledger-sign');\n        this.notifications.sendWarning(err.message || `Transaction denied on Ledger device`);\n        return;\n      }\n    } else {\n      this.validateAccount(toAcct);\n      this.signStateBlock(walletAccount, blockData);\n    }\n\n    workBlock = openEquiv ? this.util.account.getAccountPublicKey(walletAccount.id) : previousBlock;\n    if (!this.workPool.workExists(workBlock)) {\n      this.notifications.sendInfo(`Generating Proof of Work...`);\n    }\n\n    blockData.work = await this.workPool.getWork(workBlock);\n    const processResponse = await this.api.process(blockData, openEquiv ? TxType.open : TxType.receive);\n    if (processResponse && processResponse.hash) {\n      walletAccount.frontier = processResponse.hash;\n      this.workPool.addWorkToCache(processResponse.hash); // Add new hash into the work pool\n      this.workPool.removeFromCache(workBlock);\n\n      // update the rep view via subscription\n      if (openEquiv) {\n        this.informNewRep();\n      }\n      return processResponse.hash;\n    } else {\n      return null;\n    }\n  }\n\n  // for signing block when offline\n  async signOfflineBlock(walletAccount: WalletAccount, block: StateBlock, prevBlock: StateBlock,\n    type: TxType, genWork: boolean, multiplier: number, ledger = false) {\n    // special treatment if open block\n    const openEquiv = type === TxType.open;\n    console.log('Signing block of subtype: ' + TxType[type]);\n\n    if (ledger) {\n      let ledgerBlock = null;\n      if (type === TxType.send) {\n        ledgerBlock = {\n          previousBlock: block.previous,\n          representative: block.representative,\n          balance: block.balance,\n          recipient: this.util.account.getPublicAccountID(this.util.hex.toUint8(block.link)),\n        };\n      } else if (type === TxType.receive || type === TxType.open) {\n        ledgerBlock = {\n          representative: block.representative,\n          balance: block.balance,\n          sourceBlock: block.link,\n        };\n        if (!openEquiv) {\n          ledgerBlock.previousBlock = block.previous;\n        }\n      } else if (type === TxType.change) {\n        ledgerBlock = {\n          previousBlock: block.previous,\n          representative: block.representative,\n          balance: block.balance,\n        };\n      }\n      try {\n        this.sendLedgerNotification();\n        // On new accounts, we do not need to cache anything\n        if (!openEquiv) {\n          try {\n            // await this.ledgerService.updateCache(walletAccount.index, block.previous);\n            await this.ledgerService.updateCacheOffline(walletAccount.index, prevBlock);\n          } catch (err) {console.log(err); }\n        }\n        const sig = await this.ledgerService.signBlock(walletAccount.index, ledgerBlock);\n        this.clearLedgerNotification();\n        block.signature = sig.signature;\n      } catch (err) {\n        this.clearLedgerNotification();\n        this.sendLedgerDeniedNotification(err);\n        return null;\n      }\n    } else {\n      this.signStateBlock(walletAccount, block);\n    }\n\n    if (genWork) {\n      // For open blocks which don't have a frontier, use the public key of the account\n      const workBlock = openEquiv ? this.util.account.getAccountPublicKey(walletAccount.id) : block.previous;\n      if (!this.workPool.workExists(workBlock)) {\n        this.notifications.sendInfo(`Generating Proof of Work...`);\n      }\n\n      block.work = await this.workPool.getWork(workBlock, multiplier);\n      this.workPool.removeFromCache(workBlock);\n    }\n    return block; // return signed block (with or without work)\n  }\n\n  async validateAccount(accountInfo) {\n    if (!accountInfo) return;\n    if (!accountInfo.frontier || accountInfo.frontier === this.zeroHash) {\n      if (accountInfo.balance && accountInfo.balance !== '0') {\n        throw new Error(`Frontier not set, but existing account balance is nonzero`);\n      }\n      if (accountInfo.representative) {\n        throw new Error(`Frontier not set, but existing account representative is set`);\n      }\n      return;\n    }\n    const blockResponse = await this.api.blocksInfo([accountInfo.frontier]);\n    const blockData = blockResponse.blocks[accountInfo.frontier];\n    if (!blockData) throw new Error(`Unable to load block data`);\n    blockData.contents = JSON.parse(blockData.contents);\n    if (accountInfo.balance !== blockData.contents.balance || accountInfo.representative !== blockData.contents.representative) {\n      throw new Error(`Frontier block data doesn't match account info`);\n    }\n    if (blockData.contents.type !== 'state') {\n      throw new Error(`Frontier block wasn't a state block, which shouldn't be possible`);\n    }\n    if (this.util.hex.fromUint8(this.util.badem.hashStateBlock(blockData.contents)) !== accountInfo.frontier) {\n      throw new Error(`Frontier hash didn't match block data`);\n    }\n  }\n\n  // Sign a state block, and insert the signature into the block.\n  signStateBlock(walletAccount, blockData) {\n    const hashBytes = this.util.badem.hashStateBlock(blockData);\n    const privKey = walletAccount.keyPair.secretKey;\n    const signed = nacl.sign.detached(hashBytes, privKey, walletAccount.keyPair.expanded);\n    blockData.signature = this.util.hex.fromUint8(signed);\n  }\n\n  sendLedgerDeniedNotification(err = null) {\n    this.notifications.sendWarning(err && err.message || `Transaction denied on Ledger device`);\n  }\n  sendLedgerNotification() {\n    this.notifications.sendInfo(`Waiting for confirmation on Ledger Device...`, { identifier: 'ledger-sign', length: 0 });\n  }\n  clearLedgerNotification() {\n    this.notifications.removeNotification('ledger-sign');\n  }\n\n  getRandomRepresentative() {\n    return this.representativeAccounts[Math.floor(Math.random() * this.representativeAccounts.length)];\n  }\n\n  // Subscribable event when a new open block and we should update the rep info\n  informNewRep() {\n    this.newOpenBlock$.next(true);\n    this.newOpenBlock$.next(false);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NotificationService} from './notification.service';\n\n@Injectable()\nexport class NodeService {\n\n  node = {\n    status: null, // null - loading, false - offline, true - online\n  };\n\n  constructor(private notifications: NotificationService) { }\n\n  setOffline(msg = `Unable to connect to the Badem node, your balances may be inaccurate!`) {\n    if (this.node.status === false) return; // Already offline\n    this.node.status = false;\n\n    if (msg) this.notifications.sendError(msg, { identifier: 'node-offline', length: 0 });\n  }\n\n  setOnline() {\n    if (this.node.status) return; // Already online\n\n    this.node.status = true;\n    this.notifications.removeNotification('node-offline');\n  }\n\n  setLoading() {\n    this.node.status = null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs';\n\ntype NotificationType = 'info'|'success'|'warning'|'error';\n\n@Injectable()\nexport class NotificationService {\n\n  notifications$ = new Rx.BehaviorSubject(null);\n  removeNotification$ = new Rx.BehaviorSubject(null);\n\n  constructor() { }\n\n  // This provides an entry point for all components to send notifications.\n  // It exposes an observable that the actual component uses to grab new notifications\n\n  sendNotification(type: NotificationType, message: string, options = {}) {\n    this.notifications$.next({ type, message, options });\n  }\n\n  removeNotification(identifier: string) {\n    this.removeNotification$.next(identifier);\n  }\n\n  sendInfo(message: string, options = {}) {\n    this.sendNotification('info', message, options);\n  }\n  sendSuccess(message: string, options = {}) {\n    this.sendNotification('success', message, options);\n  }\n  sendWarning(message: string, options = {}) {\n    this.sendNotification('warning', message, options);\n  }\n  sendError(message: string, options = {}) {\n    this.sendNotification('error', message, options);\n  }\n\n  // Custom notification functions - these are re-used in multiple paces through the app\n  sendLedgerChromeWarning() {\n    this.sendWarning(\n      `<b>Notice:</b> You may experience issues using a Ledger device with Google Chrome. ` +\n      `If you do please use Brave/Opera browser.`,\n      { length: 0, identifier: 'chrome-ledger' }\n      );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {AppSettingsService} from './app-settings.service';\nimport {ApiService} from './api.service';\nimport {NotificationService} from './notification.service';\nimport { PoWSource } from './app-settings.service';\nimport Worker from 'worker-loader!./../../assets/lib/cpupow.js';\nimport {UtilService} from './util.service';\n\nconst mod = window['Module'];\nexport const baseThreshold = 'fffffff800000000'; // threshold since v21 epoch update\nconst hardwareConcurrency = window.navigator.hardwareConcurrency || 2;\nconst workerCount = Math.max(hardwareConcurrency - 1, 1);\nlet workerList = [];\n\n@Injectable()\nexport class PowService {\n\n  webGLAvailable = false;\n  webGLTested = false;\n\n  PoWPool = [];\n  parallelQueue = false;\n  processingQueueItem = false;\n\n  constructor(\n    private appSettings: AppSettingsService,\n    private api: ApiService,\n    private notifications: NotificationService,\n    private util: UtilService\n  ) { }\n\n  /**\n   * Determine the best PoW Method available for this browser\n   */\n  determineBestPoWMethod(): PoWSource {\n    // if (this.hasWebGLSupport()) return 'clientWebGL';\n    // if (this.hasWorkerSupport()) return 'clientCPU'; // For now, server is better than a CPU default (For Mobile)\n\n    return 'server';\n  }\n\n  /**\n   * Get PoW for a hash.  If it's already being processed, return the promise.\n   * Otherwise, add it into the queue and return when it is ready\n   */\n  async getPow(hash, multiplier) {\n    const existingPoW = this.PoWPool.find(p => p.hash === hash);\n    if (existingPoW) {\n      return existingPoW.promise.promise; // Its okay if its resolved already\n    }\n\n    return this.addQueueItem(hash, multiplier);\n  }\n\n  /**\n   * Add a new hash into the queue to perform work on.\n   * Returns a promise that is resolved when work is completed\n   */\n  addQueueItem(hash, multiplier) {\n    const existingPoW = this.PoWPool.find(p => p.hash === hash);\n    if (existingPoW) {\n      return existingPoW.promise.promise;\n    }\n\n    const queueItem = {\n      hash,\n      work: null,\n      promise: this.getDeferredPromise(),\n      multiplier: multiplier,\n    };\n\n    this.PoWPool.push(queueItem);\n    this.processQueue();\n\n    return queueItem.promise.promise;\n  }\n\n  /**\n   * Determine if the browser has WebWorker support\n   * @returns {boolean}\n   */\n  public hasWorkerSupport() {\n    return !!window['Worker'];\n  }\n\n  /**\n   * Determine if the browser has WebGL support\n   * @returns {boolean}\n   */\n  public hasWebGLSupport() {\n    if (this.webGLTested) return this.webGLAvailable;\n\n    this.webGLTested = true;\n\n    try {\n      const canvas = document.createElement( 'canvas' );\n      const webGL = !! window['WebGLRenderingContext'] && (canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ));\n      this.webGLAvailable = !!webGL;\n      return this.webGLAvailable;\n    } catch (e) {\n      this.webGLAvailable = false;\n      return false;\n    }\n  }\n\n  /**\n   * Gets the next item in the queue and sends it to be processed\n   */\n  private processQueue() {\n    if (!this.PoWPool.length) return; // No items in the queue\n    if (this.parallelQueue) return; // Not yet implemented\n\n    if (this.processingQueueItem) return; // Already processing.\n\n    // Get the next item from the queue and process it\n    this.processNextQueueItem();\n  }\n\n  /**\n   * Process an individual hash from the queue\n   * Uses the latest app settings to determine which type of PoW to use\n   */\n  private async processNextQueueItem() {\n    this.processingQueueItem = true;\n    if (!this.PoWPool.length) return; // Nothing in the queue?\n    const queueItem = this.PoWPool[0];\n\n    let powSource = this.appSettings.settings.powSource;\n    if (powSource === 'best') {\n      powSource = this.determineBestPoWMethod();\n    }\n\n    let work;\n    switch (powSource) {\n      default:\n      case 'server':\n        work = this.getHashServer(queueItem.hash, queueItem.multiplier);\n        break;\n      case 'clientCPU':\n        work = await this.getHashCPUWorker(queueItem.hash, queueItem.multiplier);\n        break;\n      case 'clientWebGL':\n        work = await this.getHashWebGL(queueItem.hash, queueItem.multiplier);\n        break;\n    }\n\n    this.PoWPool.shift(); // Remove this item from the queue\n    this.processingQueueItem = false;\n\n    if (!work) {\n      this.notifications.sendError(`Unable to generate work for ${queueItem.hash} using ${powSource}`);\n      queueItem.promise.reject(null);\n    } else {\n      queueItem.work = work;\n      queueItem.promise.resolve(work);\n    }\n\n    this.processQueue();\n\n    return queueItem;\n  }\n\n  /**\n   * Actual PoW functions\n   */\n  async getHashServer(hash, multiplier) {\n    const newThreshold = this.util.badem.difficultyFromMultiplier(multiplier, baseThreshold);\n    console.log('Generating work at threshold ' + newThreshold + ' using remote server', hash);\n    return await this.api.workGenerate(hash)\n    .then(work => work.work)\n    .catch(async err => await this.getHashCPUWorker(hash, multiplier));\n  }\n\n  /**\n   * Generate PoW using CPU without workers (Not used)\n   */\n  getHashCPUSync(hash) {\n    const response = this.getDeferredPromise();\n\n    const PoW = mod.cwrap('launchPoW', 'string', ['string']);\n    const start = Date.now();\n    let work;\n    do { work = PoW(hash); } while (work === '0000000000000000');\n    console.log(`Synchronous CPU: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds`);\n\n    response.resolve(work);\n    return response.promise;\n  }\n\n  /**\n   * Generate PoW using CPU and WebWorkers\n   */\n  async getHashCPUWorker(hash, multiplier) {\n    // console.log('Generating work using CPU for', hash);\n\n    const response = this.getDeferredPromise();\n\n    const start = Date.now();\n    // -- OLD CPU CODE THAT CANT DEFINE THRESHOLD-- //\n    /*\n    const NUM_THREADS = navigator.hardwareConcurrency < 4 ? navigator.hardwareConcurrency : 4;\n    const workers = window['pow_initiate'](NUM_THREADS, '/assets/lib/pow/');\n\n    window['pow_callback'](workers, hash, () => {}, (work) => {\n      console.log(`CPU Worker: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds [${NUM_THREADS} Workers]`);\n      response.resolve(work);\n    });\n    */\n\n    // calculate threshold from multiplier\n    const newThreshold = this.util.badem.difficultyFromMultiplier(multiplier, baseThreshold);\n\n    const work = () => new Promise(resolve => {\n      console.log('Generating work at threshold ' + newThreshold + ' using CPU workers for', hash);\n      workerList = [];\n      for (let i = 0; i < workerCount; i++) {\n        // const worker = new Worker()\n        const worker = new (Worker as any)();\n        worker.postMessage({\n          blockHash: hash,\n          workerIndex: i,\n          workerCount: workerCount,\n          workThreshold: newThreshold,\n        });\n        worker.onmessage = (workerwork) => {\n          console.log(`CPU Worker: Found work (${workerwork.data}) for ${hash} after ${(Date.now() - start) / 1000} seconds [${workerCount} Workers]`);\n          response.resolve(workerwork.data);\n          for (const workerIndex in workerList) {\n            if (Object.prototype.hasOwnProperty.call(workerList, workerIndex)) {\n              workerList[workerIndex].terminate();\n            }\n          }\n          resolve();\n        };\n        workerList.push(worker);\n      }\n    });\n    await work();\n\n    return response.promise;\n  }\n\n  /**\n   * Generate PoW using WebGL\n   */\n  getHashWebGL(hash, multiplier) {\n    const newThreshold = this.util.badem.difficultyFromMultiplier(multiplier, baseThreshold);\n    console.log('Generating work at threshold ' + newThreshold + ' using WebGL for', hash);\n\n    const response = this.getDeferredPromise();\n\n    const start = Date.now();\n    try {\n      window['NanoWebglPow'](hash, (work, n) => {\n          console.log(`WebGL Worker: Found work (${work}) for ${hash} after ${(Date.now() - start) / 1000} seconds [${n} iterations]`);\n          response.resolve(work);\n        },\n        n => {},\n        '0x' + newThreshold.substring(0, 8).toUpperCase() // max threshold for webglpow is currently ffffffff00000000\n      );\n    } catch (error) {\n      if (error.message === 'webgl2_required') {\n        this.webGLAvailable = false;\n      }\n      response.resolve(null);\n      // response.reject(error);\n    }\n\n    return response.promise;\n  }\n\n\n  // Helper for returning a deferred promise that we can resolve when work is ready\n  private getDeferredPromise() {\n    const defer = {\n      promise: null,\n      resolve: null,\n      reject: null,\n    };\n\n    defer.promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve;\n      defer.reject = reject;\n    });\n\n    return defer;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable()\nexport class PriceService {\n  storeKey = `nanovault-price`;\n  apiUrl = `https://api.coingecko.com/api/v3/coins/nano?localization=false&tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=false`;\n\n  price = {\n    lastPrice: 0,\n    lastPriceBTC: 0,\n  };\n  lastPrice$ = new BehaviorSubject(1);\n\n  constructor(private http: HttpClient) {\n    this.loadSavedPrice();\n  }\n\n  async getPrice(currency = 'USD') {\n    if (!currency) return; // No currency defined, do not refetch\n    const response: any = await this.http.get(`${this.apiUrl}`).toPromise();\n    if (!response) {\n      return this.price.lastPrice;\n    }\n\n    const quote = response.market_data.current_price;\n    const currencyPrice = quote[currency.toLowerCase()];\n    const btcPrice = quote.btc;\n\n    this.price.lastPrice = currencyPrice;\n    this.price.lastPriceBTC = btcPrice;\n\n    this.savePrice();\n\n    this.lastPrice$.next(currencyPrice);\n\n    return this.price.lastPrice;\n  }\n\n  loadSavedPrice() {\n    const priceData = localStorage.getItem(this.storeKey);\n    if (!priceData) return false;\n\n    this.price = JSON.parse(priceData);\n  }\n\n  savePrice() {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.price));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { QrModalComponent, QRType } from '../components/qr-modal/qr-modal.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QrModalService {\n\n  constructor(\n    private modalService: NgbModal) { }\n\n  /** Will return a promise that will only resolve if the type matches the QR string read and is valid\n   *\n   * @param reference Unique reference ID for example a text input\n   * @param type String type to match in QR\n   */\n  openQR(reference: string, type: QRType) {\n    const response = this.getDeferredPromise();\n    const modalRef = this.modalService.open(QrModalComponent, {windowClass: 'scanner-modal'});\n    modalRef.componentInstance.reference = reference;\n    modalRef.componentInstance.type = type;\n    modalRef.result.then((data) => {\n      response.resolve(data);\n    }, () => {\n      response.reject();\n    });\n    return response.promise;\n  }\n\n  // Helper for returning a deferred promise that we can resolve when QR is ready\n  private getDeferredPromise() {\n    const defer = {\n      promise: null,\n      resolve: null,\n      reject: null,\n    };\n\n    defer.promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve;\n      defer.reject = reject;\n    });\n\n    return defer;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NotificationService } from './notification.service';\nimport { Router } from '@angular/router';\nimport { UtilService } from './util.service';\n\n@Injectable()\nexport class RemoteSignService {\n\n\n  constructor(\n    private router: Router,\n    private notifcationService: NotificationService,\n    private util: UtilService,\n  ) { }\n\n  navigateSignBlock(url) {\n    if (!this.checkSignBlock(url.pathname)) {\n      return this.notifcationService.sendWarning('Not a recognized format of an unsigned block.', { length: 5000 });\n    }\n    try {\n      const data = JSON.parse(url.pathname);\n      // Block to sign\n      let paramsSign = {\n        sign: 1,\n        n_account: data.block.account,\n        n_previous: data.block.previous,\n        n_representative: data.block.representative,\n        n_balance: data.block.balance,\n        n_link: data.block.link,\n      };\n      // only include if it exist\n      if (data.previous) {\n        paramsSign = {...paramsSign, ...{\n          p_account: data.previous.account,\n          p_previous: data.previous.previous,\n          p_representative: data.previous.representative,\n          p_balance: data.previous.balance,\n          p_link: data.previous.link,\n          p_signature: data.previous.signature,\n        }};\n      }\n      this.router.navigate(['sign'], { queryParams: paramsSign});\n    } catch (error) {\n      this.notifcationService.sendWarning('Block sign data detected but not correct format.', { length: 5000 });\n    }\n  }\n\n  navigateProcessBlock(url) {\n    if (!this.checkSignBlock(url.pathname) || !this.checkProcessBlock(url.pathname)) {\n      return this.notifcationService.sendWarning('Not a recognized format of a signed block.', { length: 5000 });\n    }\n    try {\n      const data = JSON.parse(url.pathname);\n      // Block to process\n      let paramsProcess = {\n        sign: 0,\n        n_account: data.block.account,\n        n_previous: data.block.previous,\n        n_representative: data.block.representative,\n        n_balance: data.block.balance,\n        n_link: data.block.link,\n        n_signature: data.block.signature,\n        n_work: data.block.work,\n      };\n      // only include if it exist\n      if (data.previous) {\n        paramsProcess = {...paramsProcess, ...{\n          p_account: data.previous.account,\n          p_previous: data.previous.previous,\n          p_representative: data.previous.representative,\n          p_balance: data.previous.balance,\n          p_link: data.previous.link,\n        }};\n      }\n      this.router.navigate(['sign'], { queryParams: paramsProcess});\n    } catch (error) {\n      this.notifcationService.sendWarning('Block process data detected but not correct format.', { length: 5000 });\n    }\n  }\n\n  checkSignBlock(stringdata: string) {\n    try {\n      const data = JSON.parse(stringdata);\n      console.log(data);\n\n      return (this.util.account.isValidAccount(data.block.account) &&\n        (data.previous ? this.util.account.isValidAccount(data.previous.account) : true) &&\n        this.util.account.isValidAccount(data.block.representative) &&\n        (data.previous ? this.util.account.isValidAccount(data.previous.representative) : true) &&\n        this.util.account.isValidAmount(data.block.balance) &&\n        (data.previous ? this.util.account.isValidAmount(data.previous.balance) : true) &&\n        this.util.badem.isValidHash(data.block.previous) &&\n        (data.previous ? this.util.badem.isValidHash(data.previous.previous) : true) &&\n        this.util.badem.isValidHash(data.block.link) &&\n        (data.previous ? this.util.badem.isValidHash(data.previous.link) : true) &&\n        (data.previous ? this.util.badem.isValidSignature(data.previous.signature) : true));\n    } catch (error) {\n      return false;\n    }\n  }\n\n  checkProcessBlock(stringdata: string) {\n    try {\n      const data = JSON.parse(stringdata);\n      return (this.util.badem.isValidSignature(data.block.signature) &&\n        (data.block.work ? this.util.badem.isValidWork(data.block.work) : true));\n    } catch (error) {\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {BaseApiAccount, WalletApiAccount, WalletService} from './wallet.service';\nimport BigNumber from 'bignumber.js';\nimport {ApiService} from './api.service';\nimport {UtilService} from './util.service';\n\nexport interface RepresentativeStatus {\n  online: boolean;\n  veryHighWeight: boolean;\n  highWeight: boolean;\n  veryLowUptime: boolean;\n  lowUptime: boolean;\n  markedToAvoid: boolean;\n  trusted: boolean;\n  changeRequired: boolean;\n  warn: boolean;\n  known: boolean;\n  daysSinceLastVoted: number;\n  uptime: number;\n  score: number;\n}\n\nexport interface RepresentativeOverview {\n  id: string;\n  weight: BigNumber;\n  accounts: WalletApiAccount[];\n}\n\nexport interface StoredRepresentative {\n id: string;\n name: string;\n warn?: boolean;\n trusted?: boolean;\n}\n\n\nexport interface RepresentativeApiOverview extends BaseApiAccount {\n  account: string;\n  accounts: WalletApiAccount[];\n  delegatedWeight: BigNumber;\n}\n\nexport interface FullRepresentativeOverview extends RepresentativeApiOverview {\n  id: string;\n  percent: BigNumber;\n  statusText: string;\n  label: string|null;\n  status: RepresentativeStatus;\n}\n\n\n@Injectable()\nexport class RepresentativeService {\n  storeKey = `nanovault-representatives`;\n\n  representatives$ = new BehaviorSubject([]);\n  representatives = [];\n\n  walletReps$ = new BehaviorSubject([null]);\n  walletReps = [];\n\n  changeableReps$ = new BehaviorSubject([]);\n  changeableReps = [];\n\n  onlineStakeTotal = new BigNumber(115202418);\n\n  loaded = false;\n\n  constructor(\n    private wallet: WalletService,\n    private api: ApiService,\n    private util: UtilService\n  ) {\n    this.representatives = this.defaultRepresentatives;\n  }\n\n  /**\n   * Determine if any accounts in the wallet need a rep change\n   * @returns {Promise<FullRepresentativeOverview[]>}\n   */\n  async detectChangeableReps(cachedReps?: FullRepresentativeOverview[]): Promise<FullRepresentativeOverview[]> {\n    const representatives = cachedReps ? cachedReps : await this.getRepresentativesOverview();\n\n    // Now based on some of their properties, we filter them out\n    const needsChange = [];\n    for (const rep of representatives) {\n      if (rep.status.trusted) {\n        continue; // Reps marked as trusted are good no matter their status\n      }\n\n      // If we have high weight, low uptime or marked as warn, then we need to change\n      if (\n            rep.status.highWeight\n          || rep.status.veryHighWeight\n          || rep.status.lowUptime\n          || rep.status.veryLowUptime\n          || rep.status.warn\n        ) {\n          needsChange.push(rep);\n      }\n    }\n\n    this.changeableReps = needsChange;\n    this.changeableReps$.next(needsChange);\n\n    return needsChange;\n  }\n\n  /**\n   * Get a detailed overview of representatives for all acounts in the wallet\n   * @returns {Promise<FullRepresentativeOverview[]>}\n   */\n  async getRepresentativesOverview(): Promise<FullRepresentativeOverview[]> {\n    // First get the details of all representatives for accounts in our wallet\n    const accounts = await this.wallet.getAccountsDetails();\n    const uniqueReps = this.getUniqueRepresentatives(accounts);\n    const representatives = await this.getRepresentativesDetails(uniqueReps);\n    const onlineReps = await this.getOnlineRepresentatives();\n    const quorum = await this.api.confirmationQuorum();\n\n    const online_stake_total = quorum ? this.util.badem.rawToMbadem(quorum.online_stake_total) : null;\n    this.onlineStakeTotal = online_stake_total ? new BigNumber(online_stake_total) : null;\n\n    const allReps = [];\n\n    // Now, loop through each representative and determine some details about it\n    for (const representative of representatives) {\n      const repOnline = onlineReps.indexOf(representative.account) !== -1;\n      const knownRep = this.getRepresentative(representative.account);\n\n      const nanoWeight = this.util.badem.rawToMbadem(representative.weight || 0);\n      const percent = this.onlineStakeTotal ? nanoWeight.div(this.onlineStakeTotal).times(100) : new BigNumber(0);\n\n      const repStatus: RepresentativeStatus = {\n        online: repOnline,\n        veryHighWeight: false,\n        highWeight: false,\n        veryLowUptime: false,\n        lowUptime: false,\n        markedToAvoid: false,\n        trusted: false,\n        daysSinceLastVoted: 0,\n        changeRequired: false,\n        warn: false,\n        known: false,\n        uptime: null,\n        score: null\n      };\n\n      // Determine the status based on some factors\n      let status = 'none';\n      let label;\n\n      if (percent.gte(3)) {\n        status = 'alert'; // Has extremely high voting weight\n        repStatus.veryHighWeight = true;\n        repStatus.changeRequired = true;\n      } else if (percent.gte(2)) {\n        status = 'warn'; // Has high voting weight\n        repStatus.highWeight = true;\n      }\n\n      if (knownRep) {\n        // in the list of known representatives\n        status = status === 'none' ? 'ok' : status;\n        label = knownRep.name;\n        repStatus.known = true;\n        if (knownRep.trusted) {\n          status = 'trusted'; // marked as trusted\n          repStatus.trusted = true;\n        }\n        if (knownRep.warn) {\n          status = 'alert'; // marked to avoid\n          repStatus.markedToAvoid = true;\n          repStatus.warn = true;\n          repStatus.changeRequired = true;\n        }\n      }\n\n      const additionalData = {\n        id: representative.account,\n        percent: percent,\n        statusText: status,\n        label: label,\n        status: repStatus,\n      };\n\n      const fullRep = { ...representative, ...additionalData };\n      allReps.push(fullRep);\n    }\n\n    this.walletReps = allReps;\n    this.walletReps$.next(allReps);\n\n    return allReps;\n  }\n\n  /**\n   * Build a list of unique representatives based on the accounts provided\n   * Many accounts may share the same representative\n   * @param accounts\n   * @returns {RepresentativeOverview[]}\n   */\n  getUniqueRepresentatives(accounts: WalletApiAccount[]): RepresentativeOverview[] {\n    const representatives = [];\n    for (const account of accounts) {\n      if (!account || !account.representative) continue; // Account doesn't exist yet\n\n      const existingRep = representatives.find(rep => rep.id === account.representative);\n      if (existingRep) {\n        existingRep.weight = existingRep.weight.plus(new BigNumber(account.balance));\n        existingRep.accounts.push(account);\n      } else {\n        const newRep = {\n          id: account.representative,\n          weight: new BigNumber(account.balance),\n          accounts: [account],\n        };\n        representatives.push(newRep);\n      }\n    }\n\n    return representatives;\n  }\n\n  /**\n   * Get a list of all online representatives\n   * @returns {Promise<string[]>}\n   */\n  async getOnlineRepresentatives(): Promise<string[]> {\n    const representatives = [];\n    const reps = await this.api.representativesOnline();\n    if (!reps) return representatives;\n    for (const representative in reps.representatives) {\n      if (!reps.representatives.hasOwnProperty(representative)) continue;\n      representatives.push(reps.representatives[representative]);\n    }\n\n    return representatives;\n  }\n\n  /**\n   * Add detailed API information to each representative\n   * Note: The uglyness allows for requests to run in parallel\n   * @param {RepresentativeOverview[]} representatives\n   * @returns {Promise<RepresentativeApiOverview[]>}\n   */\n  async getRepresentativesDetails(representatives: RepresentativeOverview[]): Promise<RepresentativeApiOverview[]> {\n    const repInfos = await Promise.all(\n      representatives.map(rep =>\n        this.api.accountInfo(rep.id)\n          .then((res: RepresentativeApiOverview) => {\n            res.account = rep.id;\n            res.delegatedWeight = rep.weight;\n            res.accounts = rep.accounts;\n\n            return res;\n          })\n      )\n    );\n\n    return repInfos;\n  }\n\n  /**\n   * Load the stored/known representative list from local storage\n   * @returns {StoredRepresentative[]}\n   */\n  loadRepresentativeList(): StoredRepresentative[] {\n    if (this.loaded) return this.representatives;\n\n    let list = this.defaultRepresentatives;\n    const representativeStore = localStorage.getItem(this.storeKey);\n    if (representativeStore) {\n      list = JSON.parse(representativeStore);\n    }\n    this.representatives = list;\n    this.representatives$.next(list);\n    this.loaded = true;\n\n    return list;\n  }\n\n  getRepresentative(id): StoredRepresentative | undefined {\n    return this.representatives.find(rep => rep.id === id);\n  }\n\n  // Reset representatives list to the default one\n  resetRepresentativeList() {\n    localStorage.removeItem(this.storeKey);\n    this.representatives = this.defaultRepresentatives;\n    this.loaded = false;\n  }\n\n\n  saveRepresentative(accountID, name, trusted = false, warn = false): void {\n    const newRepresentative: any = {\n      id: accountID,\n      name: name,\n    };\n    if (trusted) newRepresentative.trusted = true;\n    if (warn) newRepresentative.warn = true;\n\n    const existingRepresentative = this.representatives.find(\n      r => r.name.toLowerCase() === name.toLowerCase() || r.id.toLowerCase() === accountID.toLowerCase()\n    );\n    if (existingRepresentative) {\n      this.representatives.splice(this.representatives.indexOf(existingRepresentative), 1, newRepresentative);\n    } else {\n      this.representatives.push(newRepresentative);\n    }\n\n    this.saveRepresentatives();\n    this.representatives$.next(this.representatives);\n  }\n\n  deleteRepresentative(accountID): void {\n    const existingIndex = this.representatives.findIndex(a => a.id.toLowerCase() === accountID.toLowerCase());\n    if (existingIndex === -1) return;\n\n    this.representatives.splice(existingIndex, 1);\n\n    this.saveRepresentatives();\n    this.representatives$.next(this.representatives);\n  }\n\n  saveRepresentatives(): void {\n    localStorage.setItem(this.storeKey, JSON.stringify(this.representatives));\n  }\n\n  getSortedRepresentatives() {\n    const weightedReps = this.representatives.map(r => {\n      if (r.trusted) {\n        r.weight = 2;\n      } else if (r.warn) {\n        r.weight = 0;\n      } else {\n        r.weight = 1;\n      }\n      return r;\n    });\n\n    return weightedReps.sort((a, b) => b.weight - a.weight);\n  }\n\n  // Default representatives list\n  // tslint:disable-next-line:member-ordering\n  defaultRepresentatives = [\n    {\n      id: 'badem_33zto317ffjjqssnd4z186mrfrn6t6tuwxuxyqd4drpwx3ymzq9y1mt16h13',\n      name: 'Badem Representative #1',\n      warn: true,\n    },\n    {\n      id: 'badem_39djjm4fmwko4yayxmsqsfzrsbxkri8ocwcp44m88y9ekzsw3q76zaooogie',\n      name: 'Badem Representative #2',\n      warn: true,\n    },\n    {\n      id: 'badem_1777re9rpkmgxsgrj1qx47yt6rd1fx6sjb9xmqcq6kxkthc795tf9hj8c7yk',\n      name: 'Badem Representative #3',\n      warn: true,\n    },\n    {\n      id: 'badem_3i1ytwxnb6it4knde5p6t9bwaaw4wurm6zrhqb1rqf3ig43yn3urkqtau6wc',\n      name: 'Badem Representative #4',\n      warn: true,\n    },\n  ];\n\n}\n","import { Injectable } from '@angular/core';\nimport * as blake from 'blakejs';\nimport {BigNumber} from 'bignumber.js';\nimport * as nanocurrency from 'nanocurrency';\n\nconst nacl = window['nacl'];\nconst STATE_BLOCK_PREAMBLE = '0000000000000000000000000000000000000000000000000000000000000006';\n\nexport interface StateBlock {\n  account: string;\n  previous: string;\n  representative: string;\n  balance: string;\n  link: string;\n  signature: string;\n  work: string;\n}\n\nexport enum TxType {'send', 'receive', 'open', 'change'}\n\n@Injectable()\nexport class UtilService {\n\n  constructor() {\n  }\n\n  hex = {\n    toUint4: hexToUint4,\n    fromUint8: uint8ToHex,\n    toUint8: hexToUint8,\n    isHex: isHex,\n  };\n  uint4 = {\n    toUint5: uint4ToUint5,\n    toUint8: uint4ToUint8,\n  };\n  uint5 = {\n    toString: uint5ToString,\n  };\n  uint8 = {\n    toUint4: uint8ToUint4,\n    fromHex: hexToUint8,\n    toHex: uint8ToHex,\n  };\n  dec = {\n    toHex: decToHex,\n  };\n  big = {\n    add: bigAdd,\n  };\n  string = {\n    isNumeric: isNumeric,\n  };\n  account = {\n    generateAccountSecretKeyBytes: generateAccountSecretKeyBytes,\n    generateAccountKeyPair: generateAccountKeyPair,\n    getPublicAccountID: getPublicAccountID,\n    generateSeedBytes: generateSeedBytes,\n    getAccountPublicKey: getAccountPublicKey,\n    isValidAccount: isValidAccount,\n    isValidBademAmount: isValidBademAmount,\n    isValidAmount: isValidAmount,\n  };\n  badem = {\n    mbademToRaw: mbademToRaw,\n    kbademToRaw: kbademToRaw,\n    bademToRaw: bademToRaw,\n    rawToMbadem: rawToMbadem,\n    rawToKbadem: rawToKbadem,\n    rawToBadem: rawToBadem,\n    hashStateBlock: hashStateBlock,\n    isValidSeed: isValidSeed,\n    isValidHash: isValidHash,\n    isValidIndex: isValidIndex,\n    isValidSignature: isValidSignature,\n    isValidWork: isValidWork,\n    validateWork: validateWork,\n    difficultyFromMultiplier: difficultyFromMultiplier,\n  };\n  array = {\n    shuffle: shuffle\n  };\n\n}\n\n\n\n/** Hex Functions **/\nfunction hexToUint4(hexValue) {\n  const uint4 = new Uint8Array(hexValue.length);\n  for (let i = 0; i < hexValue.length; i++) uint4[i] = parseInt(hexValue.substr(i, 1), 16);\n\n  return uint4;\n}\nfunction hexToUint8(hexValue) {\n  // tslint:disable-next-line:no-bitwise\n  const length = (hexValue.length / 2) | 0;\n  const uint8 = new Uint8Array(length);\n  for (let i = 0; i < length; i++) uint8[i] = parseInt(hexValue.substr(i * 2, 2), 16);\n\n  return uint8;\n}\n\n// Check if string is hexdecimal\nfunction isHex(h) {\n  const re = /^[0-9a-fA-F]+$/;\n  return re.test(h);\n}\n\n\n/** Uint4 Functions **/\nfunction uint4ToUint8(uintValue) {\n  const length = uintValue.length / 2;\n  const uint8 = new Uint8Array(length);\n  for (let i = 0; i < length; i++)\tuint8[i] = uintValue[i * 2] * 16 + uintValue[i * 2 + 1];\n\n  return uint8;\n}\n\n// tslint:disable:no-bitwise\nfunction uint4ToUint5(uintValue) {\n  const length = uintValue.length / 5 * 4;\n  const uint5 = new Uint8Array(length);\n  for (let i = 1; i <= length; i++) {\n    const n = i - 1;\n    const m = i % 4;\n    const z = n + ((i - m) / 4);\n    const right = uintValue[z] << m;\n    let left;\n    if (((length - i) % 4) === 0)\tleft = uintValue[z - 1] << 4;\n    else\tleft = uintValue[z + 1] >> (4 - m);\n    uint5[n] = (left + right) % 32;\n  }\n  return uint5;\n}\n// tslint:enable:no-bitwise\n\nfunction uint4ToHex(uint4) {\n  let hex = '';\n  for (let i = 0; i < uint4.length; i++) hex += uint4[i].toString(16).toUpperCase();\n  return hex;\n}\n\n\n/** Uint5 Functions **/\nfunction uint5ToString(uint5) {\n  const letter_list = '13456789abcdefghijkmnopqrstuwxyz'.split('');\n  let string = '';\n  for (let i = 0; i < uint5.length; i++)\tstring += letter_list[uint5[i]];\n\n  return string;\n}\n\n// tslint:disable:no-bitwise\nfunction uint5ToUint4(uint5) {\n  const length = uint5.length / 4 * 5;\n  const uint4 = new Uint8Array(length);\n  for (let i = 1; i <= length; i++) {\n    const n = i - 1;\n    const m = i % 5;\n    const z = n - ((i - m) / 5);\n    const right = uint5[z - 1] << (5 - m);\n    const left = uint5[z] >> m;\n    uint4[n] = (left + right) % 16;\n  }\n  return uint4;\n}\n// tslint:enable:no-bitwise\n\n\n/** Uint8 Functions **/\nfunction uint8ToHex(uintValue) {\n  let hex = '';\n  let aux;\n  for (let i = 0; i < uintValue.length; i++) {\n    aux = uintValue[i].toString(16).toUpperCase();\n    if (aux.length === 1) {\n      aux = '0' + aux;\n    }\n    hex += aux;\n    aux = '';\n  }\n\n  return(hex);\n}\n\n// tslint:disable:no-bitwise\nfunction uint8ToUint4(uintValue) {\n  const uint4 = new Uint8Array(uintValue.length * 2);\n  for (let i = 0; i < uintValue.length; i++) {\n    uint4[i * 2] = uintValue[i] / 16 | 0;\n    uint4[i * 2 + 1] = uintValue[i] % 16;\n  }\n\n  return uint4;\n}\n// tslint:enable:no-bitwise\n\n\n/** Dec Functions **/\nfunction decToHex(decValue, bytes = null) {\n  // tslint:disable-next-line:prefer-const\n  let dec = decValue.toString().split(''), sum = [], hex = '', hexArray = [], i, s;\n  while (dec.length) {\n    s = 1 * dec.shift();\n    for (i = 0; s || i < sum.length; i++) {\n      s += (sum[i] || 0) * 10;\n      sum[i] = s % 16;\n      s = (s - sum[i]) / 16;\n    }\n  }\n  while (sum.length) {\n    hexArray.push(sum.pop().toString(16));\n  }\n\n  hex = hexArray.join('');\n\n  if (hex.length % 2 !== 0) {\n    hex = '0' + hex;\n  }\n\n  if (bytes > hex.length / 2) {\n    const diff = bytes - hex.length / 2;\n    for (let j = 0; j < diff; j++) {\n      hex = '00' + hex;\n    }\n  }\n\n  return hex;\n}\n\n// BigNumber functions\nfunction bigAdd(input, value) {\n  const insert = new BigNumber(input);\n  const val = new BigNumber(value);\n  return insert.plus(val).toString(10);\n}\n\n/** String Functions **/\nfunction stringToUint5(string) {\n  const letter_list = '13456789abcdefghijkmnopqrstuwxyz'.split('');\n  const length = string.length;\n  const string_array = string.split('');\n  const uint5 = new Uint8Array(length);\n  for (let i = 0; i < length; i++)\tuint5[i] = letter_list.indexOf(string_array[i]);\n  return uint5;\n}\n\nfunction isNumeric(val) {\n  // numerics and last character is not a dot and number of dots is 0 or 1\n  const isnum = /^-?\\d*\\.?\\d*$/.test(val) && val !== '';\n  return isnum && String(val).slice(-1) !== '.';\n}\n\n\n/** Account Functions **/\nfunction generateAccountSecretKeyBytes(seedBytes, accountIndex) {\n  const accountBytes = hexToUint8(decToHex(accountIndex, 4));\n  const context = blake.blake2bInit(32);\n  blake.blake2bUpdate(context, seedBytes);\n  blake.blake2bUpdate(context, accountBytes);\n  const newKey = blake.blake2bFinal(context);\n\n  return newKey;\n}\n\nfunction generateAccountKeyPair(accountSecretKeyBytes, expanded = false) {\n  return nacl.sign.keyPair.fromSecretKey(accountSecretKeyBytes, expanded);\n}\n\nfunction getPublicAccountID(accountPublicKeyBytes, prefix = 'badem') {\n  const accountHex = util.uint8.toHex(accountPublicKeyBytes);\n  const keyBytes = util.uint4.toUint8(util.hex.toUint4(accountHex)); // For some reason here we go from u, to hex, to 4, to 8??\n  const checksum = util.uint5.toString(util.uint4.toUint5(util.uint8.toUint4(blake.blake2b(keyBytes, null, 5).reverse())));\n  const account = util.uint5.toString(util.uint4.toUint5(util.hex.toUint4(`0${accountHex}`)));\n\n  return `${prefix}_${account}${checksum}`;\n}\n\nfunction isValidAccount(account: string): boolean {\n  const re = /^badem_[13][0-13-9a-km-uw-z]{59}$/;\n  return re.test(account);\n}\n\n// Check if a string is a numeric and larger than 0 but less than Badem supply\nfunction isValidBademAmount(val: string) {\n  // numerics and last character is not a dot and number of dots is 0 or 1\n  const isnum = /^-?\\d*\\.?\\d*$/.test(val);\n  if (isnum && String(val).slice(-1) !== '.') {\n    if (val !== '' && mbademToRaw(val).gte(1) && nanocurrency.checkAmount(mbademToRaw(val).toString(10))) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\n// Check if valid raw amount\nfunction isValidAmount(val: string) {\n  return nanocurrency.checkAmount(val);\n}\n\nfunction getAccountPublicKey(account) {\n  if (!isValidAccount(account)) {\n    throw new Error(`Invalid BADEM amount for the BADEM account`);\n  }\n  const account_crop = account.length === 64 ? account.substring(4, 64) : account.substring(6, 66);\n  const isValid = /^[13456789abcdefghijkmnopqrstuwxyz]+$/.test(account_crop);\n  if (!isValid) throw new Error(`Invalid BADEM account`);\n\n  const key_uint4 = array_crop(uint5ToUint4(stringToUint5(account_crop.substring(0, 52))));\n  const hash_uint4 = uint5ToUint4(stringToUint5(account_crop.substring(52, 60)));\n  const key_array = uint4ToUint8(key_uint4);\n  const blake_hash = blake.blake2b(key_array, null, 5).reverse();\n\n  if (!equal_arrays(hash_uint4, uint8ToUint4(blake_hash))) throw new Error(`Incorrect checksum`);\n\n  return uint4ToHex(key_uint4);\n}\n\n/**\n * Conversion functions\n */\nconst mbadem = 100;\nconst kbadem = 100;\nconst badem  = 1;\nfunction mbademToRaw(value) {\n  return new BigNumber(value).times(mbadem);\n}\nfunction kbademToRaw(value) {\n  return new BigNumber(value).times(kbadem);\n}\nfunction bademToRaw(value) {\n  return new BigNumber(value).times(badem);\n}\nfunction rawToMbadem(value) {\n  return new BigNumber(value).div(mbadem);\n}\nfunction rawToKbadem(value) {\n  return new BigNumber(value).div(kbadem);\n}\nfunction rawToBadem(value) {\n  return new BigNumber(value).div(badem);\n}\n\n/**\n * Badem functions\n */\nfunction isValidSeed(val: string) {\n  return nanocurrency.checkSeed(val);\n}\n\nfunction isValidHash(val: string) {\n  return nanocurrency.checkHash(val);\n}\n\nfunction isValidIndex(val: number) {\n  return nanocurrency.checkIndex(val);\n}\n\nfunction isValidSignature(val: string) {\n  return nanocurrency.checkSignature(val);\n}\n\nfunction isValidWork(val: string) {\n  return nanocurrency.checkWork(val);\n}\n\nfunction validateWork(blockHash: string, threshold: string, work: string) {\n  return nanocurrency.validateWork({blockHash: blockHash, threshold: threshold, work: work});\n}\n\nfunction hashStateBlock(block: StateBlock) {\n  const balance = new BigNumber(block.balance);\n  if (balance.isNegative() || balance.isNaN()) {\n    throw new Error(`Negative or NaN balance`);\n  }\n  let balancePadded = balance.toString(16);\n  while (balancePadded.length < 32) balancePadded = '0' + balancePadded; // Left pad with 0's\n  const context = blake.blake2bInit(32, null);\n  blake.blake2bUpdate(context, hexToUint8(STATE_BLOCK_PREAMBLE));\n  blake.blake2bUpdate(context, hexToUint8(getAccountPublicKey(block.account)));\n  blake.blake2bUpdate(context, hexToUint8(block.previous));\n  blake.blake2bUpdate(context, hexToUint8(getAccountPublicKey(block.representative)));\n  blake.blake2bUpdate(context, hexToUint8(balancePadded));\n  blake.blake2bUpdate(context, hexToUint8(block.link));\n  return blake.blake2bFinal(context);\n}\n\n// Determine new difficulty from base difficulty (hexadecimal string) and a multiplier (float). Returns hex string\nexport function difficultyFromMultiplier(multiplier, base_difficulty) {\n  const big64 = new BigNumber(2).pow(64);\n  const big_multiplier = new BigNumber(multiplier);\n  const big_base = new BigNumber(base_difficulty, 16);\n  return big64.minus((big64.minus(big_base).dividedToIntegerBy(big_multiplier))).toString(16);\n}\n\n// shuffle any array\nfunction shuffle(array) {\n  let currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction array_crop (array) {\n  const length = array.length - 1;\n  const cropped_array = new Uint8Array(length);\n  for (let i = 0; i < length; i++) {\n    cropped_array[i] = array[i + 1];\n  }\n  return cropped_array;\n}\n\nfunction equal_arrays (array1, array2) {\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i])\treturn false;\n  }\n  return true;\n}\n\n\nfunction generateSeedBytes() {\n  return nacl.randomBytes(32);\n}\n\nconst util = {\n  hex: {\n    toUint4: hexToUint4,\n    fromUint8: uint8ToHex,\n    toUint8: hexToUint8,\n    isHex: isHex,\n  },\n  uint4: {\n    toUint5: uint4ToUint5,\n    toUint8: uint4ToUint8,\n  },\n  uint5: {\n    toString: uint5ToString,\n  },\n  uint8: {\n    toUint4: uint8ToUint4,\n    fromHex: hexToUint8,\n    toHex: uint8ToHex,\n  },\n  dec: {\n    toHex: decToHex,\n  },\n  big: {\n    add: bigAdd,\n  },\n  string: {\n    isNumeric: isNumeric,\n  },\n  account: {\n    generateAccountSecretKeyBytes: generateAccountSecretKeyBytes,\n    generateAccountKeyPair: generateAccountKeyPair,\n    getPublicAccountID: getPublicAccountID,\n    generateSeedBytes: generateSeedBytes,\n    getAccountPublicKey: getAccountPublicKey,\n    isValidAccount: isValidAccount,\n    isValidBademAmount: isValidBademAmount,\n    isValidAmount: isValidBademAmount,\n  },\n  badem: {\n    mbademToRaw: mbademToRaw,\n    kbademToRaw: kbademToRaw,\n    bademToRaw: bademToRaw,\n    rawToMbadem: rawToMbadem,\n    rawToKbadem: rawToKbadem,\n    rawToBadem: rawToBadem,\n    hashStateBlock: hashStateBlock,\n    isValidSeed: isValidSeed,\n    isValidHash: isValidHash,\n    isValidIndex: isValidIndex,\n    isValidSignature: isValidSignature,\n    isValidWork: isValidWork,\n    validateWork: validateWork,\n    difficultyFromMultiplier: difficultyFromMultiplier,\n  }\n};\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {UtilService} from './util.service';\nimport {ApiService} from './api.service';\nimport {BigNumber} from 'bignumber.js';\nimport {AddressBookService} from './address-book.service';\nimport * as CryptoJS from 'crypto-js';\nimport {WorkPoolService} from './work-pool.service';\nimport {WebsocketService} from './websocket.service';\nimport {BademBlockService} from './nano-block.service';\nimport {NotificationService} from './notification.service';\nimport {AppSettingsService} from './app-settings.service';\nimport {PriceService} from './price.service';\nimport {LedgerService} from './ledger.service';\n\nexport type WalletType = 'seed' | 'ledger' | 'privateKey' | 'expandedKey';\n\nexport interface WalletAccount {\n  id: string;\n  frontier: string|null;\n  secret: any;\n  keyPair: any;\n  index: number;\n  balance: BigNumber;\n  pending: BigNumber;\n  pendingBelowThreshold: BigNumber[];\n  pendingOriginal: BigNumber;\n  balanceRaw: BigNumber;\n  pendingRaw: BigNumber;\n  balanceFiat: number;\n  pendingFiat: number;\n  addressBookName: string|null;\n}\n\nexport interface Block {\n  account: string;\n  hash: string;\n  amount: string;\n  source: string;\n}\n\nexport interface FullWallet {\n  type: WalletType;\n  seedBytes: any;\n  seed: string|null;\n  balance: BigNumber;\n  pending: BigNumber;\n  balanceRaw: BigNumber;\n  pendingRaw: BigNumber;\n  balanceFiat: number;\n  pendingFiat: number;\n  hasPending: boolean;\n  accounts: WalletAccount[];\n  selectedAccountId: string|null;\n  selectedAccount: WalletAccount|null;\n  selectedAccount$: BehaviorSubject<WalletAccount|null>;\n  locked: boolean;\n  password: string;\n  pendingBlocks: Block[];\n  pendingBelowThreshold: BigNumber[];\n  newWallet$: BehaviorSubject<boolean|false>;\n}\n\nexport interface BaseApiAccount {\n  account_version: string;\n  balance: string;\n  block_count: string;\n  frontier: string;\n  modified_timestamp: string;\n  open_block: string;\n  pending: string;\n  representative: string;\n  representative_block: string;\n  weight: string;\n}\n\nexport interface WalletApiAccount extends BaseApiAccount {\n  addressBookName?: string|null;\n  id?: string;\n}\n\n@Injectable()\nexport class WalletService {\n  badem = 100;\n  storeKey = `nanovault-wallet`;\n\n  wallet: FullWallet = {\n    type: 'seed',\n    seedBytes: null,\n    seed: '',\n    balance: new BigNumber(0),\n    pending: new BigNumber(0),\n    balanceRaw: new BigNumber(0),\n    pendingRaw: new BigNumber(0),\n    balanceFiat: 0,\n    pendingFiat: 0,\n    hasPending: false,\n    accounts: [],\n    selectedAccountId: null,\n    selectedAccount: null,\n    selectedAccount$: new BehaviorSubject(null),\n    locked: false,\n    password: '',\n    pendingBlocks: [],\n    pendingBelowThreshold: [new BigNumber(0)],\n    newWallet$: new BehaviorSubject(false),\n  };\n\n  processingPending = false;\n  successfulBlocks = [];\n  reloadingBalance = false;\n\n  constructor(\n    private util: UtilService,\n    private api: ApiService,\n    private appSettings: AppSettingsService,\n    private addressBook: AddressBookService,\n    private price: PriceService,\n    private workPool: WorkPoolService,\n    private websocket: WebsocketService,\n    private bademBlock: BademBlockService,\n    private ledgerService: LedgerService,\n    private notifications: NotificationService) {\n    this.websocket.newTransactions$.subscribe(async (transaction) => {\n      if (!transaction) return; // Not really a new transaction\n      console.log('New Transaction', transaction);\n      let shouldNotify = false;\n\n      // Find out if this is a send, with our account as a destination or not\n      const walletAccountIDs = this.wallet.accounts.map(a => a.id);\n      // If we have a minimum receive,  once we know the account... add the amount to wallet pending? set pending to true\n\n      if (transaction.block.type === 'state' && transaction.block.subtype === 'send'\n      && walletAccountIDs.indexOf(transaction.block.link_as_account) !== -1) {\n        if (this.appSettings.settings.minimumReceive) {\n          const minAmount = this.util.badem.mbademToRaw(this.appSettings.settings.minimumReceive);\n          if ((new BigNumber(transaction.amount)).gte(minAmount)) {\n            shouldNotify = true;\n          }\n        } else {\n          shouldNotify = true;\n        }\n        if (shouldNotify) {\n          if (this.wallet.locked && this.appSettings.settings.pendingOption !== 'manual') {\n            this.notifications.sendWarning(`New incoming transaction - Unlock the wallet to receive`, { length: 10000, identifier: 'pending-locked' });\n          } else if (this.appSettings.settings.pendingOption === 'manual') {\n            this.notifications.sendWarning(`New incoming transaction - Set to be received manually`, { length: 10000, identifier: 'pending-locked' });\n          }\n        } else {\n          console.log(\n            `Found new pending block that was below minimum receive amount: `,\n            transaction.amount,\n            this.appSettings.settings.minimumReceive\n          );\n        }\n        await this.processStateBlock(transaction);\n      } else if (transaction.block.type === 'state') {\n        shouldNotify = true;\n        await this.processStateBlock(transaction);\n      }\n\n      // TODO: We don't really need to call to update balances, we should be able to balance on our own from here\n      // I'm not sure about that because what happens if the websocket is disconnected and misses a transaction?\n      // won't the balance be incorrect if relying only on the websocket? / Json\n      if (shouldNotify) {\n        await this.reloadBalances(false);\n      }\n    });\n\n    this.addressBook.addressBook$.subscribe(newAddressBook => {\n      this.reloadAddressBook();\n    });\n  }\n\n  async processStateBlock(transaction) {\n    // If we have a minimum receive,  once we know the account... add the amount to wallet pending? set pending to true\n    if (transaction.block.subtype === 'send' && transaction.block.link_as_account) {\n      // This is an incoming send block, we want to perform a receive\n      const walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.link_as_account);\n      if (!walletAccount) return; // Not for our wallet?\n\n      // Check for a min receive\n      const txAmount = new BigNumber(transaction.amount);\n\n      if (this.appSettings.settings.minimumReceive) {\n        const minAmount = this.util.badem.mbademToRaw(this.appSettings.settings.minimumReceive);\n\n        if (txAmount.gte(minAmount)) {\n          this.wallet.pending = this.wallet.pending.plus(txAmount);\n          this.wallet.pendingRaw = this.wallet.pendingRaw.plus(txAmount.mod(this.badem));\n          this.wallet.pendingFiat += this.util.badem.rawToMbadem(txAmount).times(this.price.price.lastPrice).toNumber();\n          this.wallet.hasPending = true;\n          this.addPendingBlock(walletAccount.id, transaction.hash, txAmount, transaction.account);\n        } else {\n          // The resons for using push and shift is to keep the reference when used in another component\n          this.wallet.pendingBelowThreshold.push(this.wallet.pendingBelowThreshold[0].plus(txAmount));\n          this.wallet.pendingBelowThreshold.shift();\n          walletAccount.pendingBelowThreshold.push(walletAccount.pendingBelowThreshold[0].plus(txAmount));\n          walletAccount.pendingBelowThreshold.shift();\n        }\n      } else {\n        this.wallet.pending = this.wallet.pending.plus(txAmount);\n        this.wallet.pendingRaw = this.wallet.pendingRaw.plus(txAmount.mod(this.badem));\n        this.wallet.pendingFiat += this.util.badem.rawToMbadem(txAmount).times(this.price.price.lastPrice).toNumber();\n        this.wallet.hasPending = true;\n        this.addPendingBlock(walletAccount.id, transaction.hash, txAmount, transaction.account);\n      }\n\n      await this.processPendingBlocks();\n    } else {\n      // Not a send to us, which means it was a block posted by us.  We shouldnt need to do anything...\n      const walletAccount = this.wallet.accounts.find(a => a.id === transaction.block.link_as_account);\n      if (!walletAccount) return; // Not for our wallet?\n    }\n  }\n\n  reloadAddressBook() {\n    this.wallet.accounts.forEach(account => {\n      account.addressBookName = this.addressBook.getAccountName(account.id);\n    });\n  }\n\n  getWalletAccount(accountID) {\n    return this.wallet.accounts.find(a => a.id === accountID);\n  }\n\n\n  async patchOldSavedData() {\n    // Look for saved accounts using an badem_ prefix\n    const walletData = localStorage.getItem(this.storeKey);\n    if (!walletData) return;\n\n    const walletJson = JSON.parse(walletData);\n\n    if (walletJson.accounts) {\n      const newAccounts = walletJson.accounts.map(account => {\n        if (account.id.indexOf('badem_') !== -1) {\n          account.id = account.id.replace('badem_', 'badem_');\n        }\n        return account;\n      });\n\n      walletJson.accounts = newAccounts;\n    }\n\n    localStorage.setItem(this.storeKey, JSON.stringify(walletJson));\n\n    return;\n  }\n\n  async loadStoredWallet() {\n    this.resetWallet();\n\n    const walletData = localStorage.getItem(this.storeKey);\n    if (!walletData) return this.wallet;\n\n    const walletJson = JSON.parse(walletData);\n    const walletType = walletJson.type || 'seed';\n    this.wallet.type = walletType;\n    if (walletType === 'seed' || walletType === 'privateKey' || walletType === 'expandedKey') {\n      this.wallet.seed = walletJson.seed;\n      this.wallet.seedBytes = this.util.hex.toUint8(walletJson.seed);\n      this.wallet.locked = true;\n    }\n    if (walletType === 'ledger') {\n      // Check ledger status?\n    }\n\n    if (walletJson.accounts && walletJson.accounts.length) {\n      walletJson.accounts.forEach(account => this.loadWalletAccount(account.index, account.id));\n    }\n\n    this.wallet.selectedAccountId = walletJson.selectedAccountId || null;\n\n    if (walletType === 'ledger') {\n      this.ledgerService.loadLedger(true);\n    }\n\n    return this.wallet;\n  }\n\n  // Using full list of indexes is the latest standard with back compatability with accountsIndex\n  async loadImportedWallet(seed: string, password: string, accountsIndex: number, indexes: Array<number>) {\n    this.resetWallet();\n\n    this.wallet.seed = seed;\n    this.wallet.seedBytes = this.util.hex.toUint8(seed);\n    this.wallet.password = password;\n\n    // Old method\n    if (accountsIndex > 0) {\n      for (let i = 0; i < accountsIndex; i++) {\n        await this.addWalletAccount(i, false);\n      }\n    } else if (indexes) {\n      // New method (the promise ensures all wallets have been added before moving on)\n      await Promise.all(indexes.map(async (i) => {\n        await this.addWalletAccount(i, false);\n      }));\n    } else return false;\n\n    await this.reloadBalances(true);\n\n    if (this.wallet.accounts.length) {\n      this.websocket.subscribeAccounts(this.wallet.accounts.map(a => a.id));\n    }\n\n    return true;\n  }\n\n  generateExportData() {\n    const exportData: any = {\n      indexes: this.wallet.accounts.map(a => a.index),\n    };\n    if (this.wallet.locked) {\n      exportData.seed = this.wallet.seed;\n    } else {\n      exportData.seed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password).toString();\n    }\n\n    return exportData;\n  }\n\n  generateExportUrl() {\n    const exportData = this.generateExportData();\n    const base64Data = btoa(JSON.stringify(exportData));\n\n    return `https://nault.cc/import-wallet#${base64Data}`;\n  }\n\n  lockWallet() {\n    if (!this.wallet.seed || !this.wallet.password) return; // Nothing to lock, password not set\n    const encryptedSeed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password);\n\n    // Update the seed\n    this.wallet.seed = encryptedSeed.toString();\n    this.wallet.seedBytes = null;\n\n    // Remove secrets from accounts\n    this.wallet.accounts.forEach(a => {\n      a.keyPair = null;\n      a.secret = null;\n    });\n\n    this.wallet.locked = true;\n    this.wallet.password = '';\n\n    this.saveWalletExport(); // Save so that a refresh gives you a locked wallet\n\n    return true;\n  }\n  unlockWallet(password: string) {\n    try {\n      const decryptedBytes = CryptoJS.AES.decrypt(this.wallet.seed, password);\n      const decryptedSeed = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      if (!decryptedSeed || decryptedSeed.length !== 64) return false;\n\n      this.wallet.seed = decryptedSeed;\n      this.wallet.seedBytes = this.util.hex.toUint8(this.wallet.seed);\n      this.wallet.accounts.forEach(a => {\n        if (this.wallet.type === 'seed') {\n          a.secret = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, a.index);\n        } else {\n          a.secret = this.wallet.seedBytes;\n        }\n        a.keyPair = this.util.account.generateAccountKeyPair(a.secret, this.wallet.type === 'expandedKey');\n      });\n\n      this.wallet.locked = false;\n      this.wallet.password = password;\n\n      this.notifications.removeNotification('pending-locked'); // If there is a notification to unlock, remove it\n\n      // Process any pending blocks\n      this.processPendingBlocks();\n\n      this.saveWalletExport(); // Save so a refresh also gives you your unlocked wallet?\n\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  walletIsLocked() {\n    return this.wallet.locked;\n  }\n\n  async createWalletFromSeed(seed: string) {\n    this.resetWallet();\n\n    this.wallet.seed = seed;\n    this.wallet.seedBytes = this.util.hex.toUint8(seed);\n\n    await this.scanAccounts();\n  }\n\n  async scanAccounts(emptyAccountBuffer: number = 10) {\n    let emptyTicker = 0;\n    const usedIndices = [];\n    let greatestUsedIndex = 0;\n    const batchSize = emptyAccountBuffer + 1;\n\n    // Getting accounts...\n    for (let batch = 0; emptyTicker < emptyAccountBuffer; batch++) {\n      const batchAccounts = {};\n      const batchAccountsArray = [];\n      for (let i = 0; i < batchSize; i++) {\n        const index = batch * batchSize + i;\n\n        let accountAddress = '';\n        let accountPublicKey = '';\n\n        if (this.wallet.type === 'seed') {\n          const accountBytes = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, index);\n          const accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes);\n          accountPublicKey = this.util.uint8.toHex(accountKeyPair.publicKey).toUpperCase();\n          accountAddress = this.util.account.getPublicAccountID(accountKeyPair.publicKey);\n\n        } else if (this.wallet.type === 'ledger') {\n          const account: any = await this.ledgerService.getLedgerAccount(index);\n          accountAddress = account.address.replace('badem_', 'badem_');\n          accountPublicKey = account.publicKey.toUpperCase();\n\n        } else {\n          return false;\n        }\n\n        batchAccounts[accountAddress] = {\n          index: index,\n          publicKey: accountPublicKey,\n          used: false\n        };\n        batchAccountsArray.push(accountAddress);\n      }\n\n      // Checking frontiers...\n      const batchResponse = await this.api.accountsFrontiers(batchAccountsArray);\n      if (batchResponse) {\n        for (const accountID in batchResponse.frontiers) {\n          if (batchResponse.frontiers.hasOwnProperty(accountID)) {\n            const frontier = batchResponse.frontiers[accountID];\n            console.log(accountID, frontier, batchAccounts[accountID].publicKey);\n            if (frontier !== batchAccounts[accountID].publicKey) {\n              batchAccounts[accountID].used = true;\n            }\n          }\n        }\n      }\n\n      // Check index usage\n      for (const accountID in batchAccounts) {\n        if (batchAccounts.hasOwnProperty(accountID)) {\n          const account = batchAccounts[accountID];\n          if (account.used) {\n            usedIndices.push(account.index);\n            if (account.index > greatestUsedIndex) {\n              greatestUsedIndex = account.index;\n              emptyTicker = 0;\n            }\n          } else {\n            if (account.index > greatestUsedIndex) {\n              emptyTicker ++;\n            }\n          }\n        }\n      }\n    }\n\n    // Add accounts\n    if (usedIndices.length > 0) {\n      for (const index of usedIndices) {\n        await this.addWalletAccount(index);\n      }\n    } else {\n      await this.addWalletAccount();\n    }\n\n    // Reload balances for all accounts\n    this.reloadBalances();\n  }\n\n  createNewWallet(seed: string) {\n    this.resetWallet();\n\n    this.wallet.seedBytes = this.util.hex.toUint8(seed);\n    this.wallet.seed = seed;\n\n    this.addWalletAccount();\n\n    return this.wallet.seed;\n  }\n\n  async createLedgerWallet() {\n    this.resetWallet();\n\n    this.wallet.type = 'ledger';\n\n    await this.scanAccounts();\n\n    return this.wallet;\n  }\n\n  createWalletFromSingleKey(key: string, expanded: boolean) {\n    this.resetWallet();\n\n    this.wallet.type = expanded ? 'expandedKey' : 'privateKey';\n    this.wallet.seed = key;\n    this.wallet.seedBytes = this.util.hex.toUint8(key);\n\n    this.wallet.accounts.push(this.createSingleKeyAccount(expanded));\n    this.saveWalletExport();\n  }\n\n  async createLedgerAccount(index) {\n    const account: any = await this.ledgerService.getLedgerAccount(index);\n\n    const accountID = account.address;\n    const nanoAccountID = accountID.replace('badem_', 'badem_');\n    const addressBookName = this.addressBook.getAccountName(nanoAccountID);\n\n    const newAccount: WalletAccount = {\n      id: nanoAccountID,\n      frontier: null,\n      secret: null,\n      keyPair: null,\n      balance: new BigNumber(0),\n      pending: new BigNumber(0),\n      pendingBelowThreshold: [new BigNumber(0)],\n      pendingOriginal: new BigNumber(0),\n      balanceRaw: new BigNumber(0),\n      pendingRaw: new BigNumber(0),\n      balanceFiat: 0,\n      pendingFiat: 0,\n      index: index,\n      addressBookName,\n    };\n\n    return newAccount;\n  }\n\n  createKeyedAccount(index, accountBytes, accountKeyPair) {\n    const accountName = this.util.account.getPublicAccountID(accountKeyPair.publicKey);\n    const addressBookName = this.addressBook.getAccountName(accountName);\n\n    const newAccount: WalletAccount = {\n      id: accountName,\n      frontier: null,\n      secret: accountBytes,\n      keyPair: accountKeyPair,\n      balance: new BigNumber(0),\n      pending: new BigNumber(0),\n      pendingBelowThreshold: [new BigNumber(0)],\n      pendingOriginal: new BigNumber(0),\n      balanceRaw: new BigNumber(0),\n      pendingRaw: new BigNumber(0),\n      balanceFiat: 0,\n      pendingFiat: 0,\n      index: index,\n      addressBookName,\n    };\n\n    return newAccount;\n  }\n\n  async createSeedAccount(index) {\n    const accountBytes = this.util.account.generateAccountSecretKeyBytes(this.wallet.seedBytes, index);\n    const accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes);\n    return this.createKeyedAccount(index, accountBytes, accountKeyPair);\n  }\n\n  createSingleKeyAccount(expanded: boolean) {\n    const accountBytes = this.wallet.seedBytes;\n    const accountKeyPair = this.util.account.generateAccountKeyPair(accountBytes, expanded);\n    return this.createKeyedAccount(0, accountBytes, accountKeyPair);\n  }\n\n  /**\n   * Reset wallet to a base state, without changing reference to the main object\n   */\n  resetWallet() {\n    if (this.wallet.accounts.length) {\n      this.websocket.unsubscribeAccounts(this.wallet.accounts.map(a => a.id)); // Unsubscribe from old accounts\n    }\n    this.wallet.type = 'seed';\n    this.wallet.password = '';\n    this.wallet.locked = false;\n    this.wallet.seed = '';\n    this.wallet.seedBytes = null;\n    this.wallet.accounts = [];\n    this.wallet.balance = new BigNumber(0);\n    this.wallet.pending = new BigNumber(0);\n    this.wallet.balanceRaw = new BigNumber(0);\n    this.wallet.pendingRaw = new BigNumber(0);\n    this.wallet.balanceFiat = 0;\n    this.wallet.pendingFiat = 0;\n    this.wallet.hasPending = false;\n    this.wallet.selectedAccountId = null;\n    this.wallet.selectedAccount = null;\n    this.wallet.selectedAccount$.next(null);\n    this.wallet.pendingBelowThreshold = [new BigNumber(0)];\n    this.wallet.pendingBlocks = [];\n  }\n\n  isConfigured() {\n    switch (this.wallet.type) {\n      case 'privateKey':\n      case 'expandedKey':\n      case 'seed': return !!this.wallet.seed;\n      case 'ledger': return true;\n    }\n  }\n\n  isLocked() {\n    switch (this.wallet.type) {\n      case 'privateKey':\n      case 'expandedKey':\n      case 'seed': return this.wallet.locked;\n      case 'ledger': return false;\n    }\n  }\n\n  isLedgerWallet() {\n    return this.wallet.type === 'ledger';\n  }\n\n  isSingleKeyWallet() {\n    return (this.wallet.type === 'privateKey' || this.wallet.type === 'expandedKey');\n  }\n\n  hasPendingTransactions() {\n    return this.wallet.hasPending;\n    // if (this.appSettings.settings.minimumReceive) {\n    //   return this.wallet.hasPending;\n    // } else {\n    //   return this.wallet.pendingRaw.gt(0);\n    // }\n  }\n\n  reloadFiatBalances() {\n    const fiatPrice = this.price.price.lastPrice;\n\n    this.wallet.accounts.forEach(account => {\n      account.balanceFiat = this.util.badem.rawToMbadem(account.balance).times(fiatPrice).toNumber();\n      account.pendingFiat = this.util.badem.rawToMbadem(account.pending).times(fiatPrice).toNumber();\n    });\n\n    this.wallet.balanceFiat = this.util.badem.rawToMbadem(this.wallet.balance).times(fiatPrice).toNumber();\n    this.wallet.pendingFiat = this.util.badem.rawToMbadem(this.wallet.pending).times(fiatPrice).toNumber();\n  }\n\n  async reloadBalances(reloadPending = true) {\n    // to block two reloads to happen at the same time (websocket)\n    if (this.reloadingBalance) return;\n\n    this.reloadingBalance = true;\n    const fiatPrice = this.price.price.lastPrice;\n    this.wallet.balance = new BigNumber(0);\n    this.wallet.pending = new BigNumber(0);\n    this.wallet.balanceRaw = new BigNumber(0);\n    this.wallet.pendingRaw = new BigNumber(0);\n    this.wallet.balanceFiat = 0;\n    this.wallet.pendingFiat = 0;\n    this.wallet.hasPending = false;\n\n    const accountIDs = this.wallet.accounts.map(a => a.id);\n    const accounts = await this.api.accountsBalances(accountIDs);\n    const frontiers = await this.api.accountsFrontiers(accountIDs);\n    // const allFrontiers = [];\n    // for (const account in frontiers.frontiers) {\n    //   allFrontiers.push({ account, frontier: frontiers.frontiers[account] });\n    // }\n    // const frontierBlocks = await this.api.blocksInfo(allFrontiers.map(f => f.frontier));\n\n    let walletBalance = new BigNumber(0);\n    let walletPending = new BigNumber(0);\n    let walletPendingReal = new BigNumber(0);\n\n    if (!accounts) {\n      this.reloadingBalance = false;\n      return;\n    }\n    for (const accountID in accounts.balances) {\n      if (!accounts.balances.hasOwnProperty(accountID)) continue;\n      // Find the account, update it\n      const walletAccount = this.wallet.accounts.find(a => a.id === accountID);\n      // console.log(`Finding account by id: ${accountID} - prefixed: ${accountID} - resulting account: `, walletAccount);\n      if (!walletAccount) continue;\n      walletAccount.balance = new BigNumber(accounts.balances[accountID].balance);\n      walletAccount.pendingOriginal = new BigNumber(accounts.balances[accountID].pending);\n\n      walletAccount.balanceRaw = new BigNumber(walletAccount.balance).mod(this.badem);\n\n      walletAccount.balanceFiat = this.util.badem.rawToMbadem(walletAccount.balance).times(fiatPrice).toNumber();\n\n      walletAccount.frontier = frontiers.frontiers[accountID] || null;\n      walletAccount.pendingBelowThreshold = [new BigNumber(0)];\n\n      walletBalance = walletBalance.plus(walletAccount.balance);\n      walletPending = walletPending.plus(walletAccount.pendingOriginal);\n    }\n\n    let hasPending = false;\n\n    // Check if there is a pending balance at all\n    if (walletPending.gt(0)) {\n      // If we have a minimum receive amount, check accounts for actual receivable transactions\n      if (this.appSettings.settings.minimumReceive) {\n        const minAmount = this.util.badem.mbademToRaw(this.appSettings.settings.minimumReceive);\n        const pending = await this.api.accountsPendingLimit(this.wallet.accounts.map(a => a.id), minAmount.toString(10));\n\n        if (pending && pending.blocks) {\n          for (const block in pending.blocks) {\n            if (!pending.blocks.hasOwnProperty(block)) {\n              continue;\n            }\n            const walletAccount = this.wallet.accounts.find(a => a.id === block);\n            if (pending.blocks[block]) {\n              hasPending = true;\n              let accountPending = new BigNumber(0);\n              for (const hash in pending.blocks[block]) {\n                if (!pending.blocks[block].hasOwnProperty(hash)) {\n                  continue;\n                }\n                walletPendingReal = walletPendingReal.plus(pending.blocks[block][hash].amount);\n                accountPending = accountPending.plus(pending.blocks[block][hash].amount);\n              }\n              // Update the actual account pending amount with this above-threshold-value\n              walletAccount.pendingBelowThreshold.push(walletAccount.pendingOriginal.minus(accountPending));\n              walletAccount.pendingBelowThreshold.shift();\n              walletAccount.pending = accountPending;\n              walletAccount.pendingRaw = accountPending.mod(this.badem);\n              walletAccount.pendingFiat = this.util.badem.rawToMbadem(accountPending).times(fiatPrice).toNumber();\n            } else {\n              walletAccount.pendingBelowThreshold.push(walletAccount.pendingOriginal);\n              walletAccount.pendingBelowThreshold.shift();\n              walletAccount.pending = new BigNumber(0);\n              walletAccount.pendingRaw = new BigNumber(0);\n              walletAccount.pendingFiat = 0;\n            }\n          }\n        }\n      } else {\n        hasPending = true; // No minimum receive, but pending balance, set true\n        walletPendingReal = walletPending;\n\n        // update the individual pending here to avoid setting it twice (GUI flickering)\n        this.updateAccountPending(accounts);\n      }\n    } else {\n      // update pending also when they are zero\n      this.updateAccountPending(accounts);\n    }\n\n    // Make sure any frontiers are in the work pool\n    // If they have no frontier, we want to use their pub key?\n    const hashes = this.wallet.accounts.map(account => account.frontier || this.util.account.getAccountPublicKey(account.id));\n    hashes.forEach(hash => this.workPool.addWorkToCache(hash));\n\n    this.wallet.balance = walletBalance;\n    this.wallet.pending = walletPendingReal;\n\n    this.wallet.balanceRaw = new BigNumber(walletBalance).mod(this.badem);\n    this.wallet.pendingRaw = new BigNumber(walletPendingReal).mod(this.badem);\n\n    this.wallet.balanceFiat = this.util.badem.rawToMbadem(walletBalance).times(fiatPrice).toNumber();\n    this.wallet.pendingFiat = this.util.badem.rawToMbadem(walletPendingReal).times(fiatPrice).toNumber();\n\n    // Save pending that will be ignored, to be displayed to the user\n    // The resons for using push and shift is to keep the reference when used in another component\n    this.wallet.pendingBelowThreshold.push(walletPending.minus(walletPendingReal));\n    this.wallet.pendingBelowThreshold.shift();\n\n    // tslint:disable-next-line\n    this.wallet.hasPending = hasPending;\n\n    if (reloadPending) {\n      this.clearPendingBlocks();\n    }\n\n    // If there is a pending balance, search for the actual pending transactions\n    if (reloadPending && walletPending.gt(0)) {\n      await this.loadPendingBlocksForWallet();\n    }\n    this.reloadingBalance = false;\n  }\n\n  updateAccountPending(accounts) {\n    for (const accountID in accounts.balances) {\n      if (!accounts.balances.hasOwnProperty(accountID)) continue;\n      const walletAccount = this.wallet.accounts.find(a => a.id === accountID);\n      if (!walletAccount) continue;\n      walletAccount.pending = new BigNumber(accounts.balances[accountID].pending);\n      walletAccount.pendingRaw = new BigNumber(walletAccount.pending).mod(this.badem);\n      walletAccount.pendingFiat = this.util.badem.rawToMbadem(walletAccount.pending).times(this.price.price.lastPrice).toNumber();\n    }\n  }\n\n  async loadWalletAccount(accountIndex, accountID) {\n    const index = accountIndex;\n    const addressBookName = this.addressBook.getAccountName(accountID);\n\n    const newAccount: WalletAccount = {\n      id: accountID,\n      frontier: null,\n      secret: null,\n      keyPair: null,\n      balance: new BigNumber(0),\n      pending: new BigNumber(0),\n      pendingBelowThreshold: [new BigNumber(0)],\n      pendingOriginal: new BigNumber(0),\n      balanceRaw: new BigNumber(0),\n      pendingRaw: new BigNumber(0),\n      balanceFiat: 0,\n      pendingFiat: 0,\n      index: index,\n      addressBookName,\n    };\n\n    this.wallet.accounts.push(newAccount);\n    this.websocket.subscribeAccounts([accountID]);\n\n    return newAccount;\n  }\n\n  async addWalletAccount(accountIndex: number|null = null, reloadBalances: boolean = true) {\n    // if (!this.wallet.seedBytes) return;\n    let index = accountIndex;\n    if (index === null) {\n      index = 0; // Use the existing number, then increment it\n\n      // Make sure the index is not being used (ie. if you delete acct 3/5, then press add twice, it goes 3, 6, 7)\n      while (this.wallet.accounts.find(a => a.index === index)) index++;\n    }\n\n    let newAccount: WalletAccount|null;\n\n    if (this.isSingleKeyWallet()) {\n      throw new Error(`Wallet consists of a single private key.`);\n    } else if (this.wallet.type === 'seed') {\n      newAccount = await this.createSeedAccount(index);\n    } else if (this.isLedgerWallet()) {\n      try {\n        newAccount = await this.createLedgerAccount(index);\n      } catch (err) {\n        // this.notifications.sendWarning(`Unable to load account from ledger.  Make sure it is connected`);\n        throw err;\n      }\n\n    }\n\n    this.wallet.accounts.push(newAccount);\n\n    if (reloadBalances) await this.reloadBalances();\n\n    this.websocket.subscribeAccounts([newAccount.id]);\n\n    this.saveWalletExport();\n\n    return newAccount;\n  }\n\n  async removeWalletAccount(accountID: string) {\n    const walletAccount = this.getWalletAccount(accountID);\n    if (!walletAccount) throw new Error(`Account is not in wallet`);\n\n    const walletAccountIndex = this.wallet.accounts.findIndex(a => a.id === accountID);\n    if (walletAccountIndex === -1) throw new Error(`Account is not in wallet`);\n\n    this.wallet.accounts.splice(walletAccountIndex, 1);\n\n    this.websocket.unsubscribeAccounts([accountID]);\n\n    // Reload the balances, save new wallet state\n    await this.reloadBalances();\n    this.saveWalletExport();\n\n    return true;\n  }\n\n  addPendingBlock(accountID, blockHash, amount, source) {\n    if (this.successfulBlocks.indexOf(blockHash) !== -1) return; // Already successful with this block\n    const existingHash = this.wallet.pendingBlocks.find(b => b.hash === blockHash);\n    if (existingHash) return; // Already added\n\n    this.wallet.pendingBlocks.push({ account: accountID, hash: blockHash, amount: amount, source: source });\n    this.wallet.hasPending = true;\n  }\n\n  // Remove a pending account from the pending list\n  async removePendingBlock(blockHash) {\n    const index = this.wallet.pendingBlocks.findIndex(b => b.hash === blockHash);\n    this.wallet.pendingBlocks.splice(index, 1);\n  }\n\n  // Clear the list of pending blocks\n  async clearPendingBlocks() {\n    this.wallet.pendingBlocks.splice(0, this.wallet.pendingBlocks.length);\n  }\n\n  async loadPendingBlocksForWallet() {\n    if (!this.wallet.accounts.length) return;\n\n    // Check minimum receive\n    let pending;\n    if (this.appSettings.settings.minimumReceive) {\n      const minAmount = this.util.badem.mbademToRaw(this.appSettings.settings.minimumReceive);\n      pending = await this.api.accountsPendingLimit(this.wallet.accounts.map(a => a.id), minAmount.toString(10));\n    } else {\n      pending = await this.api.accountsPending(this.wallet.accounts.map(a => a.id));\n    }\n    if (!pending || !pending.blocks) return;\n\n    for (const account in pending.blocks) {\n      if (!pending.blocks.hasOwnProperty(account)) continue;\n      for (const block in pending.blocks[account]) {\n        if (!pending.blocks[account].hasOwnProperty(block)) continue;\n        if (pending.blocks[account] === '') continue; // Accounts show up as nothing with threshold there...\n\n        this.addPendingBlock(account, block, pending.blocks[account][block].amount, pending.blocks[account][block].source);\n      }\n    }\n\n    if (this.wallet.pendingBlocks.length) {\n      this.processPendingBlocks();\n    }\n  }\n\n  sortByAmount(a, b) {\n    const x = new BigNumber(a.amount);\n    const y = new BigNumber(b.amount);\n    return y.comparedTo(x);\n  }\n\n  async processPendingBlocks() {\n    if (this.processingPending || this.wallet.locked || !this.wallet.pendingBlocks.length || this.appSettings.settings.pendingOption === 'manual') return;\n\n    // Sort pending by amount\n    if (this.appSettings.settings.pendingOption === 'amount') {\n      this.wallet.pendingBlocks.sort(this.sortByAmount);\n    }\n\n    this.processingPending = true;\n\n    const nextBlock = this.wallet.pendingBlocks[0];\n    if (this.successfulBlocks.find(b => b.hash === nextBlock.hash)) {\n      return setTimeout(() => this.processPendingBlocks(), 1500); // Block has already been processed\n    }\n    const walletAccount = this.getWalletAccount(nextBlock.account);\n    if (!walletAccount) return; // Dispose of the block, no matching account\n\n    const newHash = await this.bademBlock.generateReceive(walletAccount, nextBlock.hash, this.isLedgerWallet());\n    if (newHash) {\n      if (this.successfulBlocks.length >= 15) this.successfulBlocks.shift();\n      this.successfulBlocks.push(nextBlock.hash);\n\n      const receiveAmount = this.util.badem.rawToMbadem(nextBlock.amount);\n      this.notifications.sendSuccess(`Successfully received ${receiveAmount.isZero() ? '' : receiveAmount.toFixed(6)} Badem!`);\n\n      await this.reloadBalances();\n    } else {\n      if (this.isLedgerWallet()) {\n        return null; // Denied to receive, stop processing\n      }\n      return this.notifications.sendError(`There was a problem performing the receive transaction, try manually!`);\n    }\n\n    // shifting no longer needed because reloadBalances will make sure wallet.pendingBlocks is up to date\n    // keep it for now in case we remove reloadBalances above but I think it's good precaution /Json\n    // this.wallet.pendingBlocks.shift(); // Remove it after processing, to prevent attempting to receive duplicated messages\n    this.processingPending = false;\n\n    setTimeout(() => this.processPendingBlocks(), 1500);\n  }\n\n  saveWalletExport() {\n    const exportData = this.generateWalletExport();\n\n    switch (this.appSettings.settings.walletStore) {\n      case 'none':\n        this.removeWalletData();\n        break;\n      default:\n      case 'localStorage':\n        localStorage.setItem(this.storeKey, JSON.stringify(exportData));\n        break;\n    }\n  }\n\n  removeWalletData() {\n    localStorage.removeItem(this.storeKey);\n  }\n\n  generateWalletExport() {\n    const data: any = {\n      type: this.wallet.type,\n      accounts: this.wallet.accounts.map(a => ({ id: a.id, index: a.index })),\n      selectedAccountId: this.wallet.selectedAccount ? this.wallet.selectedAccount.id : null,\n    };\n\n    if (this.wallet.type === 'ledger') {\n    } else {\n      // Forcefully encrypt the seed so an unlocked wallet is never saved\n      if (!this.wallet.locked) {\n        const encryptedSeed = CryptoJS.AES.encrypt(this.wallet.seed, this.wallet.password || '');\n        data.seed = encryptedSeed.toString();\n      } else {\n        data.seed = this.wallet.seed;\n      }\n      data.locked = true;\n    }\n\n    return data;\n  }\n\n  // Run an accountInfo call for each account in the wallet to get their representatives\n  async getAccountsDetails(): Promise<WalletApiAccount[]> {\n    return await Promise.all(\n      this.wallet.accounts.map(account =>\n        this.api.accountInfo(account.id)\n          .then(res => {\n            try {\n              res.id = account.id;\n              res.addressBookName = account.addressBookName;\n            } catch {return null; }\n\n            return res;\n          })\n      )\n    );\n  }\n\n  // Subscribable event when a new wallet is created\n  informNewWallet() {\n    this.wallet.newWallet$.next(true);\n    this.wallet.newWallet$.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {AppSettingsService} from './app-settings.service';\n\n@Injectable()\nexport class WebsocketService {\n\n  queuedCommands = [];\n\n  keepaliveTimeout = 60 * 1000;\n  reconnectTimeout = 5 * 1000;\n\n  keepaliveSet = false;\n\n  socket = {\n    connected: false,\n    ws: null,\n  };\n\n  subscribedAccounts = [];\n\n  newTransactions$ = new BehaviorSubject(null);\n\n  constructor(private appSettings: AppSettingsService) { }\n\n  forceReconnect() {\n    console.log('Reconnecting Websocket...');\n    if (this.socket.connected && this.socket.ws) {\n      // Override the onclose event so it doesnt try to reconnect the old instance\n      this.socket.ws.onclose = event => {\n      };\n      this.socket.ws.close();\n      delete this.socket.ws;\n      this.socket.connected = false;\n    }\n\n    setTimeout(() => this.connect(), 250);\n  }\n\n  connect() {\n    if (this.socket.connected && this.socket.ws) {\n      // Already connected\n      return;\n    }\n    if (!this.appSettings.settings.serverWS) {\n      console.log('No Websocket server available.');\n      return;\n    }\n    delete this.socket.ws; // Maybe this will erase old connections\n\n    const wsUrl = this.appSettings.settings.serverWS;\n    const ws = new WebSocket(wsUrl);\n    this.socket.ws = ws;\n\n    ws.onopen = event => {\n      this.socket.connected = true;\n      this.queuedCommands.forEach(queueevent => ws.send(JSON.stringify(queueevent)));\n\n      // Resubscribe to accounts?\n      if (this.subscribedAccounts.length) {\n        this.subscribeAccounts(this.subscribedAccounts);\n      }\n\n      if (!this.keepaliveSet) {\n        this.keepalive(); // Start keepalives!\n      }\n    };\n    ws.onerror = event => {\n      // this.socket.connected = false;\n      console.log(`Socket error`, event);\n    };\n    ws.onclose = event => {\n      this.socket.connected = false;\n      console.log(`Socket close`, event);\n\n      // Start attempting to recconect\n      setTimeout(() => this.attemptReconnect(), this.reconnectTimeout);\n    };\n    ws.onmessage = event => {\n      try {\n        const newEvent = JSON.parse(event.data);\n        console.log('WS', newEvent);\n\n        if (newEvent.topic === 'confirmation' && newEvent.message.block.subtype === 'send') {\n          this.newTransactions$.next(newEvent.message);\n        }\n      } catch (err) {\n        console.log(`Error parsing message`, err);\n      }\n    };\n  }\n\n  attemptReconnect() {\n    this.connect();\n    if (this.reconnectTimeout < 30 * 1000) {\n      this.reconnectTimeout += 5 * 1000; // Slowly increase the timeout up to 30 seconds\n    }\n  }\n\n  keepalive() {\n    this.keepaliveSet = true;\n    if (this.socket.connected) {\n      this.socket.ws.send(JSON.stringify({ action: 'ping' }));\n    }\n\n    setTimeout(() => {\n      this.keepalive();\n    }, this.keepaliveTimeout);\n  }\n\n\n\n  subscribeAccounts(accountIDs: string[]) {\n    const event = {\n      action: 'subscribe',\n      topic: 'confirmation',\n      options: {\n        accounts: accountIDs\n      }\n    };\n\n    accountIDs.forEach(account => {\n      if (this.subscribedAccounts.indexOf(account) === -1) {\n        this.subscribedAccounts.push(account); // Keep a unique list of subscriptions for reconnecting\n      }\n    });\n    if (!this.socket.connected) {\n      this.queuedCommands.push(event);\n      if (this.queuedCommands.length >= 3) {\n        this.queuedCommands.shift(); // Prune queued commands\n      }\n      return;\n    }\n    this.socket.ws.send(JSON.stringify(event));\n  }\n\n  unsubscribeAccounts(accountIDs: string[]) {\n    const event = {\n      action: 'unsubscribe',\n      topic: 'confirmation',\n      options: {\n        accounts: accountIDs\n      }\n    };\n\n    accountIDs.forEach(account => {\n      const existingIndex = this.subscribedAccounts.indexOf(account);\n      if (existingIndex !== -1) {\n        this.subscribedAccounts.splice(existingIndex, 1); // Remove from our internal subscription list\n      }\n    });\n    // If we aren't connected, we don't need to do anything.  On reconnect, it won't subscribe.\n    if (this.socket.connected) {\n      this.socket.ws.send(JSON.stringify(event));\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {PowService, baseThreshold} from './pow.service';\nimport {NotificationService} from './notification.service';\nimport {UtilService} from './util.service';\n\n@Injectable()\nexport class WorkPoolService {\n  storeKey = `nanovault-workcache`;\n\n  cacheLength = 25;\n  workCache = [];\n\n  constructor(private pow: PowService, private notifications: NotificationService, private util: UtilService) { }\n\n  public workExists(hash) {\n    return !!this.workCache.find(p => p.hash === hash);\n  }\n\n  // A simple helper, which doesn't wait for a response (Used for pre-loading work)\n  public addWorkToCache(hash, multiplier= 1) {\n    this.getWork(hash, multiplier);\n  }\n\n  // Remove a hash from from the cache\n  public removeFromCache(hash) {\n    const cachedIndex = this.workCache.findIndex(p => p.hash === hash);\n    if (cachedIndex === -1) return;\n\n    this.workCache.splice(cachedIndex, 1);\n    this.saveWorkCache();\n  }\n\n  public clearCache() {\n    this.workCache = [];\n    this.saveWorkCache();\n\n    return true;\n  }\n\n  public deleteCache() {\n    this.workCache = [];\n    localStorage.removeItem(this.storeKey);\n  }\n\n  // Get work for a hash.  Uses the cache, or the current setting for generating it.\n  public async getWork(hash, multiplier= 1) {\n    const cached = this.workCache.find(p => p.hash === hash);\n    if (cached && cached.work && this.util.badem.validateWork(hash, baseThreshold, cached.work)) {\n      console.log('Using cached work: ' + cached.work);\n      return cached.work;\n    }\n\n    const work = await this.pow.getPow(hash, multiplier);\n    if (!work) {\n      this.notifications.sendWarning(`Failed to retrieve work for ${hash}.  Try a different PoW method.`);\n      return null;\n    }\n\n    console.log('Work found: ' + work);\n    this.workCache.push({ hash, work });\n    if (this.workCache.length >= this.cacheLength) this.workCache.shift(); // Prune if we are at max length\n    this.saveWorkCache();\n\n    return work;\n  }\n\n  /**\n   * Save the work cache to localStorage\n   */\n  private saveWorkCache() {\n    // Remove duplicates by keeping the last updated work\n    this.workCache = this.uniqByKeepLast(this.workCache, it => it.hash);\n\n    localStorage.setItem(this.storeKey, JSON.stringify(this.workCache));\n  }\n\n  /**\n   * Load the work cache from localStorage\n   */\n  public loadWorkCache() {\n    let workCache = [];\n    const workCacheStore = localStorage.getItem(this.storeKey);\n    if (workCacheStore) {\n      workCache = JSON.parse(workCacheStore);\n    }\n    this.workCache = workCache;\n\n    return this.workCache;\n  }\n\n  /**\n   * Remove duplicates but keep the last one\n   * @param a array\n   * @param key it => it.hash\n   */\n  private uniqByKeepLast(a, key) {\n    return [\n        ...new Map(\n            a.map(x => [key(x), x])\n        ).values()\n    ];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {WalletService} from '../services/wallet.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  donationAccount = `badem_3niceeeyiaa86k58zhaeygxfkuzgffjtwju9ep33z9c8qekmr3iuc95jbqc8`;\n\n  wallet = this.walletService.wallet;\n  isConfigured = this.walletService.isConfigured;\n\n  constructor(private walletService: WalletService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div uk-grid>\n  <div class=\"uk-width-1-1 uk-animation-slide-left-small\">\n    <div uk-grid class=\"uk-text-center\" style=\"margin-bottom: 90px;\">\n      <div class=\"uk-width-1-1\" style=\"margin-top: 45px;\">\n        <img src=\"assets/img/nault-logo.svg\" width=\"250px\" style=\"display: block; margin: 0 auto 20px auto;\" alt=\"Logo\"/>\n        <span class=\"uk-text-lead\">A secure open source wallet for Badem</span><br>\n      </div>\n      <div class=\"uk-width-1-1\" *ngIf=\"!isConfigured()\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\">\n            <span class=\"uk-text-small\">To get started, choose an option below to configure your wallet</span>\n          </div>\n          <div class=\"uk-width-1-2@m\">\n            <button routerLink=\"/configure-wallet\" class=\"uk-button uk-button-primary uk-width-1-1 uk-button-large\">Create A New Wallet</button>\n          </div>\n          <div class=\"uk-width-1-2@m\">\n            <button routerLink=\"/configure-wallet\" [queryParams]=\"{ import: 1}\" class=\"uk-button uk-button-primary uk-width-1-1 uk-button-large\">Import An Existing Wallet</button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"uk-width-1-1\" *ngIf=\"isConfigured()\">\n        <div uk-grid>\n          <div class=\"uk-width-1-1\" style=\"margin-top: 10px;\">\n            <span class=\"uk-text-small\">Welcome back!  It looks like your wallet is already configured.</span>\n          </div>\n          <div class=\"uk-width-1-1@m\">\n            <button routerLink=\"/accounts\" class=\"uk-button uk-button-primary uk-width-1-1 uk-button-large\">View My Accounts</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n      <div class=\"uk-width-1-1\">\n\n        <hr class=\"uk-divider-icon\">\n\n        <div class=\"uk-card uk-card-small uk-card-default uk-margin uk-width-1-1\">\n          <div class=\"uk-card-body uk-text-center\">\n            BademVault is open source and all code is available at <a href=\"https://github.com/bademcurrency/BademVault\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/bademcurrency/BademVault</a>.<br>\n            Please submit any feedback or bug reports on our GitHub page.  Thank you for using BademVault!\n          </div>\n        </div>\n\n        <div class=\"uk-text-center uk-text-small uk-text-truncate\">\n          Donation Address: <a [routerLink]=\"'/send'\" [queryParams]=\"{ to: donationAccount }\">{{ donationAccount }}</a>\n        </div>\n      </div>\n    </div>\n</div>\n\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  desktop: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}